{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/evyshen/DATASCI_112/blob/main/DATASCI_112_Final_Project_Data_Collection.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Import Webscraping Packages**"
      ],
      "metadata": {
        "id": "kU4AWryD4VdA"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "UrLcnym9RzLi",
        "outputId": "3f69338f-d50c-4a1a-fe57-4cc41951d86b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting selenium\n",
            "  Downloading selenium-4.33.0-py3-none-any.whl.metadata (7.5 kB)\n",
            "Collecting webdriver-manager\n",
            "  Downloading webdriver_manager-4.0.2-py2.py3-none-any.whl.metadata (12 kB)\n",
            "Requirement already satisfied: urllib3~=2.4.0 in /usr/local/lib/python3.11/dist-packages (from urllib3[socks]~=2.4.0->selenium) (2.4.0)\n",
            "Collecting trio~=0.30.0 (from selenium)\n",
            "  Downloading trio-0.30.0-py3-none-any.whl.metadata (8.5 kB)\n",
            "Collecting trio-websocket~=0.12.2 (from selenium)\n",
            "  Downloading trio_websocket-0.12.2-py3-none-any.whl.metadata (5.1 kB)\n",
            "Requirement already satisfied: certifi>=2025.4.26 in /usr/local/lib/python3.11/dist-packages (from selenium) (2025.4.26)\n",
            "Requirement already satisfied: typing_extensions~=4.13.2 in /usr/local/lib/python3.11/dist-packages (from selenium) (4.13.2)\n",
            "Requirement already satisfied: websocket-client~=1.8.0 in /usr/local/lib/python3.11/dist-packages (from selenium) (1.8.0)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (from webdriver-manager) (2.32.3)\n",
            "Collecting python-dotenv (from webdriver-manager)\n",
            "  Downloading python_dotenv-1.1.0-py3-none-any.whl.metadata (24 kB)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from webdriver-manager) (24.2)\n",
            "Requirement already satisfied: attrs>=23.2.0 in /usr/local/lib/python3.11/dist-packages (from trio~=0.30.0->selenium) (25.3.0)\n",
            "Requirement already satisfied: sortedcontainers in /usr/local/lib/python3.11/dist-packages (from trio~=0.30.0->selenium) (2.4.0)\n",
            "Requirement already satisfied: idna in /usr/local/lib/python3.11/dist-packages (from trio~=0.30.0->selenium) (3.10)\n",
            "Collecting outcome (from trio~=0.30.0->selenium)\n",
            "  Downloading outcome-1.3.0.post0-py2.py3-none-any.whl.metadata (2.6 kB)\n",
            "Requirement already satisfied: sniffio>=1.3.0 in /usr/local/lib/python3.11/dist-packages (from trio~=0.30.0->selenium) (1.3.1)\n",
            "Collecting wsproto>=0.14 (from trio-websocket~=0.12.2->selenium)\n",
            "  Downloading wsproto-1.2.0-py3-none-any.whl.metadata (5.6 kB)\n",
            "Requirement already satisfied: pysocks!=1.5.7,<2.0,>=1.5.6 in /usr/local/lib/python3.11/dist-packages (from urllib3[socks]~=2.4.0->selenium) (1.7.1)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests->webdriver-manager) (3.4.2)\n",
            "Requirement already satisfied: h11<1,>=0.9.0 in /usr/local/lib/python3.11/dist-packages (from wsproto>=0.14->trio-websocket~=0.12.2->selenium) (0.16.0)\n",
            "Downloading selenium-4.33.0-py3-none-any.whl (9.4 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m9.4/9.4 MB\u001b[0m \u001b[31m37.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading webdriver_manager-4.0.2-py2.py3-none-any.whl (27 kB)\n",
            "Downloading trio-0.30.0-py3-none-any.whl (499 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m499.2/499.2 kB\u001b[0m \u001b[31m19.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading trio_websocket-0.12.2-py3-none-any.whl (21 kB)\n",
            "Downloading python_dotenv-1.1.0-py3-none-any.whl (20 kB)\n",
            "Downloading outcome-1.3.0.post0-py2.py3-none-any.whl (10 kB)\n",
            "Downloading wsproto-1.2.0-py3-none-any.whl (24 kB)\n",
            "Installing collected packages: wsproto, python-dotenv, outcome, webdriver-manager, trio, trio-websocket, selenium\n",
            "Successfully installed outcome-1.3.0.post0 python-dotenv-1.1.0 selenium-4.33.0 trio-0.30.0 trio-websocket-0.12.2 webdriver-manager-4.0.2 wsproto-1.2.0\n",
            "Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).\n",
            "OK\n",
            "Get:1 http://security.ubuntu.com/ubuntu jammy-security InRelease [129 kB]\n",
            "Hit:2 http://archive.ubuntu.com/ubuntu jammy InRelease\n",
            "Get:3 http://archive.ubuntu.com/ubuntu jammy-updates InRelease [128 kB]\n",
            "Get:4 http://archive.ubuntu.com/ubuntu jammy-backports InRelease [127 kB]\n",
            "Get:5 https://cloud.r-project.org/bin/linux/ubuntu jammy-cran40/ InRelease [3,632 B]\n",
            "Get:6 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64  InRelease [1,581 B]\n",
            "Get:7 https://r2u.stat.illinois.edu/ubuntu jammy InRelease [6,555 B]\n",
            "Get:8 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 Packages [3,290 kB]\n",
            "Get:9 http://archive.ubuntu.com/ubuntu jammy-updates/restricted amd64 Packages [4,622 kB]\n",
            "Get:10 http://dl.google.com/linux/chrome/deb stable InRelease [1,825 B]\n",
            "Get:11 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 Packages [1,553 kB]\n",
            "Get:12 http://security.ubuntu.com/ubuntu jammy-security/main amd64 Packages [2,953 kB]\n",
            "Get:13 http://security.ubuntu.com/ubuntu jammy-security/universe amd64 Packages [1,245 kB]\n",
            "Get:14 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64  Packages [1,724 kB]\n",
            "Get:15 https://r2u.stat.illinois.edu/ubuntu jammy/main all Packages [8,992 kB]\n",
            "Get:16 https://r2u.stat.illinois.edu/ubuntu jammy/main amd64 Packages [2,735 kB]\n",
            "Hit:17 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy InRelease\n",
            "Get:18 http://dl.google.com/linux/chrome/deb stable/main amd64 Packages [1,207 B]\n",
            "Hit:19 https://ppa.launchpadcontent.net/graphics-drivers/ppa/ubuntu jammy InRelease\n",
            "Hit:20 https://ppa.launchpadcontent.net/ubuntugis/ppa/ubuntu jammy InRelease\n",
            "Fetched 27.5 MB in 3s (10.1 MB/s)\n",
            "Reading package lists... Done\n",
            "W: Skipping acquire of configured file 'main/source/Sources' as repository 'https://r2u.stat.illinois.edu/ubuntu jammy InRelease' does not seem to provide it (sources.list entry misspelt?)\n",
            "W: http://dl.google.com/linux/chrome/deb/dists/stable/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.\n",
            "Reading package lists... Done\n",
            "Building dependency tree... Done\n",
            "Reading state information... Done\n",
            "The following additional packages will be installed:\n",
            "  libvulkan1 mesa-vulkan-drivers\n",
            "The following NEW packages will be installed:\n",
            "  google-chrome-stable libvulkan1 mesa-vulkan-drivers\n",
            "0 upgraded, 3 newly installed, 0 to remove and 38 not upgraded.\n",
            "Need to get 128 MB of archives.\n",
            "After this operation, 435 MB of additional disk space will be used.\n",
            "Get:1 http://archive.ubuntu.com/ubuntu jammy/main amd64 libvulkan1 amd64 1.3.204.1-2 [128 kB]\n",
            "Get:2 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 mesa-vulkan-drivers amd64 23.2.1-1ubuntu3.1~22.04.3 [10.7 MB]\n",
            "Get:3 http://dl.google.com/linux/chrome/deb stable/main amd64 google-chrome-stable amd64 137.0.7151.68-1 [117 MB]\n",
            "Fetched 128 MB in 2s (56.7 MB/s)\n",
            "debconf: unable to initialize frontend: Dialog\n",
            "debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 78, <> line 3.)\n",
            "debconf: falling back to frontend: Readline\n",
            "debconf: unable to initialize frontend: Readline\n",
            "debconf: (This frontend requires a controlling tty.)\n",
            "debconf: falling back to frontend: Teletype\n",
            "dpkg-preconfigure: unable to re-open stdin: \n",
            "Selecting previously unselected package libvulkan1:amd64.\n",
            "(Reading database ... 126109 files and directories currently installed.)\n",
            "Preparing to unpack .../libvulkan1_1.3.204.1-2_amd64.deb ...\n",
            "Unpacking libvulkan1:amd64 (1.3.204.1-2) ...\n",
            "Selecting previously unselected package google-chrome-stable.\n",
            "Preparing to unpack .../google-chrome-stable_137.0.7151.68-1_amd64.deb ...\n",
            "Unpacking google-chrome-stable (137.0.7151.68-1) ...\n",
            "Selecting previously unselected package mesa-vulkan-drivers:amd64.\n",
            "Preparing to unpack .../mesa-vulkan-drivers_23.2.1-1ubuntu3.1~22.04.3_amd64.deb ...\n",
            "Unpacking mesa-vulkan-drivers:amd64 (23.2.1-1ubuntu3.1~22.04.3) ...\n",
            "Setting up libvulkan1:amd64 (1.3.204.1-2) ...\n",
            "Setting up mesa-vulkan-drivers:amd64 (23.2.1-1ubuntu3.1~22.04.3) ...\n",
            "Setting up google-chrome-stable (137.0.7151.68-1) ...\n",
            "update-alternatives: using /usr/bin/google-chrome-stable to provide /usr/bin/x-www-browser (x-www-browser) in auto mode\n",
            "update-alternatives: using /usr/bin/google-chrome-stable to provide /usr/bin/gnome-www-browser (gnome-www-browser) in auto mode\n",
            "update-alternatives: using /usr/bin/google-chrome-stable to provide /usr/bin/google-chrome (google-chrome) in auto mode\n",
            "Processing triggers for man-db (2.10.2-1) ...\n",
            "Processing triggers for mailcap (3.70+nmu1ubuntu1) ...\n",
            "Processing triggers for libc-bin (2.35-0ubuntu3.8) ...\n",
            "/sbin/ldconfig.real: /usr/local/lib/libtbbmalloc_proxy.so.2 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libtcm.so.1 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libtbbmalloc.so.2 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libtbbbind.so.3 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libtcm_debug.so.1 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libumf.so.0 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libur_adapter_level_zero.so.0 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libhwloc.so.15 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libur_loader.so.0 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libur_adapter_opencl.so.0 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libtbbbind_2_0.so.3 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libtbbbind_2_5.so.3 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libtbb.so.12 is not a symbolic link\n",
            "\n",
            "Reading package lists... Done\n",
            "Building dependency tree... Done\n",
            "Reading state information... Done\n",
            "The following additional packages will be installed:\n",
            "  apparmor chromium-browser libfuse3-3 libudev1 snapd squashfs-tools\n",
            "  systemd-hwe-hwdb udev\n",
            "Suggested packages:\n",
            "  apparmor-profiles-extra apparmor-utils fuse3 zenity | kdialog\n",
            "The following NEW packages will be installed:\n",
            "  apparmor chromium-browser chromium-chromedriver libfuse3-3 snapd\n",
            "  squashfs-tools systemd-hwe-hwdb udev\n",
            "The following packages will be upgraded:\n",
            "  libudev1\n",
            "1 upgraded, 8 newly installed, 0 to remove and 37 not upgraded.\n",
            "Need to get 30.3 MB of archives.\n",
            "After this operation, 123 MB of additional disk space will be used.\n",
            "Get:1 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 apparmor amd64 3.0.4-2ubuntu2.4 [598 kB]\n",
            "Get:2 http://archive.ubuntu.com/ubuntu jammy/main amd64 squashfs-tools amd64 1:4.5-3build1 [159 kB]\n",
            "Get:3 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 libudev1 amd64 249.11-0ubuntu3.15 [76.6 kB]\n",
            "Get:4 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 udev amd64 249.11-0ubuntu3.15 [1,557 kB]\n",
            "Get:5 http://archive.ubuntu.com/ubuntu jammy/main amd64 libfuse3-3 amd64 3.10.5-1build1 [81.2 kB]\n",
            "Get:6 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 snapd amd64 2.67.1+22.04 [27.8 MB]\n",
            "Get:7 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 chromium-browser amd64 1:85.0.4183.83-0ubuntu2.22.04.1 [49.2 kB]\n",
            "Get:8 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 chromium-chromedriver amd64 1:85.0.4183.83-0ubuntu2.22.04.1 [2,308 B]\n",
            "Get:9 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 systemd-hwe-hwdb all 249.11.5 [3,228 B]\n",
            "Fetched 30.3 MB in 1s (40.8 MB/s)\n",
            "Preconfiguring packages ...\n",
            "Selecting previously unselected package apparmor.\n",
            "(Reading database ... 126265 files and directories currently installed.)\n",
            "Preparing to unpack .../apparmor_3.0.4-2ubuntu2.4_amd64.deb ...\n",
            "Unpacking apparmor (3.0.4-2ubuntu2.4) ...\n",
            "Selecting previously unselected package squashfs-tools.\n",
            "Preparing to unpack .../squashfs-tools_1%3a4.5-3build1_amd64.deb ...\n",
            "Unpacking squashfs-tools (1:4.5-3build1) ...\n",
            "Preparing to unpack .../libudev1_249.11-0ubuntu3.15_amd64.deb ...\n",
            "Unpacking libudev1:amd64 (249.11-0ubuntu3.15) over (249.11-0ubuntu3.12) ...\n",
            "Setting up libudev1:amd64 (249.11-0ubuntu3.15) ...\n",
            "Selecting previously unselected package udev.\n",
            "(Reading database ... 126465 files and directories currently installed.)\n",
            "Preparing to unpack .../udev_249.11-0ubuntu3.15_amd64.deb ...\n",
            "Unpacking udev (249.11-0ubuntu3.15) ...\n",
            "Selecting previously unselected package libfuse3-3:amd64.\n",
            "Preparing to unpack .../libfuse3-3_3.10.5-1build1_amd64.deb ...\n",
            "Unpacking libfuse3-3:amd64 (3.10.5-1build1) ...\n",
            "Selecting previously unselected package snapd.\n",
            "Preparing to unpack .../snapd_2.67.1+22.04_amd64.deb ...\n",
            "Unpacking snapd (2.67.1+22.04) ...\n",
            "Setting up apparmor (3.0.4-2ubuntu2.4) ...\n",
            "Created symlink /etc/systemd/system/sysinit.target.wants/apparmor.service → /lib/systemd/system/apparmor.service.\n",
            "Setting up squashfs-tools (1:4.5-3build1) ...\n",
            "Setting up udev (249.11-0ubuntu3.15) ...\n",
            "invoke-rc.d: could not determine current runlevel\n",
            "invoke-rc.d: policy-rc.d denied execution of start.\n",
            "Setting up libfuse3-3:amd64 (3.10.5-1build1) ...\n",
            "Setting up snapd (2.67.1+22.04) ...\n",
            "Created symlink /etc/systemd/system/multi-user.target.wants/snapd.apparmor.service → /lib/systemd/system/snapd.apparmor.service.\n",
            "Created symlink /etc/systemd/system/multi-user.target.wants/snapd.autoimport.service → /lib/systemd/system/snapd.autoimport.service.\n",
            "Created symlink /etc/systemd/system/multi-user.target.wants/snapd.core-fixup.service → /lib/systemd/system/snapd.core-fixup.service.\n",
            "Created symlink /etc/systemd/system/multi-user.target.wants/snapd.recovery-chooser-trigger.service → /lib/systemd/system/snapd.recovery-chooser-trigger.service.\n",
            "Created symlink /etc/systemd/system/multi-user.target.wants/snapd.seeded.service → /lib/systemd/system/snapd.seeded.service.\n",
            "Created symlink /etc/systemd/system/cloud-final.service.wants/snapd.seeded.service → /lib/systemd/system/snapd.seeded.service.\n",
            "Unit /lib/systemd/system/snapd.seeded.service is added as a dependency to a non-existent unit cloud-final.service.\n",
            "Created symlink /etc/systemd/system/multi-user.target.wants/snapd.service → /lib/systemd/system/snapd.service.\n",
            "Created symlink /etc/systemd/system/timers.target.wants/snapd.snap-repair.timer → /lib/systemd/system/snapd.snap-repair.timer.\n",
            "Created symlink /etc/systemd/system/sockets.target.wants/snapd.socket → /lib/systemd/system/snapd.socket.\n",
            "Created symlink /etc/systemd/system/final.target.wants/snapd.system-shutdown.service → /lib/systemd/system/snapd.system-shutdown.service.\n",
            "Selecting previously unselected package chromium-browser.\n",
            "(Reading database ... 126694 files and directories currently installed.)\n",
            "Preparing to unpack .../chromium-browser_1%3a85.0.4183.83-0ubuntu2.22.04.1_amd64.deb ...\n",
            "=> Installing the chromium snap\n",
            "==> Checking connectivity with the snap store\n",
            "===> System doesn't have a working snapd, skipping\n",
            "Unpacking chromium-browser (1:85.0.4183.83-0ubuntu2.22.04.1) ...\n",
            "Selecting previously unselected package chromium-chromedriver.\n",
            "Preparing to unpack .../chromium-chromedriver_1%3a85.0.4183.83-0ubuntu2.22.04.1_amd64.deb ...\n",
            "Unpacking chromium-chromedriver (1:85.0.4183.83-0ubuntu2.22.04.1) ...\n",
            "Selecting previously unselected package systemd-hwe-hwdb.\n",
            "Preparing to unpack .../systemd-hwe-hwdb_249.11.5_all.deb ...\n",
            "Unpacking systemd-hwe-hwdb (249.11.5) ...\n",
            "Setting up systemd-hwe-hwdb (249.11.5) ...\n",
            "Setting up chromium-browser (1:85.0.4183.83-0ubuntu2.22.04.1) ...\n",
            "Setting up chromium-chromedriver (1:85.0.4183.83-0ubuntu2.22.04.1) ...\n",
            "Processing triggers for udev (249.11-0ubuntu3.15) ...\n",
            "Processing triggers for mailcap (3.70+nmu1ubuntu1) ...\n",
            "Processing triggers for hicolor-icon-theme (0.17-2) ...\n",
            "Processing triggers for libc-bin (2.35-0ubuntu3.8) ...\n",
            "/sbin/ldconfig.real: /usr/local/lib/libtbbmalloc_proxy.so.2 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libtcm.so.1 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libtbbmalloc.so.2 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libtbbbind.so.3 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libtcm_debug.so.1 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libumf.so.0 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libur_adapter_level_zero.so.0 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libhwloc.so.15 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libur_loader.so.0 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libur_adapter_opencl.so.0 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libtbbbind_2_0.so.3 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libtbbbind_2_5.so.3 is not a symbolic link\n",
            "\n",
            "/sbin/ldconfig.real: /usr/local/lib/libtbb.so.12 is not a symbolic link\n",
            "\n",
            "Processing triggers for man-db (2.10.2-1) ...\n",
            "Processing triggers for dbus (1.12.20-2ubuntu4.1) ...\n",
            "cp: '/usr/lib/chromium-browser/chromedriver' and '/usr/bin/chromedriver' are the same file\n",
            "Requirement already satisfied: selenium in /usr/local/lib/python3.11/dist-packages (4.33.0)\n",
            "Requirement already satisfied: webdriver-manager in /usr/local/lib/python3.11/dist-packages (4.0.2)\n",
            "Requirement already satisfied: urllib3~=2.4.0 in /usr/local/lib/python3.11/dist-packages (from urllib3[socks]~=2.4.0->selenium) (2.4.0)\n",
            "Requirement already satisfied: trio~=0.30.0 in /usr/local/lib/python3.11/dist-packages (from selenium) (0.30.0)\n",
            "Requirement already satisfied: trio-websocket~=0.12.2 in /usr/local/lib/python3.11/dist-packages (from selenium) (0.12.2)\n",
            "Requirement already satisfied: certifi>=2025.4.26 in /usr/local/lib/python3.11/dist-packages (from selenium) (2025.4.26)\n",
            "Requirement already satisfied: typing_extensions~=4.13.2 in /usr/local/lib/python3.11/dist-packages (from selenium) (4.13.2)\n",
            "Requirement already satisfied: websocket-client~=1.8.0 in /usr/local/lib/python3.11/dist-packages (from selenium) (1.8.0)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (from webdriver-manager) (2.32.3)\n",
            "Requirement already satisfied: python-dotenv in /usr/local/lib/python3.11/dist-packages (from webdriver-manager) (1.1.0)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from webdriver-manager) (24.2)\n",
            "Requirement already satisfied: attrs>=23.2.0 in /usr/local/lib/python3.11/dist-packages (from trio~=0.30.0->selenium) (25.3.0)\n",
            "Requirement already satisfied: sortedcontainers in /usr/local/lib/python3.11/dist-packages (from trio~=0.30.0->selenium) (2.4.0)\n",
            "Requirement already satisfied: idna in /usr/local/lib/python3.11/dist-packages (from trio~=0.30.0->selenium) (3.10)\n",
            "Requirement already satisfied: outcome in /usr/local/lib/python3.11/dist-packages (from trio~=0.30.0->selenium) (1.3.0.post0)\n",
            "Requirement already satisfied: sniffio>=1.3.0 in /usr/local/lib/python3.11/dist-packages (from trio~=0.30.0->selenium) (1.3.1)\n",
            "Requirement already satisfied: wsproto>=0.14 in /usr/local/lib/python3.11/dist-packages (from trio-websocket~=0.12.2->selenium) (1.2.0)\n",
            "Requirement already satisfied: pysocks!=1.5.7,<2.0,>=1.5.6 in /usr/local/lib/python3.11/dist-packages (from urllib3[socks]~=2.4.0->selenium) (1.7.1)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests->webdriver-manager) (3.4.2)\n",
            "Requirement already satisfied: h11<1,>=0.9.0 in /usr/local/lib/python3.11/dist-packages (from wsproto>=0.14->trio-websocket~=0.12.2->selenium) (0.16.0)\n"
          ]
        }
      ],
      "source": [
        "# Install Web Driver\n",
        "!pip install selenium webdriver-manager\n",
        "\n",
        "# Install Chrome and Chromium Driver\n",
        "!wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -\n",
        "!sudo sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list'\n",
        "!sudo apt-get update\n",
        "!sudo apt-get install -y google-chrome-stable\n",
        "!apt install chromium-chromedriver\n",
        "!cp /usr/lib/chromium-browser/chromedriver /usr/bin\n",
        "!pip install selenium webdriver-manager\n",
        "\n",
        "# Selenium setup with proper binary location\n",
        "from selenium import webdriver\n",
        "from selenium.webdriver.chrome.service import Service\n",
        "from webdriver_manager.chrome import ChromeDriverManager\n",
        "from selenium.webdriver.common.by import By\n",
        "from selenium.webdriver.support.ui import WebDriverWait\n",
        "from selenium.webdriver.support import expected_conditions as EC\n",
        "import time\n",
        "\n",
        "# ChromeOptions setup\n",
        "options = webdriver.ChromeOptions()\n",
        "options.add_argument('--headless')\n",
        "options.add_argument('--no-sandbox')\n",
        "options.add_argument('--disable-dev-shm-usage')\n",
        "options.binary_location = '/usr/bin/google-chrome'"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Scrape RateMyProfessors.com Student Ratings & Reviews**"
      ],
      "metadata": {
        "id": "fCCUAkX64edD"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": true,
        "id": "3ltR5TDGN7hG"
      },
      "outputs": [],
      "source": [
        "# Launch browser\n",
        "driver = webdriver.Chrome(service = Service(ChromeDriverManager().install()),\n",
        "                          options = options)\n",
        "\n",
        "# Click 'Show More' until all professors are visible\n",
        "driver.get('https://www.ratemyprofessors.com/search/professors/953?q=*')\n",
        "\n",
        "while True:\n",
        "    try:\n",
        "        show_more_button = WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.XPATH, \"//button[contains(., 'Show More')]\")))\n",
        "        show_more_button.click()\n",
        "        time.sleep(0.1)\n",
        "\n",
        "    except:\n",
        "        break"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Import necessary packages\n",
        "import requests\n",
        "from bs4 import BeautifulSoup\n",
        "import pandas as pd\n",
        "import re"
      ],
      "metadata": {
        "id": "ur--DPke4pFy"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "_2mMmTC4PXEr"
      },
      "outputs": [],
      "source": [
        "# Define variables for HTML and parsed HTML\n",
        "html = driver.page_source\n",
        "soup = BeautifulSoup(html,'html.parser')\n",
        "\n",
        "# Scrape all professor links\n",
        "base_url = 'https://www.ratemyprofessors.com'\n",
        "professor_links = []\n",
        "ratings = []\n",
        "\n",
        "for link in soup.find_all('a', class_ = 'TeacherCard__StyledTeacherCard-syjs0d-0', href = True):\n",
        "    full_url = base_url + link['href']\n",
        "    professor_links.append(full_url)\n",
        "    time.sleep(0.1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "B7UyPngcuLxQ"
      },
      "outputs": [],
      "source": [
        "# Establish header to abide by ethical standards\n",
        "headers = {'User-Agent' :\n",
        "           'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) \\\n",
        "           AppleWebKit/605.1.15 (KHTML, like Gecko) \\\n",
        "           Version/18.5 Safari/605.1.15'}\n",
        "\n",
        "# Scrape student reviews, overall rating, and number of ratings for each professor\n",
        "professors_data = []\n",
        "\n",
        "for url in professor_links:\n",
        "  response = requests.get(url, headers = headers)\n",
        "\n",
        "  # Collect the top tags\n",
        "  top_tags = []\n",
        "\n",
        "  # Parse page source with BeautifulSoup\n",
        "  soup = BeautifulSoup(response.text, 'html.parser')\n",
        "\n",
        "  # Extract name\n",
        "  name_span = soup.find('span', class_='HeaderDescription__NameWrapper-sc-1lt205f-5')\n",
        "  full_name = name_span.get_text(separator=' ', strip=True)\n",
        "\n",
        "  # Extract comments using regex\n",
        "  comments = re.findall(r'\"comment\":\"(.*?)\"', soup.prettify())\n",
        "\n",
        "  # Extract rating using regex\n",
        "  rating_match = re.search(r'\"avgRating\":([\\d.]+)', soup.prettify())\n",
        "  rating = float(rating_match.group(1)) if rating_match else None\n",
        "\n",
        "  # Extract difficulty rating using regex\n",
        "  diff_rating_match = re.search(r'\"avgDifficulty\":([\\d.]+)', soup.prettify())\n",
        "  diff_rating = float(diff_rating_match.group(1)) if diff_rating_match else None\n",
        "\n",
        "  # Extract number of ratings\n",
        "  num_ratings_match = re.search(r'\"numRatings\":(\\d+)', soup.prettify())\n",
        "  num_ratings = int(num_ratings_match.group(1)) if num_ratings_match else None\n",
        "\n",
        "  # Find the container with the top tags\n",
        "  tags_container = soup.find(\"div\", class_=\"TeacherTags__TagsContainer-sc-16vmh1y-0\")\n",
        "\n",
        "  # Extract all the tag text from <span> elements inside it\n",
        "  if tags_container:\n",
        "      spans = tags_container.find_all(\"span\", class_=\"Tag-bs9vf4-0 bmtbjB\")\n",
        "      top_tags = [span.get_text(strip=True) for span in spans]\n",
        "\n",
        "\n",
        "  professors_data.append({'Professor': full_name,\n",
        "                          'Student Reviews': comments,\n",
        "                          'Overall Rating': rating,\n",
        "                          'Difficulty Rating': diff_rating,\n",
        "                          'Num Ratings': num_ratings,\n",
        "                          'Top Tags': top_tags})\n",
        "\n",
        "  time.sleep(0.1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": true,
        "id": "ayQ5dCoaclwa",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "14ea0ff7-73a2-4fe0-f3d7-49c676c9dfbf"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Professor                                    Student Reviews  \\\n",
              "11      Steven Roberts  [Professor Roberts is a fantastic instructor w...   \n",
              "65       Mehran Sahami  [I took cs106a with Mehran Sahami. His lecture...   \n",
              "27   Kurt Carrasquilla  [Kurt is an amazing teacher! His explanations ...   \n",
              "69          Jerry Cain  [I had thought that Chris Piech/Mehran Sahami ...   \n",
              "13       Nick Parlante  [The Best professors out there, Nick is great!...   \n",
              "..                 ...                                                ...   \n",
              "369    N Vanderkindren  [She's really friendly and interested in helpi...   \n",
              "30          Adib Belal  [Top-notch teacher, no debate. Didn't expect h...   \n",
              "31          Nadia Ruiz                                                 []   \n",
              "317       Karol Berger                                                 []   \n",
              "316       Derek Gurney                                                 []   \n",
              "\n",
              "     Overall Rating  Difficulty Rating  Num Ratings  \\\n",
              "11              5.0                2.4          101   \n",
              "65              4.9                2.1           94   \n",
              "27              4.9                2.6           84   \n",
              "69              4.6                3.8           54   \n",
              "13              4.7                2.7           44   \n",
              "..              ...                ...          ...   \n",
              "369             4.5                4.0            1   \n",
              "30              5.0                3.0            1   \n",
              "31              0.0                0.0            0   \n",
              "317             0.0                0.0            0   \n",
              "316             0.0                0.0            0   \n",
              "\n",
              "                                              Top Tags  \n",
              "11   [Caring, Inspirational, Respected, Participati...  \n",
              "65   [Amazing lectures, Inspirational, Hilarious, R...  \n",
              "27   [Amazing lectures, Inspirational, Caring, Resp...  \n",
              "69   [Respected, Tough grader, Caring, Amazing lect...  \n",
              "13   [Amazing lectures, Inspirational, Hilarious, R...  \n",
              "..                                                 ...  \n",
              "369                                                 []  \n",
              "30                  [Inspirational, Caring, Respected]  \n",
              "31               [Tough grader, Participation matters]  \n",
              "317                                                 []  \n",
              "316                                                 []  \n",
              "\n",
              "[406 rows x 6 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fb9ba24d-d050-4305-ade0-a6d2ab4ba09d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Professor</th>\n",
              "      <th>Student Reviews</th>\n",
              "      <th>Overall Rating</th>\n",
              "      <th>Difficulty Rating</th>\n",
              "      <th>Num Ratings</th>\n",
              "      <th>Top Tags</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Steven Roberts</td>\n",
              "      <td>[Professor Roberts is a fantastic instructor w...</td>\n",
              "      <td>5.0</td>\n",
              "      <td>2.4</td>\n",
              "      <td>101</td>\n",
              "      <td>[Caring, Inspirational, Respected, Participati...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>65</th>\n",
              "      <td>Mehran Sahami</td>\n",
              "      <td>[I took cs106a with Mehran Sahami. His lecture...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.1</td>\n",
              "      <td>94</td>\n",
              "      <td>[Amazing lectures, Inspirational, Hilarious, R...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Kurt Carrasquilla</td>\n",
              "      <td>[Kurt is an amazing teacher! His explanations ...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.6</td>\n",
              "      <td>84</td>\n",
              "      <td>[Amazing lectures, Inspirational, Caring, Resp...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69</th>\n",
              "      <td>Jerry Cain</td>\n",
              "      <td>[I had thought that Chris Piech/Mehran Sahami ...</td>\n",
              "      <td>4.6</td>\n",
              "      <td>3.8</td>\n",
              "      <td>54</td>\n",
              "      <td>[Respected, Tough grader, Caring, Amazing lect...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Nick Parlante</td>\n",
              "      <td>[The Best professors out there, Nick is great!...</td>\n",
              "      <td>4.7</td>\n",
              "      <td>2.7</td>\n",
              "      <td>44</td>\n",
              "      <td>[Amazing lectures, Inspirational, Hilarious, R...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>369</th>\n",
              "      <td>N Vanderkindren</td>\n",
              "      <td>[She's really friendly and interested in helpi...</td>\n",
              "      <td>4.5</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1</td>\n",
              "      <td>[]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Adib Belal</td>\n",
              "      <td>[Top-notch teacher, no debate. Didn't expect h...</td>\n",
              "      <td>5.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1</td>\n",
              "      <td>[Inspirational, Caring, Respected]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>Nadia Ruiz</td>\n",
              "      <td>[]</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>[Tough grader, Participation matters]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>317</th>\n",
              "      <td>Karol Berger</td>\n",
              "      <td>[]</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>[]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>316</th>\n",
              "      <td>Derek Gurney</td>\n",
              "      <td>[]</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>[]</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>406 rows × 6 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fb9ba24d-d050-4305-ade0-a6d2ab4ba09d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-fb9ba24d-d050-4305-ade0-a6d2ab4ba09d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-fb9ba24d-d050-4305-ade0-a6d2ab4ba09d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-ba4da4e4-317f-45c1-baa1-d2151c9ff60d\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ba4da4e4-317f-45c1-baa1-d2151c9ff60d')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-ba4da4e4-317f-45c1-baa1-d2151c9ff60d button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_ea9bad4c-afff-4ed3-b340-9648d098f541\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_ea9bad4c-afff-4ed3-b340-9648d098f541 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 406,\n  \"fields\": [\n    {\n      \"column\": \"Professor\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 406,\n        \"samples\": [\n          \"Jody Maxmin\",\n          \"Jessica Riskin\",\n          \"Laura Wittman\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Student Reviews\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Overall Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.2452839698892784,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 36,\n        \"samples\": [\n          0.0,\n          2.9,\n          2.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Difficulty Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9642341160307211,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          4.0,\n          2.0,\n          1.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Num Ratings\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 0,\n        \"max\": 101,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          20,\n          15,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Top Tags\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 14
        }
      ],
      "source": [
        "# Create DataFrame with professor data\n",
        "df = pd.DataFrame(professors_data)\n",
        "df = df.sort_values(\"Num Ratings\",\n",
        "                    ascending = False)\n",
        "\n",
        "df"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Adding Variables to the DataFrame**\n"
      ],
      "metadata": {
        "id": "3eLpwj8U4zdW"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Scraping Stanford Profiles**"
      ],
      "metadata": {
        "id": "ORAqv4AZ5P8t"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": true,
        "id": "SpX8DLqjzzZZ"
      },
      "outputs": [],
      "source": [
        "# Identify broken links\n",
        "base_url = 'https://profiles.stanford.edu/'\n",
        "\n",
        "stanford_profiles_links= []\n",
        "\n",
        "stanford_profiles_df_links = []\n",
        "\n",
        "# Create column with links to Stanford profile for every professor\n",
        "for professor in df['Professor']:\n",
        "  url = base_url + professor.lower().split(' ')[0] + '-' + professor.lower().split(' ')[1]\n",
        "  stanford_profiles_links.append(url)\n",
        "\n",
        "for url in stanford_profiles_links:\n",
        "    response = requests.get(url, headers = headers)\n",
        "\n",
        "    if response.status_code == 404:\n",
        "        stanford_profiles_df_links.append(None)\n",
        "\n",
        "    else:\n",
        "        stanford_profiles_df_links.append(url)\n",
        "\n",
        "df[\"Stanford Profile\"] = stanford_profiles_df_links\n",
        "df"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": true,
        "id": "yaCXxmM-IY6m",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 306
        },
        "outputId": "b162d1e3-314c-4074-9642-8d52e80be2fb"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Professor                                    Student Reviews  \\\n",
              "65       Mehran Sahami  [I took cs106a with Mehran Sahami. His lecture...   \n",
              "27   Kurt Carrasquilla  [Kurt is an amazing teacher! His explanations ...   \n",
              "228       Mark Tendall  [\\, ok lecturer., Prof. Tendall teaches you th...   \n",
              "99     Robert Sapolsky  [His class is difficult because his field is d...   \n",
              "105      Keith Schwarz  [so much energy, he really teaches you the mat...   \n",
              "\n",
              "     Overall Rating  Difficulty Rating  Num Ratings  \\\n",
              "65              4.9                2.1           94   \n",
              "27              4.9                2.6           84   \n",
              "228             3.7                2.8           29   \n",
              "99              4.8                2.9           27   \n",
              "105             4.5                3.6           25   \n",
              "\n",
              "                                              Top Tags  \\\n",
              "65   [Amazing lectures, Inspirational, Hilarious, R...   \n",
              "27   [Amazing lectures, Inspirational, Caring, Resp...   \n",
              "228    [Amazing lectures, Would take again, Hilarious]   \n",
              "99   [Amazing lectures, Inspirational, Hilarious, R...   \n",
              "105  [Amazing lectures, Inspirational, Respected, H...   \n",
              "\n",
              "                                    Stanford Profile  \n",
              "65       https://profiles.stanford.edu/mehran-sahami  \n",
              "27   https://profiles.stanford.edu/kurt-carrasquilla  \n",
              "228       https://profiles.stanford.edu/mark-tendall  \n",
              "99     https://profiles.stanford.edu/robert-sapolsky  \n",
              "105      https://profiles.stanford.edu/keith-schwarz  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2388660b-b130-48dd-9045-8d49ea939164\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Professor</th>\n",
              "      <th>Student Reviews</th>\n",
              "      <th>Overall Rating</th>\n",
              "      <th>Difficulty Rating</th>\n",
              "      <th>Num Ratings</th>\n",
              "      <th>Top Tags</th>\n",
              "      <th>Stanford Profile</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>65</th>\n",
              "      <td>Mehran Sahami</td>\n",
              "      <td>[I took cs106a with Mehran Sahami. His lecture...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.1</td>\n",
              "      <td>94</td>\n",
              "      <td>[Amazing lectures, Inspirational, Hilarious, R...</td>\n",
              "      <td>https://profiles.stanford.edu/mehran-sahami</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Kurt Carrasquilla</td>\n",
              "      <td>[Kurt is an amazing teacher! His explanations ...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.6</td>\n",
              "      <td>84</td>\n",
              "      <td>[Amazing lectures, Inspirational, Caring, Resp...</td>\n",
              "      <td>https://profiles.stanford.edu/kurt-carrasquilla</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>228</th>\n",
              "      <td>Mark Tendall</td>\n",
              "      <td>[\\, ok lecturer., Prof. Tendall teaches you th...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>2.8</td>\n",
              "      <td>29</td>\n",
              "      <td>[Amazing lectures, Would take again, Hilarious]</td>\n",
              "      <td>https://profiles.stanford.edu/mark-tendall</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>Robert Sapolsky</td>\n",
              "      <td>[His class is difficult because his field is d...</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.9</td>\n",
              "      <td>27</td>\n",
              "      <td>[Amazing lectures, Inspirational, Hilarious, R...</td>\n",
              "      <td>https://profiles.stanford.edu/robert-sapolsky</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>105</th>\n",
              "      <td>Keith Schwarz</td>\n",
              "      <td>[so much energy, he really teaches you the mat...</td>\n",
              "      <td>4.5</td>\n",
              "      <td>3.6</td>\n",
              "      <td>25</td>\n",
              "      <td>[Amazing lectures, Inspirational, Respected, H...</td>\n",
              "      <td>https://profiles.stanford.edu/keith-schwarz</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2388660b-b130-48dd-9045-8d49ea939164')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2388660b-b130-48dd-9045-8d49ea939164 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2388660b-b130-48dd-9045-8d49ea939164');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-4a2a317a-04e0-426b-b8bc-0176653cccfd\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4a2a317a-04e0-426b-b8bc-0176653cccfd')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-4a2a317a-04e0-426b-b8bc-0176653cccfd button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "valid_sorted_review_df",
              "summary": "{\n  \"name\": \"valid_sorted_review_df\",\n  \"rows\": 195,\n  \"fields\": [\n    {\n      \"column\": \"Professor\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 195,\n        \"samples\": [\n          \"Justin Grimmer\",\n          \"Hong Zeng\",\n          \"Mark Jacobson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Student Reviews\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Overall Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3162700125615592,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          3.3,\n          1.3,\n          4.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Difficulty Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.957065907864119,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          5.0,\n          3.4,\n          4.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Num Ratings\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 0,\n        \"max\": 94,\n        \"num_unique_values\": 25,\n        \"samples\": [\n          20,\n          8,\n          94\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Top Tags\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stanford Profile\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 195,\n        \"samples\": [\n          \"https://profiles.stanford.edu/justin-grimmer\",\n          \"https://profiles.stanford.edu/hong-zeng\",\n          \"https://profiles.stanford.edu/mark-jacobson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 17
        }
      ],
      "source": [
        "# Filter out professors that don't have Stanford Profile links\n",
        "valid_sorted_review_df = df[~df[\"Stanford Profile\"].isna()]\n",
        "valid_sorted_review_df.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "pxYRyvPdYLWv",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 728
        },
        "collapsed": true,
        "outputId": "c7190f12-11f4-4602-85d3-7bb7fe7a322f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-19-0e66b27651cd>:3: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  no_empty_comments_df[\"Student Reviews\"] = no_empty_comments_df[\"Student Reviews\"].apply(lambda reviews: [r for r in reviews if r.strip().lower() != \"no comments\"])\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               Professor                                    Student Reviews  \\\n",
              "65         Mehran Sahami  [I took cs106a with Mehran Sahami. His lecture...   \n",
              "27     Kurt Carrasquilla  [Kurt is an amazing teacher! His explanations ...   \n",
              "228         Mark Tendall  [\\, ok lecturer., Prof. Tendall teaches you th...   \n",
              "99       Robert Sapolsky  [His class is difficult because his field is d...   \n",
              "105        Keith Schwarz  [so much energy, he really teaches you the mat...   \n",
              "..                   ...                                                ...   \n",
              "357   Alessandra McCarty  [the teacher made this class so much fun!  v. ...   \n",
              "361      Stephen Palumbi                                                 []   \n",
              "133     Katherine Hilton  [She was such a great teacher and knew exactly...   \n",
              "21       Daniel McCalley  [Doesn't have the vernacular he thinks he poss...   \n",
              "363  Christopher Chidsey                                                 []   \n",
              "\n",
              "     Overall Rating  Difficulty Rating  Num Ratings  \\\n",
              "65              4.9                2.1           94   \n",
              "27              4.9                2.6           84   \n",
              "228             3.7                2.8           29   \n",
              "99              4.8                2.9           27   \n",
              "105             4.5                3.6           25   \n",
              "..              ...                ...          ...   \n",
              "357             5.0                3.0            1   \n",
              "361             1.5                3.0            1   \n",
              "133             5.0                3.0            1   \n",
              "21              5.0                1.0            1   \n",
              "363             1.0                5.0            1   \n",
              "\n",
              "                                              Top Tags  \\\n",
              "65   [Amazing lectures, Inspirational, Hilarious, R...   \n",
              "27   [Amazing lectures, Inspirational, Caring, Resp...   \n",
              "228    [Amazing lectures, Would take again, Hilarious]   \n",
              "99   [Amazing lectures, Inspirational, Hilarious, R...   \n",
              "105  [Amazing lectures, Inspirational, Respected, H...   \n",
              "..                                                 ...   \n",
              "357                                                 []   \n",
              "361                                                 []   \n",
              "133  [Amazing lectures, Clear grading criteria, Car...   \n",
              "21                                                  []   \n",
              "363                                                 []   \n",
              "\n",
              "                                      Stanford Profile  \n",
              "65         https://profiles.stanford.edu/mehran-sahami  \n",
              "27     https://profiles.stanford.edu/kurt-carrasquilla  \n",
              "228         https://profiles.stanford.edu/mark-tendall  \n",
              "99       https://profiles.stanford.edu/robert-sapolsky  \n",
              "105        https://profiles.stanford.edu/keith-schwarz  \n",
              "..                                                 ...  \n",
              "357   https://profiles.stanford.edu/alessandra-mccarty  \n",
              "361      https://profiles.stanford.edu/stephen-palumbi  \n",
              "133     https://profiles.stanford.edu/katherine-hilton  \n",
              "21       https://profiles.stanford.edu/daniel-mccalley  \n",
              "363  https://profiles.stanford.edu/christopher-chidsey  \n",
              "\n",
              "[194 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ba2b6a2b-f73c-48d9-8374-11b02c6a050b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Professor</th>\n",
              "      <th>Student Reviews</th>\n",
              "      <th>Overall Rating</th>\n",
              "      <th>Difficulty Rating</th>\n",
              "      <th>Num Ratings</th>\n",
              "      <th>Top Tags</th>\n",
              "      <th>Stanford Profile</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>65</th>\n",
              "      <td>Mehran Sahami</td>\n",
              "      <td>[I took cs106a with Mehran Sahami. His lecture...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.1</td>\n",
              "      <td>94</td>\n",
              "      <td>[Amazing lectures, Inspirational, Hilarious, R...</td>\n",
              "      <td>https://profiles.stanford.edu/mehran-sahami</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Kurt Carrasquilla</td>\n",
              "      <td>[Kurt is an amazing teacher! His explanations ...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.6</td>\n",
              "      <td>84</td>\n",
              "      <td>[Amazing lectures, Inspirational, Caring, Resp...</td>\n",
              "      <td>https://profiles.stanford.edu/kurt-carrasquilla</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>228</th>\n",
              "      <td>Mark Tendall</td>\n",
              "      <td>[\\, ok lecturer., Prof. Tendall teaches you th...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>2.8</td>\n",
              "      <td>29</td>\n",
              "      <td>[Amazing lectures, Would take again, Hilarious]</td>\n",
              "      <td>https://profiles.stanford.edu/mark-tendall</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>Robert Sapolsky</td>\n",
              "      <td>[His class is difficult because his field is d...</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.9</td>\n",
              "      <td>27</td>\n",
              "      <td>[Amazing lectures, Inspirational, Hilarious, R...</td>\n",
              "      <td>https://profiles.stanford.edu/robert-sapolsky</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>105</th>\n",
              "      <td>Keith Schwarz</td>\n",
              "      <td>[so much energy, he really teaches you the mat...</td>\n",
              "      <td>4.5</td>\n",
              "      <td>3.6</td>\n",
              "      <td>25</td>\n",
              "      <td>[Amazing lectures, Inspirational, Respected, H...</td>\n",
              "      <td>https://profiles.stanford.edu/keith-schwarz</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>357</th>\n",
              "      <td>Alessandra McCarty</td>\n",
              "      <td>[the teacher made this class so much fun!  v. ...</td>\n",
              "      <td>5.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1</td>\n",
              "      <td>[]</td>\n",
              "      <td>https://profiles.stanford.edu/alessandra-mccarty</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>Stephen Palumbi</td>\n",
              "      <td>[]</td>\n",
              "      <td>1.5</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1</td>\n",
              "      <td>[]</td>\n",
              "      <td>https://profiles.stanford.edu/stephen-palumbi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>133</th>\n",
              "      <td>Katherine Hilton</td>\n",
              "      <td>[She was such a great teacher and knew exactly...</td>\n",
              "      <td>5.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1</td>\n",
              "      <td>[Amazing lectures, Clear grading criteria, Car...</td>\n",
              "      <td>https://profiles.stanford.edu/katherine-hilton</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Daniel McCalley</td>\n",
              "      <td>[Doesn't have the vernacular he thinks he poss...</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>[]</td>\n",
              "      <td>https://profiles.stanford.edu/daniel-mccalley</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>Christopher Chidsey</td>\n",
              "      <td>[]</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1</td>\n",
              "      <td>[]</td>\n",
              "      <td>https://profiles.stanford.edu/christopher-chidsey</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>194 rows × 7 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ba2b6a2b-f73c-48d9-8374-11b02c6a050b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ba2b6a2b-f73c-48d9-8374-11b02c6a050b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ba2b6a2b-f73c-48d9-8374-11b02c6a050b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-544e242c-9e9c-4f31-87c3-2b747ccfa4a6\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-544e242c-9e9c-4f31-87c3-2b747ccfa4a6')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-544e242c-9e9c-4f31-87c3-2b747ccfa4a6 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_d2d784be-bf53-4e9a-a034-4ddbde5e4d62\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('no_empty_comments_df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_d2d784be-bf53-4e9a-a034-4ddbde5e4d62 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('no_empty_comments_df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "no_empty_comments_df",
              "summary": "{\n  \"name\": \"no_empty_comments_df\",\n  \"rows\": 194,\n  \"fields\": [\n    {\n      \"column\": \"Professor\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 194,\n        \"samples\": [\n          \"Justin Grimmer\",\n          \"Hong Zeng\",\n          \"Mark Jacobson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Student Reviews\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Overall Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.2921882786627845,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 33,\n        \"samples\": [\n          2.3,\n          3.3,\n          2.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Difficulty Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9313747920458085,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 33,\n        \"samples\": [\n          1.0,\n          5.0,\n          2.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Num Ratings\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 1,\n        \"max\": 94,\n        \"num_unique_values\": 24,\n        \"samples\": [\n          20,\n          8,\n          94\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Top Tags\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stanford Profile\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 194,\n        \"samples\": [\n          \"https://profiles.stanford.edu/justin-grimmer\",\n          \"https://profiles.stanford.edu/hong-zeng\",\n          \"https://profiles.stanford.edu/mark-jacobson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 19
        }
      ],
      "source": [
        "# Filter out professors that don't have Rate My Professors student reviews\n",
        "no_empty_comments_df = valid_sorted_review_df[valid_sorted_review_df[\"Num Ratings\"] != 0]\n",
        "no_empty_comments_df[\"Student Reviews\"] = no_empty_comments_df[\"Student Reviews\"].apply(lambda reviews: [r for r in reviews if r.strip().lower() != \"no comments\"])\n",
        "no_empty_comments_df"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Creating Deparment and Position Variables**"
      ],
      "metadata": {
        "id": "XbA-kc1i5n64"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "oIC7gGxhJ7Gx",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 527
        },
        "outputId": "c73e486c-3b3a-4ef0-ac9a-a0cbb17548ac"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-20-9859efb4230c>:33: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  valid_sorted_review_df[\"Department\"] = departments\n",
            "<ipython-input-20-9859efb4230c>:34: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  valid_sorted_review_df[\"Position\"] = positions\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Professor                                    Student Reviews  \\\n",
              "65       Mehran Sahami  [I took cs106a with Mehran Sahami. His lecture...   \n",
              "27   Kurt Carrasquilla  [Kurt is an amazing teacher! His explanations ...   \n",
              "228       Mark Tendall  [\\, ok lecturer., Prof. Tendall teaches you th...   \n",
              "99     Robert Sapolsky  [His class is difficult because his field is d...   \n",
              "105      Keith Schwarz  [so much energy, he really teaches you the mat...   \n",
              "\n",
              "     Overall Rating  Difficulty Rating  Num Ratings  \\\n",
              "65              4.9                2.1           94   \n",
              "27              4.9                2.6           84   \n",
              "228             3.7                2.8           29   \n",
              "99              4.8                2.9           27   \n",
              "105             4.5                3.6           25   \n",
              "\n",
              "                                              Top Tags  \\\n",
              "65   [Amazing lectures, Inspirational, Hilarious, R...   \n",
              "27   [Amazing lectures, Inspirational, Caring, Resp...   \n",
              "228    [Amazing lectures, Would take again, Hilarious]   \n",
              "99   [Amazing lectures, Inspirational, Hilarious, R...   \n",
              "105  [Amazing lectures, Inspirational, Respected, H...   \n",
              "\n",
              "                                    Stanford Profile          Department  \\\n",
              "65       https://profiles.stanford.edu/mehran-sahami    Computer Science   \n",
              "27   https://profiles.stanford.edu/kurt-carrasquilla  Continuing Studies   \n",
              "228       https://profiles.stanford.edu/mark-tendall           Economics   \n",
              "99     https://profiles.stanford.edu/robert-sapolsky             Biology   \n",
              "105      https://profiles.stanford.edu/keith-schwarz    Computer Science   \n",
              "\n",
              "                  Position  \n",
              "65      Professor-Teaching  \n",
              "27   Summer CSP Instructor  \n",
              "228      Advanced Lecturer  \n",
              "99               Professor  \n",
              "105            Sr Lecturer  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-54272b48-c64e-40be-a85b-08e6cf6f7745\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Professor</th>\n",
              "      <th>Student Reviews</th>\n",
              "      <th>Overall Rating</th>\n",
              "      <th>Difficulty Rating</th>\n",
              "      <th>Num Ratings</th>\n",
              "      <th>Top Tags</th>\n",
              "      <th>Stanford Profile</th>\n",
              "      <th>Department</th>\n",
              "      <th>Position</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>65</th>\n",
              "      <td>Mehran Sahami</td>\n",
              "      <td>[I took cs106a with Mehran Sahami. His lecture...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.1</td>\n",
              "      <td>94</td>\n",
              "      <td>[Amazing lectures, Inspirational, Hilarious, R...</td>\n",
              "      <td>https://profiles.stanford.edu/mehran-sahami</td>\n",
              "      <td>Computer Science</td>\n",
              "      <td>Professor-Teaching</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Kurt Carrasquilla</td>\n",
              "      <td>[Kurt is an amazing teacher! His explanations ...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.6</td>\n",
              "      <td>84</td>\n",
              "      <td>[Amazing lectures, Inspirational, Caring, Resp...</td>\n",
              "      <td>https://profiles.stanford.edu/kurt-carrasquilla</td>\n",
              "      <td>Continuing Studies</td>\n",
              "      <td>Summer CSP Instructor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>228</th>\n",
              "      <td>Mark Tendall</td>\n",
              "      <td>[\\, ok lecturer., Prof. Tendall teaches you th...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>2.8</td>\n",
              "      <td>29</td>\n",
              "      <td>[Amazing lectures, Would take again, Hilarious]</td>\n",
              "      <td>https://profiles.stanford.edu/mark-tendall</td>\n",
              "      <td>Economics</td>\n",
              "      <td>Advanced Lecturer</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>Robert Sapolsky</td>\n",
              "      <td>[His class is difficult because his field is d...</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.9</td>\n",
              "      <td>27</td>\n",
              "      <td>[Amazing lectures, Inspirational, Hilarious, R...</td>\n",
              "      <td>https://profiles.stanford.edu/robert-sapolsky</td>\n",
              "      <td>Biology</td>\n",
              "      <td>Professor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>105</th>\n",
              "      <td>Keith Schwarz</td>\n",
              "      <td>[so much energy, he really teaches you the mat...</td>\n",
              "      <td>4.5</td>\n",
              "      <td>3.6</td>\n",
              "      <td>25</td>\n",
              "      <td>[Amazing lectures, Inspirational, Respected, H...</td>\n",
              "      <td>https://profiles.stanford.edu/keith-schwarz</td>\n",
              "      <td>Computer Science</td>\n",
              "      <td>Sr Lecturer</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-54272b48-c64e-40be-a85b-08e6cf6f7745')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-54272b48-c64e-40be-a85b-08e6cf6f7745 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-54272b48-c64e-40be-a85b-08e6cf6f7745');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-e77a1650-f0ee-4520-a913-2d34924e814b\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e77a1650-f0ee-4520-a913-2d34924e814b')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-e77a1650-f0ee-4520-a913-2d34924e814b button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "valid_sorted_review_df",
              "summary": "{\n  \"name\": \"valid_sorted_review_df\",\n  \"rows\": 195,\n  \"fields\": [\n    {\n      \"column\": \"Professor\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 195,\n        \"samples\": [\n          \"Justin Grimmer\",\n          \"Hong Zeng\",\n          \"Mark Jacobson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Student Reviews\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Overall Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3162700125615592,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          3.3,\n          1.3,\n          4.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Difficulty Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.957065907864119,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          5.0,\n          3.4,\n          4.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Num Ratings\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 0,\n        \"max\": 94,\n        \"num_unique_values\": 25,\n        \"samples\": [\n          20,\n          8,\n          94\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Top Tags\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stanford Profile\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 195,\n        \"samples\": [\n          \"https://profiles.stanford.edu/justin-grimmer\",\n          \"https://profiles.stanford.edu/hong-zeng\",\n          \"https://profiles.stanford.edu/mark-jacobson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Department\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 64,\n        \"samples\": [\n          \"Center for Race & Ethnicity\",\n          \"SLAC National Accelerator Laboratory\",\n          \"Computer Science\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Position\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 41,\n        \"samples\": [\n          \"Assoc. Professor\",\n          \"Professor Emeritus\",\n          \"Adjunct Lecturer\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 20
        }
      ],
      "source": [
        "departments = []\n",
        "positions = []\n",
        "\n",
        "for url in valid_sorted_review_df[\"Stanford Profile\"]:\n",
        "  response = requests.get(url)\n",
        "  soup = BeautifulSoup(response.text, \"html.parser\")\n",
        "\n",
        "  dept_tag = soup.find(\"span\", class_=\"department\")\n",
        "  pos_tag = soup.find(\"span\", class_=\"position\")\n",
        "\n",
        "  if pos_tag:\n",
        "      pos_text = pos_tag.get_text(strip=True)\n",
        "      if \"Position:\" in pos_text:\n",
        "          # Extra cleanup in case there's leftover unicode or HTML entities\n",
        "          pos_text = pos_text.replace(\"Position:\", \"\").replace(\"\\xa0\", \"\").strip()\n",
        "      positions.append(pos_text)\n",
        "\n",
        "  else:\n",
        "      positions.append(\"Not found\")\n",
        "\n",
        "  if dept_tag:\n",
        "      dept_text = dept_tag.get_text(strip=True)\n",
        "\n",
        "      if \"Department:\" in dept_text:\n",
        "          # Extra cleanup in case there's leftover unicode or HTML entities\n",
        "          dept_text = dept_text.replace(\"Department:\", \"\").replace(\"\\xa0\", \"\").strip()[5:]\n",
        "      departments.append(dept_text)\n",
        "\n",
        "  else:\n",
        "      departments.append(\"Not found\")\n",
        "\n",
        "  time.sleep(0.1)\n",
        "\n",
        "# Add results to DataFrame\n",
        "valid_sorted_review_df[\"Department\"] = departments\n",
        "valid_sorted_review_df[\"Position\"] = positions\n",
        "\n",
        "valid_sorted_review_df.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Creating Variable for Number of Publications**"
      ],
      "metadata": {
        "id": "7aJvWOLo5wju"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a column for number of publications\n",
        "publication_counts = []\n",
        "\n",
        "for url in valid_sorted_review_df[\"Stanford Profile\"]:\n",
        "    response = requests.get(url)\n",
        "    soup = BeautifulSoup(response.text, \"html.parser\")\n",
        "    pub_tags = soup.find_all(\"li\", class_=\"publication article\")\n",
        "    count = len(pub_tags)\n",
        "    publication_counts.append(count)\n",
        "    time.sleep(0.1)\n",
        "\n",
        "# Add the counts to DataFrame\n",
        "valid_sorted_review_df[\"Num Publications\"] = publication_counts\n",
        "\n",
        "valid_sorted_review_df.head()"
      ],
      "metadata": {
        "id": "Vn0zghvaFwbV",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 493
        },
        "outputId": "82e79230-9aee-4efc-a8b4-acf8b183e3ad"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-21-dcbb2f59ce4c>:12: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  valid_sorted_review_df[\"Num Publications\"] = publication_counts\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Professor                                    Student Reviews  \\\n",
              "65       Mehran Sahami  [I took cs106a with Mehran Sahami. His lecture...   \n",
              "27   Kurt Carrasquilla  [Kurt is an amazing teacher! His explanations ...   \n",
              "228       Mark Tendall  [\\, ok lecturer., Prof. Tendall teaches you th...   \n",
              "99     Robert Sapolsky  [His class is difficult because his field is d...   \n",
              "105      Keith Schwarz  [so much energy, he really teaches you the mat...   \n",
              "\n",
              "     Overall Rating  Difficulty Rating  Num Ratings  \\\n",
              "65              4.9                2.1           94   \n",
              "27              4.9                2.6           84   \n",
              "228             3.7                2.8           29   \n",
              "99              4.8                2.9           27   \n",
              "105             4.5                3.6           25   \n",
              "\n",
              "                                              Top Tags  \\\n",
              "65   [Amazing lectures, Inspirational, Hilarious, R...   \n",
              "27   [Amazing lectures, Inspirational, Caring, Resp...   \n",
              "228    [Amazing lectures, Would take again, Hilarious]   \n",
              "99   [Amazing lectures, Inspirational, Hilarious, R...   \n",
              "105  [Amazing lectures, Inspirational, Respected, H...   \n",
              "\n",
              "                                    Stanford Profile          Department  \\\n",
              "65       https://profiles.stanford.edu/mehran-sahami    Computer Science   \n",
              "27   https://profiles.stanford.edu/kurt-carrasquilla  Continuing Studies   \n",
              "228       https://profiles.stanford.edu/mark-tendall           Economics   \n",
              "99     https://profiles.stanford.edu/robert-sapolsky             Biology   \n",
              "105      https://profiles.stanford.edu/keith-schwarz    Computer Science   \n",
              "\n",
              "                  Position  Num Publications  \n",
              "65      Professor-Teaching                13  \n",
              "27   Summer CSP Instructor                 0  \n",
              "228      Advanced Lecturer                 0  \n",
              "99               Professor               268  \n",
              "105            Sr Lecturer                 0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1b520746-2298-4922-b7c3-dda0e0b84ff9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Professor</th>\n",
              "      <th>Student Reviews</th>\n",
              "      <th>Overall Rating</th>\n",
              "      <th>Difficulty Rating</th>\n",
              "      <th>Num Ratings</th>\n",
              "      <th>Top Tags</th>\n",
              "      <th>Stanford Profile</th>\n",
              "      <th>Department</th>\n",
              "      <th>Position</th>\n",
              "      <th>Num Publications</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>65</th>\n",
              "      <td>Mehran Sahami</td>\n",
              "      <td>[I took cs106a with Mehran Sahami. His lecture...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.1</td>\n",
              "      <td>94</td>\n",
              "      <td>[Amazing lectures, Inspirational, Hilarious, R...</td>\n",
              "      <td>https://profiles.stanford.edu/mehran-sahami</td>\n",
              "      <td>Computer Science</td>\n",
              "      <td>Professor-Teaching</td>\n",
              "      <td>13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Kurt Carrasquilla</td>\n",
              "      <td>[Kurt is an amazing teacher! His explanations ...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.6</td>\n",
              "      <td>84</td>\n",
              "      <td>[Amazing lectures, Inspirational, Caring, Resp...</td>\n",
              "      <td>https://profiles.stanford.edu/kurt-carrasquilla</td>\n",
              "      <td>Continuing Studies</td>\n",
              "      <td>Summer CSP Instructor</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>228</th>\n",
              "      <td>Mark Tendall</td>\n",
              "      <td>[\\, ok lecturer., Prof. Tendall teaches you th...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>2.8</td>\n",
              "      <td>29</td>\n",
              "      <td>[Amazing lectures, Would take again, Hilarious]</td>\n",
              "      <td>https://profiles.stanford.edu/mark-tendall</td>\n",
              "      <td>Economics</td>\n",
              "      <td>Advanced Lecturer</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>Robert Sapolsky</td>\n",
              "      <td>[His class is difficult because his field is d...</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.9</td>\n",
              "      <td>27</td>\n",
              "      <td>[Amazing lectures, Inspirational, Hilarious, R...</td>\n",
              "      <td>https://profiles.stanford.edu/robert-sapolsky</td>\n",
              "      <td>Biology</td>\n",
              "      <td>Professor</td>\n",
              "      <td>268</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>105</th>\n",
              "      <td>Keith Schwarz</td>\n",
              "      <td>[so much energy, he really teaches you the mat...</td>\n",
              "      <td>4.5</td>\n",
              "      <td>3.6</td>\n",
              "      <td>25</td>\n",
              "      <td>[Amazing lectures, Inspirational, Respected, H...</td>\n",
              "      <td>https://profiles.stanford.edu/keith-schwarz</td>\n",
              "      <td>Computer Science</td>\n",
              "      <td>Sr Lecturer</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1b520746-2298-4922-b7c3-dda0e0b84ff9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1b520746-2298-4922-b7c3-dda0e0b84ff9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1b520746-2298-4922-b7c3-dda0e0b84ff9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-67ee3d3f-42cd-429e-b9b0-ece0969ea656\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-67ee3d3f-42cd-429e-b9b0-ece0969ea656')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-67ee3d3f-42cd-429e-b9b0-ece0969ea656 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "valid_sorted_review_df",
              "summary": "{\n  \"name\": \"valid_sorted_review_df\",\n  \"rows\": 195,\n  \"fields\": [\n    {\n      \"column\": \"Professor\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 195,\n        \"samples\": [\n          \"Justin Grimmer\",\n          \"Hong Zeng\",\n          \"Mark Jacobson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Student Reviews\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Overall Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3162700125615592,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          3.3,\n          1.3,\n          4.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Difficulty Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.957065907864119,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          5.0,\n          3.4,\n          4.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Num Ratings\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 0,\n        \"max\": 94,\n        \"num_unique_values\": 25,\n        \"samples\": [\n          20,\n          8,\n          94\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Top Tags\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stanford Profile\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 195,\n        \"samples\": [\n          \"https://profiles.stanford.edu/justin-grimmer\",\n          \"https://profiles.stanford.edu/hong-zeng\",\n          \"https://profiles.stanford.edu/mark-jacobson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Department\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 64,\n        \"samples\": [\n          \"Center for Race & Ethnicity\",\n          \"SLAC National Accelerator Laboratory\",\n          \"Computer Science\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Position\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 41,\n        \"samples\": [\n          \"Assoc. Professor\",\n          \"Professor Emeritus\",\n          \"Adjunct Lecturer\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Num Publications\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 103,\n        \"min\": 0,\n        \"max\": 593,\n        \"num_unique_values\": 93,\n        \"samples\": [\n          255,\n          65,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# # Create a column with a binary variable for if a professor has published\n",
        "valid_sorted_review_df[\"Published\"] = valid_sorted_review_df[\"Num Publications\"] != 0\n",
        "\n",
        "valid_sorted_review_df.head()"
      ],
      "metadata": {
        "id": "F0PMowf9FyVH",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 578
        },
        "collapsed": true,
        "outputId": "07103382-59ea-43c5-934c-4d60b7df721d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-22-894c4791280a>:7: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  valid_sorted_review_df[\"Published\"] = valid_sorted_review_df[\"Num Publications\"] != 0\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Professor                                    Student Reviews  \\\n",
              "65       Mehran Sahami  [I took cs106a with Mehran Sahami. His lecture...   \n",
              "27   Kurt Carrasquilla  [Kurt is an amazing teacher! His explanations ...   \n",
              "228       Mark Tendall  [\\, ok lecturer., Prof. Tendall teaches you th...   \n",
              "99     Robert Sapolsky  [His class is difficult because his field is d...   \n",
              "105      Keith Schwarz  [so much energy, he really teaches you the mat...   \n",
              "\n",
              "     Overall Rating  Difficulty Rating  Num Ratings  \\\n",
              "65              4.9                2.1           94   \n",
              "27              4.9                2.6           84   \n",
              "228             3.7                2.8           29   \n",
              "99              4.8                2.9           27   \n",
              "105             4.5                3.6           25   \n",
              "\n",
              "                                              Top Tags  \\\n",
              "65   [Amazing lectures, Inspirational, Hilarious, R...   \n",
              "27   [Amazing lectures, Inspirational, Caring, Resp...   \n",
              "228    [Amazing lectures, Would take again, Hilarious]   \n",
              "99   [Amazing lectures, Inspirational, Hilarious, R...   \n",
              "105  [Amazing lectures, Inspirational, Respected, H...   \n",
              "\n",
              "                                    Stanford Profile          Department  \\\n",
              "65       https://profiles.stanford.edu/mehran-sahami    Computer Science   \n",
              "27   https://profiles.stanford.edu/kurt-carrasquilla  Continuing Studies   \n",
              "228       https://profiles.stanford.edu/mark-tendall           Economics   \n",
              "99     https://profiles.stanford.edu/robert-sapolsky             Biology   \n",
              "105      https://profiles.stanford.edu/keith-schwarz    Computer Science   \n",
              "\n",
              "                  Position  Num Publications  Published  \n",
              "65      Professor-Teaching                13       True  \n",
              "27   Summer CSP Instructor                 0      False  \n",
              "228      Advanced Lecturer                 0      False  \n",
              "99               Professor               268       True  \n",
              "105            Sr Lecturer                 0      False  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2d93f225-30ab-44e1-9292-723265b0aa33\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Professor</th>\n",
              "      <th>Student Reviews</th>\n",
              "      <th>Overall Rating</th>\n",
              "      <th>Difficulty Rating</th>\n",
              "      <th>Num Ratings</th>\n",
              "      <th>Top Tags</th>\n",
              "      <th>Stanford Profile</th>\n",
              "      <th>Department</th>\n",
              "      <th>Position</th>\n",
              "      <th>Num Publications</th>\n",
              "      <th>Published</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>65</th>\n",
              "      <td>Mehran Sahami</td>\n",
              "      <td>[I took cs106a with Mehran Sahami. His lecture...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.1</td>\n",
              "      <td>94</td>\n",
              "      <td>[Amazing lectures, Inspirational, Hilarious, R...</td>\n",
              "      <td>https://profiles.stanford.edu/mehran-sahami</td>\n",
              "      <td>Computer Science</td>\n",
              "      <td>Professor-Teaching</td>\n",
              "      <td>13</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Kurt Carrasquilla</td>\n",
              "      <td>[Kurt is an amazing teacher! His explanations ...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.6</td>\n",
              "      <td>84</td>\n",
              "      <td>[Amazing lectures, Inspirational, Caring, Resp...</td>\n",
              "      <td>https://profiles.stanford.edu/kurt-carrasquilla</td>\n",
              "      <td>Continuing Studies</td>\n",
              "      <td>Summer CSP Instructor</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>228</th>\n",
              "      <td>Mark Tendall</td>\n",
              "      <td>[\\, ok lecturer., Prof. Tendall teaches you th...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>2.8</td>\n",
              "      <td>29</td>\n",
              "      <td>[Amazing lectures, Would take again, Hilarious]</td>\n",
              "      <td>https://profiles.stanford.edu/mark-tendall</td>\n",
              "      <td>Economics</td>\n",
              "      <td>Advanced Lecturer</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>Robert Sapolsky</td>\n",
              "      <td>[His class is difficult because his field is d...</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.9</td>\n",
              "      <td>27</td>\n",
              "      <td>[Amazing lectures, Inspirational, Hilarious, R...</td>\n",
              "      <td>https://profiles.stanford.edu/robert-sapolsky</td>\n",
              "      <td>Biology</td>\n",
              "      <td>Professor</td>\n",
              "      <td>268</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>105</th>\n",
              "      <td>Keith Schwarz</td>\n",
              "      <td>[so much energy, he really teaches you the mat...</td>\n",
              "      <td>4.5</td>\n",
              "      <td>3.6</td>\n",
              "      <td>25</td>\n",
              "      <td>[Amazing lectures, Inspirational, Respected, H...</td>\n",
              "      <td>https://profiles.stanford.edu/keith-schwarz</td>\n",
              "      <td>Computer Science</td>\n",
              "      <td>Sr Lecturer</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2d93f225-30ab-44e1-9292-723265b0aa33')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2d93f225-30ab-44e1-9292-723265b0aa33 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2d93f225-30ab-44e1-9292-723265b0aa33');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-90cbc9a0-61b4-4a6d-9670-6379a9dc1213\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-90cbc9a0-61b4-4a6d-9670-6379a9dc1213')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-90cbc9a0-61b4-4a6d-9670-6379a9dc1213 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "valid_sorted_review_df",
              "summary": "{\n  \"name\": \"valid_sorted_review_df\",\n  \"rows\": 195,\n  \"fields\": [\n    {\n      \"column\": \"Professor\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 195,\n        \"samples\": [\n          \"Justin Grimmer\",\n          \"Hong Zeng\",\n          \"Mark Jacobson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Student Reviews\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Overall Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3162700125615592,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          3.3,\n          1.3,\n          4.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Difficulty Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.957065907864119,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          5.0,\n          3.4,\n          4.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Num Ratings\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 0,\n        \"max\": 94,\n        \"num_unique_values\": 25,\n        \"samples\": [\n          20,\n          8,\n          94\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Top Tags\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stanford Profile\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 195,\n        \"samples\": [\n          \"https://profiles.stanford.edu/justin-grimmer\",\n          \"https://profiles.stanford.edu/hong-zeng\",\n          \"https://profiles.stanford.edu/mark-jacobson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Department\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 64,\n        \"samples\": [\n          \"Center for Race & Ethnicity\",\n          \"SLAC National Accelerator Laboratory\",\n          \"Computer Science\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Position\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 41,\n        \"samples\": [\n          \"Assoc. Professor\",\n          \"Professor Emeritus\",\n          \"Adjunct Lecturer\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Num Publications\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 103,\n        \"min\": 0,\n        \"max\": 593,\n        \"num_unique_values\": 93,\n        \"samples\": [\n          255,\n          65,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Published\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Adding Gender (\"Sex\") Variable**"
      ],
      "metadata": {
        "id": "n-Xx_R_M6Sf3"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": true,
        "id": "SSAd4Ox8lwtX",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "c528956e-4253-4e0a-e6a6-2180fabb540d"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      First Name Sex\n",
              "26755      Aadam   M\n",
              "27994    Aadarsh   M\n",
              "24482      Aadil   M\n",
              "23569    Aaditya   M\n",
              "26756      Aahil   M"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a214fae5-2759-4532-a88a-0aed0aed2a71\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>First Name</th>\n",
              "      <th>Sex</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>26755</th>\n",
              "      <td>Aadam</td>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27994</th>\n",
              "      <td>Aadarsh</td>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24482</th>\n",
              "      <td>Aadil</td>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23569</th>\n",
              "      <td>Aaditya</td>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26756</th>\n",
              "      <td>Aahil</td>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a214fae5-2759-4532-a88a-0aed0aed2a71')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a214fae5-2759-4532-a88a-0aed0aed2a71 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a214fae5-2759-4532-a88a-0aed0aed2a71');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-c50a1180-dc7e-434b-bd13-98700c8d0928\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c50a1180-dc7e-434b-bd13-98700c8d0928')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-c50a1180-dc7e-434b-bd13-98700c8d0928 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "gender_names_df_cleaned",
              "summary": "{\n  \"name\": \"gender_names_df_cleaned\",\n  \"rows\": 27509,\n  \"fields\": [\n    {\n      \"column\": \"First Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 27509,\n        \"samples\": [\n          \"Ladaisha\",\n          \"Tonja\",\n          \"Nadiah\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 23
        }
      ],
      "source": [
        "# Read in \"baby names\" DataFrame\n",
        "url = \"https://dlsun.github.io/pods/data/names/yob2000.txt\"\n",
        "gender_names_df = pd.read_csv(url, header=None, names=['First Name', 'Sex', 'Count'])\n",
        "\n",
        "# Sort so the most frequent gender per name comes first\n",
        "gender_names_df_sorted = gender_names_df.sort_values(['First Name', 'Count'], ascending = [True, False])\n",
        "\n",
        "# Drop duplicates by name, keeping the first (i.e., most frequent) gender\n",
        "gender_names_df_cleaned = gender_names_df_sorted.drop_duplicates(subset = 'First Name', keep = 'first')\n",
        "\n",
        "# Don't need the 'Count' column anymore\n",
        "gender_names_df_cleaned = gender_names_df_cleaned.drop('Count', axis = 1)\n",
        "\n",
        "gender_names_df_cleaned.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "SA58bV0ByAh9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 581
        },
        "outputId": "8c5d0c12-3c84-4ce9-fb59-a97807882d15"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   index          Professor  \\\n",
              "0     65      Mehran Sahami   \n",
              "1     27  Kurt Carrasquilla   \n",
              "2    228       Mark Tendall   \n",
              "3     99    Robert Sapolsky   \n",
              "4    105      Keith Schwarz   \n",
              "\n",
              "                                     Student Reviews  Overall Rating  \\\n",
              "0  [I took cs106a with Mehran Sahami. His lecture...             4.9   \n",
              "1  [Kurt is an amazing teacher! His explanations ...             4.9   \n",
              "2  [\\, ok lecturer., Prof. Tendall teaches you th...             3.7   \n",
              "3  [His class is difficult because his field is d...             4.8   \n",
              "4  [so much energy, he really teaches you the mat...             4.5   \n",
              "\n",
              "   Difficulty Rating  Num Ratings  \\\n",
              "0                2.1           94   \n",
              "1                2.6           84   \n",
              "2                2.8           29   \n",
              "3                2.9           27   \n",
              "4                3.6           25   \n",
              "\n",
              "                                            Top Tags  \\\n",
              "0  [Amazing lectures, Inspirational, Hilarious, R...   \n",
              "1  [Amazing lectures, Inspirational, Caring, Resp...   \n",
              "2    [Amazing lectures, Would take again, Hilarious]   \n",
              "3  [Amazing lectures, Inspirational, Hilarious, R...   \n",
              "4  [Amazing lectures, Inspirational, Respected, H...   \n",
              "\n",
              "                                  Stanford Profile          Department  \\\n",
              "0      https://profiles.stanford.edu/mehran-sahami    Computer Science   \n",
              "1  https://profiles.stanford.edu/kurt-carrasquilla  Continuing Studies   \n",
              "2       https://profiles.stanford.edu/mark-tendall           Economics   \n",
              "3    https://profiles.stanford.edu/robert-sapolsky             Biology   \n",
              "4      https://profiles.stanford.edu/keith-schwarz    Computer Science   \n",
              "\n",
              "                Position  Num Publications  Published First Name  Sex  \n",
              "0     Professor-Teaching                13       True     Mehran  NaN  \n",
              "1  Summer CSP Instructor                 0      False       Kurt    M  \n",
              "2      Advanced Lecturer                 0      False       Mark    M  \n",
              "3              Professor               268       True     Robert    M  \n",
              "4            Sr Lecturer                 0      False      Keith    M  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4bd199b5-d410-4e91-af1b-9cf5baba1399\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>index</th>\n",
              "      <th>Professor</th>\n",
              "      <th>Student Reviews</th>\n",
              "      <th>Overall Rating</th>\n",
              "      <th>Difficulty Rating</th>\n",
              "      <th>Num Ratings</th>\n",
              "      <th>Top Tags</th>\n",
              "      <th>Stanford Profile</th>\n",
              "      <th>Department</th>\n",
              "      <th>Position</th>\n",
              "      <th>Num Publications</th>\n",
              "      <th>Published</th>\n",
              "      <th>First Name</th>\n",
              "      <th>Sex</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>65</td>\n",
              "      <td>Mehran Sahami</td>\n",
              "      <td>[I took cs106a with Mehran Sahami. His lecture...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.1</td>\n",
              "      <td>94</td>\n",
              "      <td>[Amazing lectures, Inspirational, Hilarious, R...</td>\n",
              "      <td>https://profiles.stanford.edu/mehran-sahami</td>\n",
              "      <td>Computer Science</td>\n",
              "      <td>Professor-Teaching</td>\n",
              "      <td>13</td>\n",
              "      <td>True</td>\n",
              "      <td>Mehran</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>27</td>\n",
              "      <td>Kurt Carrasquilla</td>\n",
              "      <td>[Kurt is an amazing teacher! His explanations ...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.6</td>\n",
              "      <td>84</td>\n",
              "      <td>[Amazing lectures, Inspirational, Caring, Resp...</td>\n",
              "      <td>https://profiles.stanford.edu/kurt-carrasquilla</td>\n",
              "      <td>Continuing Studies</td>\n",
              "      <td>Summer CSP Instructor</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>Kurt</td>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>228</td>\n",
              "      <td>Mark Tendall</td>\n",
              "      <td>[\\, ok lecturer., Prof. Tendall teaches you th...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>2.8</td>\n",
              "      <td>29</td>\n",
              "      <td>[Amazing lectures, Would take again, Hilarious]</td>\n",
              "      <td>https://profiles.stanford.edu/mark-tendall</td>\n",
              "      <td>Economics</td>\n",
              "      <td>Advanced Lecturer</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>Mark</td>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>99</td>\n",
              "      <td>Robert Sapolsky</td>\n",
              "      <td>[His class is difficult because his field is d...</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.9</td>\n",
              "      <td>27</td>\n",
              "      <td>[Amazing lectures, Inspirational, Hilarious, R...</td>\n",
              "      <td>https://profiles.stanford.edu/robert-sapolsky</td>\n",
              "      <td>Biology</td>\n",
              "      <td>Professor</td>\n",
              "      <td>268</td>\n",
              "      <td>True</td>\n",
              "      <td>Robert</td>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>105</td>\n",
              "      <td>Keith Schwarz</td>\n",
              "      <td>[so much energy, he really teaches you the mat...</td>\n",
              "      <td>4.5</td>\n",
              "      <td>3.6</td>\n",
              "      <td>25</td>\n",
              "      <td>[Amazing lectures, Inspirational, Respected, H...</td>\n",
              "      <td>https://profiles.stanford.edu/keith-schwarz</td>\n",
              "      <td>Computer Science</td>\n",
              "      <td>Sr Lecturer</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>Keith</td>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4bd199b5-d410-4e91-af1b-9cf5baba1399')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4bd199b5-d410-4e91-af1b-9cf5baba1399 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4bd199b5-d410-4e91-af1b-9cf5baba1399');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-02e467a1-f4eb-4e86-9d23-56f012cd8cee\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-02e467a1-f4eb-4e86-9d23-56f012cd8cee')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-02e467a1-f4eb-4e86-9d23-56f012cd8cee button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "prof_gender_df",
              "summary": "{\n  \"name\": \"prof_gender_df\",\n  \"rows\": 195,\n  \"fields\": [\n    {\n      \"column\": \"index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 114,\n        \"min\": 1,\n        \"max\": 405,\n        \"num_unique_values\": 195,\n        \"samples\": [\n          53,\n          217,\n          390\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Professor\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 195,\n        \"samples\": [\n          \"Justin Grimmer\",\n          \"Hong Zeng\",\n          \"Mark Jacobson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Student Reviews\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Overall Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3162700125615592,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          3.3,\n          1.3,\n          4.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Difficulty Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.957065907864119,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          5.0,\n          3.4,\n          4.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Num Ratings\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 0,\n        \"max\": 94,\n        \"num_unique_values\": 25,\n        \"samples\": [\n          20,\n          8,\n          94\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Top Tags\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stanford Profile\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 195,\n        \"samples\": [\n          \"https://profiles.stanford.edu/justin-grimmer\",\n          \"https://profiles.stanford.edu/hong-zeng\",\n          \"https://profiles.stanford.edu/mark-jacobson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Department\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 64,\n        \"samples\": [\n          \"Center for Race & Ethnicity\",\n          \"SLAC National Accelerator Laboratory\",\n          \"Computer Science\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Position\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 41,\n        \"samples\": [\n          \"Assoc. Professor\",\n          \"Professor Emeritus\",\n          \"Adjunct Lecturer\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Num Publications\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 103,\n        \"min\": 0,\n        \"max\": 593,\n        \"num_unique_values\": 93,\n        \"samples\": [\n          255,\n          65,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Published\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"First Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 151,\n        \"samples\": [\n          \"Morris\",\n          \"Giovanni\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 24
        }
      ],
      "source": [
        "# Merge DataFrames so that professors are assigned gender that is most frequently associated with their name\n",
        "valid_sorted_review_df = valid_sorted_review_df.reset_index()\n",
        "\n",
        "valid_sorted_review_df['First Name'] = valid_sorted_review_df['Professor'].str.split(' ').str[0]\n",
        "\n",
        "prof_gender_df = pd.merge(valid_sorted_review_df,\n",
        "                                  gender_names_df_cleaned,\n",
        "                                  on = 'First Name',\n",
        "                                  how = 'left')\n",
        "\n",
        "prof_gender_df.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "qCE-MJzEw06d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "646e5d0c-85cb-4085-9e8c-3526dea30dd4"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     index           Professor  \\\n",
              "0       65       Mehran Sahami   \n",
              "20     216        Ewart Thomas   \n",
              "36     310        Wray Huestis   \n",
              "46     176         Liran Einav   \n",
              "59     177      Chaitan Khosla   \n",
              "63     354          Pavle Levi   \n",
              "80       5  Wojciech Wieczorek   \n",
              "98     261       Jure Leskovec   \n",
              "110    213     Blakey Vermeule   \n",
              "121    233      Tadashi Fukami   \n",
              "127    156   Agripino Silveira   \n",
              "135    318         Hongjie Dai   \n",
              "136    101           Dafna Zur   \n",
              "140    267      Persi Diaconis   \n",
              "149    147           Usha Iyer   \n",
              "178    170             Ge Wang   \n",
              "179    127      Mutallip Anwar   \n",
              "180    128     Subhasish Mitra   \n",
              "186     50        Guosong Hong   \n",
              "\n",
              "                                       Student Reviews  Overall Rating  \\\n",
              "0    [I took cs106a with Mehran Sahami. His lecture...             4.9   \n",
              "20   [Super unclear lecturer and even more unclear ...             4.5   \n",
              "36   [Best teacher I've ever had in high school, co...             4.8   \n",
              "46   [Useless feedback, HIST 101, Absolutely painfu...             2.5   \n",
              "59   [Had him for E20 (intro to chemE) and it was j...             3.4   \n",
              "63   [Professor Levi is what makes the film departm...             4.3   \n",
              "80   [Esta clase es dura, pero en el buen sentido.,...             2.5   \n",
              "98   [Great class, but the homework is EXTREMELY ti...             4.7   \n",
              "110  [Really interesting professor. I personally li...             4.0   \n",
              "121  [Wonderful, very personable professor. I had h...             2.8   \n",
              "127  [Fantastic, very funny professor! I learned so...             5.0   \n",
              "135                      [He's awesome!, He's awesome]             3.3   \n",
              "136  [One of the most enriching professors I've eve...             3.0   \n",
              "140  [Great!, Diaconis is possibly the worst kind o...             2.5   \n",
              "149  [A true role model, and life mentor. Inspiring...             5.0   \n",
              "178  [Professor Ge Wang is a total genius, probably...             5.0   \n",
              "179  [Prof Anwar was remarkable! He makes the effor...             5.0   \n",
              "180  [Nice person overall. Answer your questions. B...             2.0   \n",
              "186  [Take advantage of students' resources and men...             1.0   \n",
              "\n",
              "     Difficulty Rating  Num Ratings  \\\n",
              "0                  2.1           94   \n",
              "20                 2.7           13   \n",
              "36                 3.3            8   \n",
              "46                 4.6            7   \n",
              "59                 4.0            6   \n",
              "63                 2.4            5   \n",
              "80                 3.5            4   \n",
              "98                 4.0            3   \n",
              "110                3.0            3   \n",
              "121                3.0            2   \n",
              "127                3.0            2   \n",
              "135                3.0            2   \n",
              "136                4.5            2   \n",
              "140                4.5            2   \n",
              "149                4.0            2   \n",
              "178                3.0            1   \n",
              "179                3.0            1   \n",
              "180                3.0            1   \n",
              "186                5.0            1   \n",
              "\n",
              "                                              Top Tags  \\\n",
              "0    [Amazing lectures, Inspirational, Hilarious, R...   \n",
              "20                                  [Amazing lectures]   \n",
              "36                                                  []   \n",
              "46                                                  []   \n",
              "59                                                  []   \n",
              "63                                                  []   \n",
              "80                      [Lots of homework, Test heavy]   \n",
              "98     [Would take again, Lots of homework, Respected]   \n",
              "110  [Get ready to read, Graded by few things, Part...   \n",
              "121                         [Would take again, Caring]   \n",
              "127  [Participation matters, Hilarious, Gives good ...   \n",
              "135                                                 []   \n",
              "136  [Tough grader, Get ready to read, Participatio...   \n",
              "140       [Amazing lectures, Inspirational, Respected]   \n",
              "149  [Gives good feedback, Participation matters, A...   \n",
              "178       [Amazing lectures, Inspirational, Respected]   \n",
              "179  [Gives good feedback, Respected, Accessible ou...   \n",
              "180  [Get ready to read, Group projects, Lots of ho...   \n",
              "186          [Tough grader, Hilarious, So many papers]   \n",
              "\n",
              "                                     Stanford Profile  \\\n",
              "0         https://profiles.stanford.edu/mehran-sahami   \n",
              "20         https://profiles.stanford.edu/ewart-thomas   \n",
              "36         https://profiles.stanford.edu/wray-huestis   \n",
              "46          https://profiles.stanford.edu/liran-einav   \n",
              "59       https://profiles.stanford.edu/chaitan-khosla   \n",
              "63           https://profiles.stanford.edu/pavle-levi   \n",
              "80   https://profiles.stanford.edu/wojciech-wieczorek   \n",
              "98        https://profiles.stanford.edu/jure-leskovec   \n",
              "110     https://profiles.stanford.edu/blakey-vermeule   \n",
              "121      https://profiles.stanford.edu/tadashi-fukami   \n",
              "127   https://profiles.stanford.edu/agripino-silveira   \n",
              "135         https://profiles.stanford.edu/hongjie-dai   \n",
              "136           https://profiles.stanford.edu/dafna-zur   \n",
              "140      https://profiles.stanford.edu/persi-diaconis   \n",
              "149           https://profiles.stanford.edu/usha-iyer   \n",
              "178             https://profiles.stanford.edu/ge-wang   \n",
              "179      https://profiles.stanford.edu/mutallip-anwar   \n",
              "180     https://profiles.stanford.edu/subhasish-mitra   \n",
              "186        https://profiles.stanford.edu/guosong-hong   \n",
              "\n",
              "                            Department  \\\n",
              "0                     Computer Science   \n",
              "20                          Psychology   \n",
              "36                           Chemistry   \n",
              "46                           Economics   \n",
              "59                Chemical Engineering   \n",
              "63                   Art & Art History   \n",
              "80                         Mathematics   \n",
              "98                    Computer Science   \n",
              "110                          Not found   \n",
              "121                            Biology   \n",
              "127                       Language Ctr   \n",
              "135                          Chemistry   \n",
              "136  East Asian Languages and Cultures   \n",
              "140                         Statistics   \n",
              "149                          Not found   \n",
              "178                          Not found   \n",
              "179    Program in Writing and Rhetoric   \n",
              "180             Electrical Engineering   \n",
              "186  Materials Science and Engineering   \n",
              "\n",
              "                                              Position  Num Publications  \\\n",
              "0                                   Professor-Teaching                13   \n",
              "20                      Emeritus Faculty, Acad Council                54   \n",
              "36                      Emeritus Faculty, Acad Council                62   \n",
              "46                                           Professor                90   \n",
              "59                                           Professor               411   \n",
              "63                                           Professor                 0   \n",
              "80                                            Lecturer                 0   \n",
              "98                                           Professor                91   \n",
              "110                                          Not found                 3   \n",
              "121                                          Professor               122   \n",
              "127                                  Advanced Lecturer                 0   \n",
              "135                     Emeritus Faculty, Acad Council               383   \n",
              "136                                    Assoc Professor                10   \n",
              "140                                          Professor               230   \n",
              "149                                          Not found                 4   \n",
              "178                                          Not found                12   \n",
              "179                                           Lecturer                 0   \n",
              "180                          Wiiliam E. Ayer Professor               137   \n",
              "186  Assistant Professor and Wu Tsai Neuroscience I...               103   \n",
              "\n",
              "     Published First Name  Sex  \n",
              "0         True     Mehran  NaN  \n",
              "20        True      Ewart  NaN  \n",
              "36        True       Wray  NaN  \n",
              "46        True      Liran  NaN  \n",
              "59        True    Chaitan  NaN  \n",
              "63       False      Pavle  NaN  \n",
              "80       False   Wojciech  NaN  \n",
              "98        True       Jure  NaN  \n",
              "110       True     Blakey  NaN  \n",
              "121       True    Tadashi  NaN  \n",
              "127      False   Agripino  NaN  \n",
              "135       True    Hongjie  NaN  \n",
              "136       True      Dafna  NaN  \n",
              "140       True      Persi  NaN  \n",
              "149       True       Usha  NaN  \n",
              "178       True         Ge  NaN  \n",
              "179      False   Mutallip  NaN  \n",
              "180       True  Subhasish  NaN  \n",
              "186       True    Guosong  NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-53671caf-7c1a-4382-9b67-e77cc6d2cdc9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>index</th>\n",
              "      <th>Professor</th>\n",
              "      <th>Student Reviews</th>\n",
              "      <th>Overall Rating</th>\n",
              "      <th>Difficulty Rating</th>\n",
              "      <th>Num Ratings</th>\n",
              "      <th>Top Tags</th>\n",
              "      <th>Stanford Profile</th>\n",
              "      <th>Department</th>\n",
              "      <th>Position</th>\n",
              "      <th>Num Publications</th>\n",
              "      <th>Published</th>\n",
              "      <th>First Name</th>\n",
              "      <th>Sex</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>65</td>\n",
              "      <td>Mehran Sahami</td>\n",
              "      <td>[I took cs106a with Mehran Sahami. His lecture...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.1</td>\n",
              "      <td>94</td>\n",
              "      <td>[Amazing lectures, Inspirational, Hilarious, R...</td>\n",
              "      <td>https://profiles.stanford.edu/mehran-sahami</td>\n",
              "      <td>Computer Science</td>\n",
              "      <td>Professor-Teaching</td>\n",
              "      <td>13</td>\n",
              "      <td>True</td>\n",
              "      <td>Mehran</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>216</td>\n",
              "      <td>Ewart Thomas</td>\n",
              "      <td>[Super unclear lecturer and even more unclear ...</td>\n",
              "      <td>4.5</td>\n",
              "      <td>2.7</td>\n",
              "      <td>13</td>\n",
              "      <td>[Amazing lectures]</td>\n",
              "      <td>https://profiles.stanford.edu/ewart-thomas</td>\n",
              "      <td>Psychology</td>\n",
              "      <td>Emeritus Faculty, Acad Council</td>\n",
              "      <td>54</td>\n",
              "      <td>True</td>\n",
              "      <td>Ewart</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>310</td>\n",
              "      <td>Wray Huestis</td>\n",
              "      <td>[Best teacher I've ever had in high school, co...</td>\n",
              "      <td>4.8</td>\n",
              "      <td>3.3</td>\n",
              "      <td>8</td>\n",
              "      <td>[]</td>\n",
              "      <td>https://profiles.stanford.edu/wray-huestis</td>\n",
              "      <td>Chemistry</td>\n",
              "      <td>Emeritus Faculty, Acad Council</td>\n",
              "      <td>62</td>\n",
              "      <td>True</td>\n",
              "      <td>Wray</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>176</td>\n",
              "      <td>Liran Einav</td>\n",
              "      <td>[Useless feedback, HIST 101, Absolutely painfu...</td>\n",
              "      <td>2.5</td>\n",
              "      <td>4.6</td>\n",
              "      <td>7</td>\n",
              "      <td>[]</td>\n",
              "      <td>https://profiles.stanford.edu/liran-einav</td>\n",
              "      <td>Economics</td>\n",
              "      <td>Professor</td>\n",
              "      <td>90</td>\n",
              "      <td>True</td>\n",
              "      <td>Liran</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>59</th>\n",
              "      <td>177</td>\n",
              "      <td>Chaitan Khosla</td>\n",
              "      <td>[Had him for E20 (intro to chemE) and it was j...</td>\n",
              "      <td>3.4</td>\n",
              "      <td>4.0</td>\n",
              "      <td>6</td>\n",
              "      <td>[]</td>\n",
              "      <td>https://profiles.stanford.edu/chaitan-khosla</td>\n",
              "      <td>Chemical Engineering</td>\n",
              "      <td>Professor</td>\n",
              "      <td>411</td>\n",
              "      <td>True</td>\n",
              "      <td>Chaitan</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>63</th>\n",
              "      <td>354</td>\n",
              "      <td>Pavle Levi</td>\n",
              "      <td>[Professor Levi is what makes the film departm...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>2.4</td>\n",
              "      <td>5</td>\n",
              "      <td>[]</td>\n",
              "      <td>https://profiles.stanford.edu/pavle-levi</td>\n",
              "      <td>Art &amp; Art History</td>\n",
              "      <td>Professor</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>Pavle</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80</th>\n",
              "      <td>5</td>\n",
              "      <td>Wojciech Wieczorek</td>\n",
              "      <td>[Esta clase es dura, pero en el buen sentido.,...</td>\n",
              "      <td>2.5</td>\n",
              "      <td>3.5</td>\n",
              "      <td>4</td>\n",
              "      <td>[Lots of homework, Test heavy]</td>\n",
              "      <td>https://profiles.stanford.edu/wojciech-wieczorek</td>\n",
              "      <td>Mathematics</td>\n",
              "      <td>Lecturer</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>Wojciech</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>261</td>\n",
              "      <td>Jure Leskovec</td>\n",
              "      <td>[Great class, but the homework is EXTREMELY ti...</td>\n",
              "      <td>4.7</td>\n",
              "      <td>4.0</td>\n",
              "      <td>3</td>\n",
              "      <td>[Would take again, Lots of homework, Respected]</td>\n",
              "      <td>https://profiles.stanford.edu/jure-leskovec</td>\n",
              "      <td>Computer Science</td>\n",
              "      <td>Professor</td>\n",
              "      <td>91</td>\n",
              "      <td>True</td>\n",
              "      <td>Jure</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>110</th>\n",
              "      <td>213</td>\n",
              "      <td>Blakey Vermeule</td>\n",
              "      <td>[Really interesting professor. I personally li...</td>\n",
              "      <td>4.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3</td>\n",
              "      <td>[Get ready to read, Graded by few things, Part...</td>\n",
              "      <td>https://profiles.stanford.edu/blakey-vermeule</td>\n",
              "      <td>Not found</td>\n",
              "      <td>Not found</td>\n",
              "      <td>3</td>\n",
              "      <td>True</td>\n",
              "      <td>Blakey</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>121</th>\n",
              "      <td>233</td>\n",
              "      <td>Tadashi Fukami</td>\n",
              "      <td>[Wonderful, very personable professor. I had h...</td>\n",
              "      <td>2.8</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2</td>\n",
              "      <td>[Would take again, Caring]</td>\n",
              "      <td>https://profiles.stanford.edu/tadashi-fukami</td>\n",
              "      <td>Biology</td>\n",
              "      <td>Professor</td>\n",
              "      <td>122</td>\n",
              "      <td>True</td>\n",
              "      <td>Tadashi</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>127</th>\n",
              "      <td>156</td>\n",
              "      <td>Agripino Silveira</td>\n",
              "      <td>[Fantastic, very funny professor! I learned so...</td>\n",
              "      <td>5.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2</td>\n",
              "      <td>[Participation matters, Hilarious, Gives good ...</td>\n",
              "      <td>https://profiles.stanford.edu/agripino-silveira</td>\n",
              "      <td>Language Ctr</td>\n",
              "      <td>Advanced Lecturer</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>Agripino</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>135</th>\n",
              "      <td>318</td>\n",
              "      <td>Hongjie Dai</td>\n",
              "      <td>[He's awesome!, He's awesome]</td>\n",
              "      <td>3.3</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2</td>\n",
              "      <td>[]</td>\n",
              "      <td>https://profiles.stanford.edu/hongjie-dai</td>\n",
              "      <td>Chemistry</td>\n",
              "      <td>Emeritus Faculty, Acad Council</td>\n",
              "      <td>383</td>\n",
              "      <td>True</td>\n",
              "      <td>Hongjie</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>136</th>\n",
              "      <td>101</td>\n",
              "      <td>Dafna Zur</td>\n",
              "      <td>[One of the most enriching professors I've eve...</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.5</td>\n",
              "      <td>2</td>\n",
              "      <td>[Tough grader, Get ready to read, Participatio...</td>\n",
              "      <td>https://profiles.stanford.edu/dafna-zur</td>\n",
              "      <td>East Asian Languages and Cultures</td>\n",
              "      <td>Assoc Professor</td>\n",
              "      <td>10</td>\n",
              "      <td>True</td>\n",
              "      <td>Dafna</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>140</th>\n",
              "      <td>267</td>\n",
              "      <td>Persi Diaconis</td>\n",
              "      <td>[Great!, Diaconis is possibly the worst kind o...</td>\n",
              "      <td>2.5</td>\n",
              "      <td>4.5</td>\n",
              "      <td>2</td>\n",
              "      <td>[Amazing lectures, Inspirational, Respected]</td>\n",
              "      <td>https://profiles.stanford.edu/persi-diaconis</td>\n",
              "      <td>Statistics</td>\n",
              "      <td>Professor</td>\n",
              "      <td>230</td>\n",
              "      <td>True</td>\n",
              "      <td>Persi</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>149</th>\n",
              "      <td>147</td>\n",
              "      <td>Usha Iyer</td>\n",
              "      <td>[A true role model, and life mentor. Inspiring...</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>2</td>\n",
              "      <td>[Gives good feedback, Participation matters, A...</td>\n",
              "      <td>https://profiles.stanford.edu/usha-iyer</td>\n",
              "      <td>Not found</td>\n",
              "      <td>Not found</td>\n",
              "      <td>4</td>\n",
              "      <td>True</td>\n",
              "      <td>Usha</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>178</th>\n",
              "      <td>170</td>\n",
              "      <td>Ge Wang</td>\n",
              "      <td>[Professor Ge Wang is a total genius, probably...</td>\n",
              "      <td>5.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1</td>\n",
              "      <td>[Amazing lectures, Inspirational, Respected]</td>\n",
              "      <td>https://profiles.stanford.edu/ge-wang</td>\n",
              "      <td>Not found</td>\n",
              "      <td>Not found</td>\n",
              "      <td>12</td>\n",
              "      <td>True</td>\n",
              "      <td>Ge</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>179</th>\n",
              "      <td>127</td>\n",
              "      <td>Mutallip Anwar</td>\n",
              "      <td>[Prof Anwar was remarkable! He makes the effor...</td>\n",
              "      <td>5.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1</td>\n",
              "      <td>[Gives good feedback, Respected, Accessible ou...</td>\n",
              "      <td>https://profiles.stanford.edu/mutallip-anwar</td>\n",
              "      <td>Program in Writing and Rhetoric</td>\n",
              "      <td>Lecturer</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>Mutallip</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>180</th>\n",
              "      <td>128</td>\n",
              "      <td>Subhasish Mitra</td>\n",
              "      <td>[Nice person overall. Answer your questions. B...</td>\n",
              "      <td>2.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1</td>\n",
              "      <td>[Get ready to read, Group projects, Lots of ho...</td>\n",
              "      <td>https://profiles.stanford.edu/subhasish-mitra</td>\n",
              "      <td>Electrical Engineering</td>\n",
              "      <td>Wiiliam E. Ayer Professor</td>\n",
              "      <td>137</td>\n",
              "      <td>True</td>\n",
              "      <td>Subhasish</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>186</th>\n",
              "      <td>50</td>\n",
              "      <td>Guosong Hong</td>\n",
              "      <td>[Take advantage of students' resources and men...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1</td>\n",
              "      <td>[Tough grader, Hilarious, So many papers]</td>\n",
              "      <td>https://profiles.stanford.edu/guosong-hong</td>\n",
              "      <td>Materials Science and Engineering</td>\n",
              "      <td>Assistant Professor and Wu Tsai Neuroscience I...</td>\n",
              "      <td>103</td>\n",
              "      <td>True</td>\n",
              "      <td>Guosong</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-53671caf-7c1a-4382-9b67-e77cc6d2cdc9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-53671caf-7c1a-4382-9b67-e77cc6d2cdc9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-53671caf-7c1a-4382-9b67-e77cc6d2cdc9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-9b4613e8-41df-4063-a141-fe5578203ef2\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9b4613e8-41df-4063-a141-fe5578203ef2')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-9b4613e8-41df-4063-a141-fe5578203ef2 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "repr_error": "Out of range float values are not JSON compliant: nan"
            }
          },
          "metadata": {},
          "execution_count": 25
        }
      ],
      "source": [
        "# Check which professors did not get assigned a gender\n",
        "prof_gender_df[prof_gender_df['Sex'].isna()]\n",
        "\n",
        "# Drop Uta Francke: her comments are 'no comments'\n",
        "prof_gender_df = prof_gender_df[prof_gender_df['Professor'] != 'Uta Francke']\n",
        "\n",
        "# Check which professors did not get assigned a gender\n",
        "prof_gender_df[prof_gender_df['Sex'].isna()]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "zwk8nwbptxAl",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "81b73aab-5e78-4f85-dcac-1b24c5fcc463"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "np.int64(0)"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ],
      "source": [
        "# Manually fill gender for those not yet assigned\n",
        "manual_gender = pd.DataFrame({\n",
        "    'Professor': [\n",
        "        'Mehran Sahami',\n",
        "        'Ewart Thomas',\n",
        "        'Wray Huestis',\n",
        "        'Liran Einav',\n",
        "        'Chaitan Khosla',\n",
        "        'Pavle Levi',\n",
        "        'Wojciech Wieczorek',\n",
        "        'Jure Leskovec',\n",
        "        'Blakey Vermeule',\n",
        "        'Usha Iyer',\n",
        "        'Agripino Silveira',\n",
        "        'Dafna Zur',\n",
        "        'Hongjie Dai',\n",
        "        'Tadashi Fukami',\n",
        "        'Persi Diaconis',\n",
        "        'Guosong Hong',\n",
        "        'Ge Wang',\n",
        "        'Mutallip Anwar',\n",
        "        'Subhasish Mitra'\n",
        "    ],\n",
        "    'Sex': [\n",
        "        'M',\n",
        "        'M',\n",
        "        'F',\n",
        "        'M',\n",
        "        'M',\n",
        "        'M',\n",
        "        'M',\n",
        "        'M',\n",
        "        'F',\n",
        "        'F',\n",
        "        'M',\n",
        "        'F',\n",
        "        'M',\n",
        "        'M',\n",
        "        'M',\n",
        "        'M',\n",
        "        'M',\n",
        "        'M',\n",
        "        'M'\n",
        "    ]\n",
        "})\n",
        "\n",
        "# Fill missing sex values in valid_sorted_review_df with sex values from manual_gender\n",
        "prof_gender_df['Sex'] = prof_gender_df['Sex'].fillna(\n",
        "    prof_gender_df['Professor'].map(manual_gender.set_index('Professor')['Sex'])\n",
        ")\n",
        "\n",
        "# Check that there are no missing sex values, should return zero\n",
        "(prof_gender_df['Sex'].isna()).sum()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Adding Department Size Variable**"
      ],
      "metadata": {
        "id": "ydCajXx06fXg"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "XrO0mMUYxKdV",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "00085876-f5cc-42d3-df4e-0fd1667204b8"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                             Department  Department Size\n",
              "0          Aeronautics and Astronautics            101.0\n",
              "1                       African Studies              0.0\n",
              "2  African and African American Studies              4.0\n",
              "3                      American Studies              8.0\n",
              "4                          Anthropology             19.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-058112e3-7157-4ce6-80a6-a7fc48c087a2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Department</th>\n",
              "      <th>Department Size</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Aeronautics and Astronautics</td>\n",
              "      <td>101.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>African Studies</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>African and African American Studies</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>American Studies</td>\n",
              "      <td>8.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Anthropology</td>\n",
              "      <td>19.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-058112e3-7157-4ce6-80a6-a7fc48c087a2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-058112e3-7157-4ce6-80a6-a7fc48c087a2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-058112e3-7157-4ce6-80a6-a7fc48c087a2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-cb349860-9fd0-4247-886d-802658ff099f\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cb349860-9fd0-4247-886d-802658ff099f')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-cb349860-9fd0-4247-886d-802658ff099f button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "department_size",
              "summary": "{\n  \"name\": \"department_size\",\n  \"rows\": 135,\n  \"fields\": [\n    {\n      \"column\": \"Department\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 135,\n        \"samples\": [\n          \"Master of Liberal Arts\",\n          \"French\",\n          \"Modern Thought and Literature\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Department Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 483.2120929885678,\n        \"min\": 0.0,\n        \"max\": 5549.0,\n        \"num_unique_values\": 59,\n        \"samples\": [\n          101.0,\n          25.0,\n          20.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 27
        }
      ],
      "source": [
        "# Read in data with number of degree conferrals by department\n",
        "url = 'https://docs.google.com/spreadsheets/d/1CWp7OneH_1xv845LUwHkgQJPPRnHL9Z-/export?format=csv&gid=922383119'\n",
        "num_degrees_conferred = pd.read_csv(url)\n",
        "\n",
        "num_degrees_conferred = num_degrees_conferred.rename(columns={'Unnamed: 0': 'Department'})\n",
        "\n",
        "# Fix the fact that some degree names didn't fill in because of the data structure\n",
        "num_degrees_conferred['Department'] = num_degrees_conferred['Department'].ffill()\n",
        "num_degrees_conferred['2023-24'] = num_degrees_conferred['2023-24'].fillna(0)\n",
        "\n",
        "# Create DataFrame with department sizes\n",
        "department_size = num_degrees_conferred.groupby('Department')['2023-24'].sum().reset_index()\n",
        "department_size = department_size.rename(columns={'2023-24': 'Department Size'})\n",
        "\n",
        "department_size.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "y-tH2hH4zhXa",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3836368b-059f-493d-b0a9-760fceb07b57"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['Continuing Studies',\n",
              " 'Mechanical Engineering - Flow Physics and Computation',\n",
              " 'Graduate School of Education',\n",
              " 'History Department',\n",
              " 'SCI Transgenic Service Center',\n",
              " 'Language Ctr',\n",
              " 'German',\n",
              " 'Iranian Studies',\n",
              " 'Pathology Stem Cell Institute (XSCI)',\n",
              " 'Art & Art History',\n",
              " 'Electrical Engineering - Information Systems Laboratory',\n",
              " 'Psych/General Psychiatry and Psychology (Adult)',\n",
              " 'Not found',\n",
              " 'Law School',\n",
              " 'Department of Geophysics - Geophysics',\n",
              " 'Program in Writing and Rhetoric',\n",
              " 'Sustainable Architecture & Engineering',\n",
              " 'Humanities Resource Group',\n",
              " 'Radiation Oncology - Radiation Physics',\n",
              " 'Visiting Fellowship',\n",
              " 'HOOVER RESEARCH',\n",
              " 'Medicine - Med/Oncology',\n",
              " 'FSI',\n",
              " 'Emergency Medicine - Adult Clinical/Academic',\n",
              " 'Energy Science & Engineering',\n",
              " 'Earth Systems Program',\n",
              " 'Graduate School of Business - Faculty',\n",
              " 'Center for Race & Ethnicity',\n",
              " 'East Asian Languages and Cultures',\n",
              " 'Pediatrics - Infectious Diseases',\n",
              " 'Department of Developmental Biology',\n",
              " 'Frosh 101',\n",
              " 'SLAC National Accelerator Laboratory',\n",
              " 'H & S Programs',\n",
              " 'Oceans',\n",
              " 'Psych/Public Mental Health & Population Sciences']"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ],
      "source": [
        "# Merge DataFrames\n",
        "dep_size_df = pd.merge(prof_gender_df, department_size, on = 'Department', how = 'left')\n",
        "\n",
        "# Check for missing department sizes\n",
        "list(dep_size_df[dep_size_df['Department Size'].isna()]['Department'].unique())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "oG50MzpT39xa",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 581
        },
        "outputId": "aaff16d2-77ee-4346-d75d-171c931d12da"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   index          Professor  \\\n",
              "0     65      Mehran Sahami   \n",
              "1     27  Kurt Carrasquilla   \n",
              "2    228       Mark Tendall   \n",
              "3     99    Robert Sapolsky   \n",
              "4    105      Keith Schwarz   \n",
              "\n",
              "                                     Student Reviews  Overall Rating  \\\n",
              "0  [I took cs106a with Mehran Sahami. His lecture...             4.9   \n",
              "1  [Kurt is an amazing teacher! His explanations ...             4.9   \n",
              "2  [\\, ok lecturer., Prof. Tendall teaches you th...             3.7   \n",
              "3  [His class is difficult because his field is d...             4.8   \n",
              "4  [so much energy, he really teaches you the mat...             4.5   \n",
              "\n",
              "   Difficulty Rating  Num Ratings  \\\n",
              "0                2.1           94   \n",
              "1                2.6           84   \n",
              "2                2.8           29   \n",
              "3                2.9           27   \n",
              "4                3.6           25   \n",
              "\n",
              "                                            Top Tags  \\\n",
              "0  [Amazing lectures, Inspirational, Hilarious, R...   \n",
              "1  [Amazing lectures, Inspirational, Caring, Resp...   \n",
              "2    [Amazing lectures, Would take again, Hilarious]   \n",
              "3  [Amazing lectures, Inspirational, Hilarious, R...   \n",
              "4  [Amazing lectures, Inspirational, Respected, H...   \n",
              "\n",
              "                                  Stanford Profile          Department  \\\n",
              "0      https://profiles.stanford.edu/mehran-sahami    Computer Science   \n",
              "1  https://profiles.stanford.edu/kurt-carrasquilla  Continuing Studies   \n",
              "2       https://profiles.stanford.edu/mark-tendall           Economics   \n",
              "3    https://profiles.stanford.edu/robert-sapolsky             Biology   \n",
              "4      https://profiles.stanford.edu/keith-schwarz    Computer Science   \n",
              "\n",
              "                Position  Num Publications  Published First Name Sex  \\\n",
              "0     Professor-Teaching                13       True     Mehran   M   \n",
              "1  Summer CSP Instructor                 0      False       Kurt   M   \n",
              "2      Advanced Lecturer                 0      False       Mark   M   \n",
              "3              Professor               268       True     Robert   M   \n",
              "4            Sr Lecturer                 0      False      Keith   M   \n",
              "\n",
              "   Department Size  \n",
              "0            828.0  \n",
              "1              NaN  \n",
              "2            156.0  \n",
              "3            120.0  \n",
              "4            828.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0322fcf8-65f9-4f47-824e-694e54bcc973\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>index</th>\n",
              "      <th>Professor</th>\n",
              "      <th>Student Reviews</th>\n",
              "      <th>Overall Rating</th>\n",
              "      <th>Difficulty Rating</th>\n",
              "      <th>Num Ratings</th>\n",
              "      <th>Top Tags</th>\n",
              "      <th>Stanford Profile</th>\n",
              "      <th>Department</th>\n",
              "      <th>Position</th>\n",
              "      <th>Num Publications</th>\n",
              "      <th>Published</th>\n",
              "      <th>First Name</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Department Size</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>65</td>\n",
              "      <td>Mehran Sahami</td>\n",
              "      <td>[I took cs106a with Mehran Sahami. His lecture...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.1</td>\n",
              "      <td>94</td>\n",
              "      <td>[Amazing lectures, Inspirational, Hilarious, R...</td>\n",
              "      <td>https://profiles.stanford.edu/mehran-sahami</td>\n",
              "      <td>Computer Science</td>\n",
              "      <td>Professor-Teaching</td>\n",
              "      <td>13</td>\n",
              "      <td>True</td>\n",
              "      <td>Mehran</td>\n",
              "      <td>M</td>\n",
              "      <td>828.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>27</td>\n",
              "      <td>Kurt Carrasquilla</td>\n",
              "      <td>[Kurt is an amazing teacher! His explanations ...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.6</td>\n",
              "      <td>84</td>\n",
              "      <td>[Amazing lectures, Inspirational, Caring, Resp...</td>\n",
              "      <td>https://profiles.stanford.edu/kurt-carrasquilla</td>\n",
              "      <td>Continuing Studies</td>\n",
              "      <td>Summer CSP Instructor</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>Kurt</td>\n",
              "      <td>M</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>228</td>\n",
              "      <td>Mark Tendall</td>\n",
              "      <td>[\\, ok lecturer., Prof. Tendall teaches you th...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>2.8</td>\n",
              "      <td>29</td>\n",
              "      <td>[Amazing lectures, Would take again, Hilarious]</td>\n",
              "      <td>https://profiles.stanford.edu/mark-tendall</td>\n",
              "      <td>Economics</td>\n",
              "      <td>Advanced Lecturer</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>Mark</td>\n",
              "      <td>M</td>\n",
              "      <td>156.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>99</td>\n",
              "      <td>Robert Sapolsky</td>\n",
              "      <td>[His class is difficult because his field is d...</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.9</td>\n",
              "      <td>27</td>\n",
              "      <td>[Amazing lectures, Inspirational, Hilarious, R...</td>\n",
              "      <td>https://profiles.stanford.edu/robert-sapolsky</td>\n",
              "      <td>Biology</td>\n",
              "      <td>Professor</td>\n",
              "      <td>268</td>\n",
              "      <td>True</td>\n",
              "      <td>Robert</td>\n",
              "      <td>M</td>\n",
              "      <td>120.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>105</td>\n",
              "      <td>Keith Schwarz</td>\n",
              "      <td>[so much energy, he really teaches you the mat...</td>\n",
              "      <td>4.5</td>\n",
              "      <td>3.6</td>\n",
              "      <td>25</td>\n",
              "      <td>[Amazing lectures, Inspirational, Respected, H...</td>\n",
              "      <td>https://profiles.stanford.edu/keith-schwarz</td>\n",
              "      <td>Computer Science</td>\n",
              "      <td>Sr Lecturer</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>Keith</td>\n",
              "      <td>M</td>\n",
              "      <td>828.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0322fcf8-65f9-4f47-824e-694e54bcc973')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0322fcf8-65f9-4f47-824e-694e54bcc973 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0322fcf8-65f9-4f47-824e-694e54bcc973');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-90bb794a-5269-419d-ac64-1f765b5edde7\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-90bb794a-5269-419d-ac64-1f765b5edde7')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-90bb794a-5269-419d-ac64-1f765b5edde7 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "dep_size_df",
              "summary": "{\n  \"name\": \"dep_size_df\",\n  \"rows\": 194,\n  \"fields\": [\n    {\n      \"column\": \"index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 113,\n        \"min\": 1,\n        \"max\": 405,\n        \"num_unique_values\": 194,\n        \"samples\": [\n          53,\n          217,\n          390\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Professor\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 194,\n        \"samples\": [\n          \"Justin Grimmer\",\n          \"Hong Zeng\",\n          \"Mark Jacobson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Student Reviews\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Overall Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.305073040174442,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          3.3,\n          1.3,\n          4.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Difficulty Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9577947937532704,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          5.0,\n          3.4,\n          4.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Num Ratings\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 0,\n        \"max\": 94,\n        \"num_unique_values\": 25,\n        \"samples\": [\n          20,\n          8,\n          94\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Top Tags\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stanford Profile\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 194,\n        \"samples\": [\n          \"https://profiles.stanford.edu/justin-grimmer\",\n          \"https://profiles.stanford.edu/hong-zeng\",\n          \"https://profiles.stanford.edu/mark-jacobson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Department\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 63,\n        \"samples\": [\n          \"Oceans\",\n          \"SLAC National Accelerator Laboratory\",\n          \"Computer Science\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Position\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 41,\n        \"samples\": [\n          \"Assoc. Professor\",\n          \"Professor Emeritus\",\n          \"Adjunct Lecturer\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Num Publications\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 99,\n        \"min\": 0,\n        \"max\": 593,\n        \"num_unique_values\": 92,\n        \"samples\": [\n          255,\n          65,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Published\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"First Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 150,\n        \"samples\": [\n          \"Sheri\",\n          \"Giovanni\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Department Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 249.13028994204467,\n        \"min\": 0.0,\n        \"max\": 828.0,\n        \"num_unique_values\": 37,\n        \"samples\": [\n          31.0,\n          6.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 29
        }
      ],
      "source": [
        "# Manually fill missing data department sizes if merge didn't do so properly\n",
        "manual_dep_sizes = pd.DataFrame({'Department': ['Mechanical Engineering - Flow Physics and Computation', 'Graduate School of Education', 'History Department',\n",
        "                                                'Pathology Stem Cell Institute (XSCI)', 'German', 'Art & Art History', 'Electrical Engineering - Information Systems Laboratory',\n",
        "                                                'Law School', 'Sustainable Architecture & Engineering', 'Department of Geophysics - Geophysics', 'Radiation Oncology - Radiation Physics',\n",
        "                                                'Medicine - Med/Oncology', 'Emergency Medicine - Adult Clinical/Academic', 'Earth Systems Program', 'Pediatrics - Infectious Diseases',\n",
        "                                                'East Asian Languages and Cultures', 'Center for Race & Ethnicity', 'Graduate School of Business - Faculty', 'Energy Science & Engineering',\n",
        "                                                'Department of Developmental Biology'],\n",
        "                                 'Department Size' : [261, 171, 38, 79, 6, 31, 230, 287, 206, 16, 79, 79, 79, 16, 79, 33, 18, 455, 3, 7]})\n",
        "\n",
        "# Fill missing, if manual data collection available\n",
        "dep_size_df['Department Size'] = dep_size_df['Department Size'].fillna(dep_size_df['Department'].map(manual_dep_sizes.set_index('Department')['Department Size']))\n",
        "\n",
        "# There are still about 50 that are unknown, but we have enough data to run our analysis\n",
        "dep_size_df.head()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Remove duplicates\n",
        "dep_size_df = dep_size_df.drop_duplicates(subset=\"Professor\", keep=\"first\")\n",
        "dep_size_df = dep_size_df.reset_index(drop=True)\n",
        "dep_size_df=dep_size_df.drop(columns = \"index\")\n",
        "\n",
        "dep_size_df.head()"
      ],
      "metadata": {
        "id": "JpUq01_1MaSE",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 581
        },
        "outputId": "31e0d642-1abf-4718-e153-4a3f1374b49e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           Professor                                    Student Reviews  \\\n",
              "0      Mehran Sahami  [I took cs106a with Mehran Sahami. His lecture...   \n",
              "1  Kurt Carrasquilla  [Kurt is an amazing teacher! His explanations ...   \n",
              "2       Mark Tendall  [\\, ok lecturer., Prof. Tendall teaches you th...   \n",
              "3    Robert Sapolsky  [His class is difficult because his field is d...   \n",
              "4      Keith Schwarz  [so much energy, he really teaches you the mat...   \n",
              "\n",
              "   Overall Rating  Difficulty Rating  Num Ratings  \\\n",
              "0             4.9                2.1           94   \n",
              "1             4.9                2.6           84   \n",
              "2             3.7                2.8           29   \n",
              "3             4.8                2.9           27   \n",
              "4             4.5                3.6           25   \n",
              "\n",
              "                                            Top Tags  \\\n",
              "0  [Amazing lectures, Inspirational, Hilarious, R...   \n",
              "1  [Amazing lectures, Inspirational, Caring, Resp...   \n",
              "2    [Amazing lectures, Would take again, Hilarious]   \n",
              "3  [Amazing lectures, Inspirational, Hilarious, R...   \n",
              "4  [Amazing lectures, Inspirational, Respected, H...   \n",
              "\n",
              "                                  Stanford Profile          Department  \\\n",
              "0      https://profiles.stanford.edu/mehran-sahami    Computer Science   \n",
              "1  https://profiles.stanford.edu/kurt-carrasquilla  Continuing Studies   \n",
              "2       https://profiles.stanford.edu/mark-tendall           Economics   \n",
              "3    https://profiles.stanford.edu/robert-sapolsky             Biology   \n",
              "4      https://profiles.stanford.edu/keith-schwarz    Computer Science   \n",
              "\n",
              "                Position  Num Publications  Published First Name Sex  \\\n",
              "0     Professor-Teaching                13       True     Mehran   M   \n",
              "1  Summer CSP Instructor                 0      False       Kurt   M   \n",
              "2      Advanced Lecturer                 0      False       Mark   M   \n",
              "3              Professor               268       True     Robert   M   \n",
              "4            Sr Lecturer                 0      False      Keith   M   \n",
              "\n",
              "   Department Size  \n",
              "0            828.0  \n",
              "1              NaN  \n",
              "2            156.0  \n",
              "3            120.0  \n",
              "4            828.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cbbe2b19-f5bc-4598-9b46-994c79d690c4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Professor</th>\n",
              "      <th>Student Reviews</th>\n",
              "      <th>Overall Rating</th>\n",
              "      <th>Difficulty Rating</th>\n",
              "      <th>Num Ratings</th>\n",
              "      <th>Top Tags</th>\n",
              "      <th>Stanford Profile</th>\n",
              "      <th>Department</th>\n",
              "      <th>Position</th>\n",
              "      <th>Num Publications</th>\n",
              "      <th>Published</th>\n",
              "      <th>First Name</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Department Size</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Mehran Sahami</td>\n",
              "      <td>[I took cs106a with Mehran Sahami. His lecture...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.1</td>\n",
              "      <td>94</td>\n",
              "      <td>[Amazing lectures, Inspirational, Hilarious, R...</td>\n",
              "      <td>https://profiles.stanford.edu/mehran-sahami</td>\n",
              "      <td>Computer Science</td>\n",
              "      <td>Professor-Teaching</td>\n",
              "      <td>13</td>\n",
              "      <td>True</td>\n",
              "      <td>Mehran</td>\n",
              "      <td>M</td>\n",
              "      <td>828.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Kurt Carrasquilla</td>\n",
              "      <td>[Kurt is an amazing teacher! His explanations ...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.6</td>\n",
              "      <td>84</td>\n",
              "      <td>[Amazing lectures, Inspirational, Caring, Resp...</td>\n",
              "      <td>https://profiles.stanford.edu/kurt-carrasquilla</td>\n",
              "      <td>Continuing Studies</td>\n",
              "      <td>Summer CSP Instructor</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>Kurt</td>\n",
              "      <td>M</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Mark Tendall</td>\n",
              "      <td>[\\, ok lecturer., Prof. Tendall teaches you th...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>2.8</td>\n",
              "      <td>29</td>\n",
              "      <td>[Amazing lectures, Would take again, Hilarious]</td>\n",
              "      <td>https://profiles.stanford.edu/mark-tendall</td>\n",
              "      <td>Economics</td>\n",
              "      <td>Advanced Lecturer</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>Mark</td>\n",
              "      <td>M</td>\n",
              "      <td>156.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Robert Sapolsky</td>\n",
              "      <td>[His class is difficult because his field is d...</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.9</td>\n",
              "      <td>27</td>\n",
              "      <td>[Amazing lectures, Inspirational, Hilarious, R...</td>\n",
              "      <td>https://profiles.stanford.edu/robert-sapolsky</td>\n",
              "      <td>Biology</td>\n",
              "      <td>Professor</td>\n",
              "      <td>268</td>\n",
              "      <td>True</td>\n",
              "      <td>Robert</td>\n",
              "      <td>M</td>\n",
              "      <td>120.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Keith Schwarz</td>\n",
              "      <td>[so much energy, he really teaches you the mat...</td>\n",
              "      <td>4.5</td>\n",
              "      <td>3.6</td>\n",
              "      <td>25</td>\n",
              "      <td>[Amazing lectures, Inspirational, Respected, H...</td>\n",
              "      <td>https://profiles.stanford.edu/keith-schwarz</td>\n",
              "      <td>Computer Science</td>\n",
              "      <td>Sr Lecturer</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>Keith</td>\n",
              "      <td>M</td>\n",
              "      <td>828.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cbbe2b19-f5bc-4598-9b46-994c79d690c4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-cbbe2b19-f5bc-4598-9b46-994c79d690c4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-cbbe2b19-f5bc-4598-9b46-994c79d690c4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-64db7d37-9d62-4075-9d3b-2dd6e253421e\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-64db7d37-9d62-4075-9d3b-2dd6e253421e')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-64db7d37-9d62-4075-9d3b-2dd6e253421e button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "dep_size_df",
              "summary": "{\n  \"name\": \"dep_size_df\",\n  \"rows\": 194,\n  \"fields\": [\n    {\n      \"column\": \"Professor\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 194,\n        \"samples\": [\n          \"Justin Grimmer\",\n          \"Hong Zeng\",\n          \"Mark Jacobson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Student Reviews\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Overall Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.305073040174442,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          3.3,\n          1.3,\n          4.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Difficulty Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9577947937532704,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          5.0,\n          3.4,\n          4.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Num Ratings\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 0,\n        \"max\": 94,\n        \"num_unique_values\": 25,\n        \"samples\": [\n          20,\n          8,\n          94\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Top Tags\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stanford Profile\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 194,\n        \"samples\": [\n          \"https://profiles.stanford.edu/justin-grimmer\",\n          \"https://profiles.stanford.edu/hong-zeng\",\n          \"https://profiles.stanford.edu/mark-jacobson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Department\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 63,\n        \"samples\": [\n          \"Oceans\",\n          \"SLAC National Accelerator Laboratory\",\n          \"Computer Science\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Position\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 41,\n        \"samples\": [\n          \"Assoc. Professor\",\n          \"Professor Emeritus\",\n          \"Adjunct Lecturer\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Num Publications\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 99,\n        \"min\": 0,\n        \"max\": 593,\n        \"num_unique_values\": 92,\n        \"samples\": [\n          255,\n          65,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Published\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"First Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 150,\n        \"samples\": [\n          \"Sheri\",\n          \"Giovanni\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Department Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 249.13028994204467,\n        \"min\": 0.0,\n        \"max\": 828.0,\n        \"num_unique_values\": 37,\n        \"samples\": [\n          31.0,\n          6.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Drop the first name\n",
        "dep_size_df = dep_size_df.drop(columns = 'First Name')"
      ],
      "metadata": {
        "id": "QCcBPKIRnasi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = dep_size_df"
      ],
      "metadata": {
        "collapsed": true,
        "id": "gpvlXp15nS0Y"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Adding Variable for Department/Major Type**"
      ],
      "metadata": {
        "id": "yJDgs-_tCyXZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np"
      ],
      "metadata": {
        "id": "MmUaPUPdn3sj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Map majors to department types\n",
        "major_type_map = {\n",
        "    'Computer Science': 'STEM',\n",
        "    'Economics': 'Social Sciences',\n",
        "    'Philosophy': 'Humanities',\n",
        "    'Biology': 'STEM',\n",
        "    'Mechanical Engineering - Flow Physics and Computation': 'STEM',\n",
        "    'Graduate School of Education': 'Social Sciences',\n",
        "    'Physics': 'STEM',\n",
        "    'Psychology': 'Social Sciences',\n",
        "    'French and Italian': 'Humanities',\n",
        "    'History Department': 'Humanities',\n",
        "    'SCI Transgenic Service Center': np.nan,\n",
        "    'Electrical Engineering': 'STEM',\n",
        "    'Language Ctr': np.nan,\n",
        "    'Bioengineering': 'STEM',\n",
        "    'Music': 'Humanities',\n",
        "    'Pathology Stem Cell Institute (XSCI)': 'STEM',\n",
        "    'Iranian Studies': 'Humanities',\n",
        "    'Religious Studies': 'Humanities',\n",
        "    'German': 'Humanities',\n",
        "    'Civil and Environmental Engineering': 'STEM',\n",
        "    'Art & Art History': 'Humanities',\n",
        "    'Classics': 'Humanities',\n",
        "    'Electrical Engineering - Information Systems Laboratory': 'STEM',\n",
        "    'Chemistry': 'STEM',\n",
        "    'Psych/General Psychiatry and Psychology (Adult)': np.nan,\n",
        "    'Not found': np.nan,\n",
        "    'Law School': 'Social Sciences',\n",
        "    'Political Science': 'Social Sciences',\n",
        "    'Chemical Engineering': 'STEM',\n",
        "    'Mathematics': 'STEM',\n",
        "    'English': 'Humanities',\n",
        "    'Materials Science and Engineering': 'STEM',\n",
        "    'Humanities Resource Group': 'Humanities',\n",
        "    'Linguistics': 'Humanities',\n",
        "    'Sustainable Architecture & Engineering': 'STEM',\n",
        "    'Department of Geophysics - Geophysics': 'STEM',\n",
        "    'Program in Writing and Rhetoric': 'Humanities',\n",
        "    'Radiation Oncology - Radiation Physics': 'STEM',\n",
        "    'HOOVER RESEARCH': np.nan,\n",
        "    'Theater and Performance Studies': 'Humanities',\n",
        "    'Mechanical Engineering': 'STEM',\n",
        "    'Statistics': 'STEM',\n",
        "    'Visiting Fellowship': np.nan,\n",
        "    'Iberian and Latin American Cultures': 'Humanities',\n",
        "    'FSI': np.nan,\n",
        "    'Medicine - Med/Oncology': 'STEM',\n",
        "    'Emergency Medicine - Adult Clinical/Academic': 'STEM',\n",
        "    'Earth Systems Program': 'STEM',\n",
        "    'Pediatrics - Infectious Diseases': 'STEM',\n",
        "    'East Asian Languages and Cultures': 'Humanities',\n",
        "    'Center for Race & Ethnicity': 'Social Sciences',\n",
        "    'Management Science and Engineering': 'Social Sciences',\n",
        "    'Graduate School of Business - Faculty': 'Social Sciences',\n",
        "    'Energy Science & Engineering': 'STEM',\n",
        "    'Department of Developmental Biology': 'STEM',\n",
        "    'Oceans': 'STEM',\n",
        "    'SLAC National Accelerator Laboratory': 'STEM',\n",
        "    'Frosh 101': np.nan,\n",
        "    'Anthropology': 'Social Sciences',\n",
        "    'Communication': 'Social Sciences',\n",
        "    'Psychiatry and Behavioral Sciences': 'Social Sciences',\n",
        "    'H & S Programs': np.nan\n",
        "}\n",
        "\n",
        "# Add column for department type ot DataFrame\n",
        "df['Department Type'] = df['Department'].map(major_type_map)\n",
        "df"
      ],
      "metadata": {
        "id": "YdNiK148C5Od",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 581
        },
        "outputId": "3f2c7752-e9ce-4dba-c936-7be79101b887"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           Professor                                    Student Reviews  \\\n",
              "0      Mehran Sahami  [I took cs106a with Mehran Sahami. His lecture...   \n",
              "1  Kurt Carrasquilla  [Kurt is an amazing teacher! His explanations ...   \n",
              "2       Mark Tendall  [\\, ok lecturer., Prof. Tendall teaches you th...   \n",
              "3    Robert Sapolsky  [His class is difficult because his field is d...   \n",
              "4      Keith Schwarz  [so much energy, he really teaches you the mat...   \n",
              "\n",
              "   Overall Rating  Difficulty Rating  Num Ratings  \\\n",
              "0             4.9                2.1           94   \n",
              "1             4.9                2.6           84   \n",
              "2             3.7                2.8           29   \n",
              "3             4.8                2.9           27   \n",
              "4             4.5                3.6           25   \n",
              "\n",
              "                                            Top Tags  \\\n",
              "0  [Amazing lectures, Inspirational, Hilarious, R...   \n",
              "1  [Amazing lectures, Inspirational, Caring, Resp...   \n",
              "2    [Amazing lectures, Would take again, Hilarious]   \n",
              "3  [Amazing lectures, Inspirational, Hilarious, R...   \n",
              "4  [Amazing lectures, Inspirational, Respected, H...   \n",
              "\n",
              "                                  Stanford Profile          Department  \\\n",
              "0      https://profiles.stanford.edu/mehran-sahami    Computer Science   \n",
              "1  https://profiles.stanford.edu/kurt-carrasquilla  Continuing Studies   \n",
              "2       https://profiles.stanford.edu/mark-tendall           Economics   \n",
              "3    https://profiles.stanford.edu/robert-sapolsky             Biology   \n",
              "4      https://profiles.stanford.edu/keith-schwarz    Computer Science   \n",
              "\n",
              "                Position  Num Publications  Published Sex  Department Size  \\\n",
              "0     Professor-Teaching                13       True   M            828.0   \n",
              "1  Summer CSP Instructor                 0      False   M              NaN   \n",
              "2      Advanced Lecturer                 0      False   M            156.0   \n",
              "3              Professor               268       True   M            120.0   \n",
              "4            Sr Lecturer                 0      False   M            828.0   \n",
              "\n",
              "   Department Type  \n",
              "0             STEM  \n",
              "1              NaN  \n",
              "2  Social Sciences  \n",
              "3             STEM  \n",
              "4             STEM  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8c67834f-9246-4a44-bac1-8f181892d458\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Professor</th>\n",
              "      <th>Student Reviews</th>\n",
              "      <th>Overall Rating</th>\n",
              "      <th>Difficulty Rating</th>\n",
              "      <th>Num Ratings</th>\n",
              "      <th>Top Tags</th>\n",
              "      <th>Stanford Profile</th>\n",
              "      <th>Department</th>\n",
              "      <th>Position</th>\n",
              "      <th>Num Publications</th>\n",
              "      <th>Published</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Department Size</th>\n",
              "      <th>Department Type</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Mehran Sahami</td>\n",
              "      <td>[I took cs106a with Mehran Sahami. His lecture...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.1</td>\n",
              "      <td>94</td>\n",
              "      <td>[Amazing lectures, Inspirational, Hilarious, R...</td>\n",
              "      <td>https://profiles.stanford.edu/mehran-sahami</td>\n",
              "      <td>Computer Science</td>\n",
              "      <td>Professor-Teaching</td>\n",
              "      <td>13</td>\n",
              "      <td>True</td>\n",
              "      <td>M</td>\n",
              "      <td>828.0</td>\n",
              "      <td>STEM</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Kurt Carrasquilla</td>\n",
              "      <td>[Kurt is an amazing teacher! His explanations ...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.6</td>\n",
              "      <td>84</td>\n",
              "      <td>[Amazing lectures, Inspirational, Caring, Resp...</td>\n",
              "      <td>https://profiles.stanford.edu/kurt-carrasquilla</td>\n",
              "      <td>Continuing Studies</td>\n",
              "      <td>Summer CSP Instructor</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>M</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Mark Tendall</td>\n",
              "      <td>[\\, ok lecturer., Prof. Tendall teaches you th...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>2.8</td>\n",
              "      <td>29</td>\n",
              "      <td>[Amazing lectures, Would take again, Hilarious]</td>\n",
              "      <td>https://profiles.stanford.edu/mark-tendall</td>\n",
              "      <td>Economics</td>\n",
              "      <td>Advanced Lecturer</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>M</td>\n",
              "      <td>156.0</td>\n",
              "      <td>Social Sciences</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Robert Sapolsky</td>\n",
              "      <td>[His class is difficult because his field is d...</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.9</td>\n",
              "      <td>27</td>\n",
              "      <td>[Amazing lectures, Inspirational, Hilarious, R...</td>\n",
              "      <td>https://profiles.stanford.edu/robert-sapolsky</td>\n",
              "      <td>Biology</td>\n",
              "      <td>Professor</td>\n",
              "      <td>268</td>\n",
              "      <td>True</td>\n",
              "      <td>M</td>\n",
              "      <td>120.0</td>\n",
              "      <td>STEM</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Keith Schwarz</td>\n",
              "      <td>[so much energy, he really teaches you the mat...</td>\n",
              "      <td>4.5</td>\n",
              "      <td>3.6</td>\n",
              "      <td>25</td>\n",
              "      <td>[Amazing lectures, Inspirational, Respected, H...</td>\n",
              "      <td>https://profiles.stanford.edu/keith-schwarz</td>\n",
              "      <td>Computer Science</td>\n",
              "      <td>Sr Lecturer</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>M</td>\n",
              "      <td>828.0</td>\n",
              "      <td>STEM</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8c67834f-9246-4a44-bac1-8f181892d458')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8c67834f-9246-4a44-bac1-8f181892d458 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8c67834f-9246-4a44-bac1-8f181892d458');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-a89cd5c1-b101-428b-a0e5-d74dc8bdcad2\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a89cd5c1-b101-428b-a0e5-d74dc8bdcad2')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-a89cd5c1-b101-428b-a0e5-d74dc8bdcad2 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 194,\n  \"fields\": [\n    {\n      \"column\": \"Professor\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 194,\n        \"samples\": [\n          \"Justin Grimmer\",\n          \"Hong Zeng\",\n          \"Mark Jacobson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Student Reviews\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Overall Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.305073040174442,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          3.3,\n          1.3,\n          4.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Difficulty Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9577947937532704,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          5.0,\n          3.4,\n          4.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Num Ratings\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 0,\n        \"max\": 94,\n        \"num_unique_values\": 25,\n        \"samples\": [\n          20,\n          8,\n          94\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Top Tags\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stanford Profile\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 194,\n        \"samples\": [\n          \"https://profiles.stanford.edu/justin-grimmer\",\n          \"https://profiles.stanford.edu/hong-zeng\",\n          \"https://profiles.stanford.edu/mark-jacobson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Department\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 63,\n        \"samples\": [\n          \"Oceans\",\n          \"SLAC National Accelerator Laboratory\",\n          \"Computer Science\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Position\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 41,\n        \"samples\": [\n          \"Assoc. Professor\",\n          \"Professor Emeritus\",\n          \"Adjunct Lecturer\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Num Publications\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 99,\n        \"min\": 0,\n        \"max\": 593,\n        \"num_unique_values\": 92,\n        \"samples\": [\n          255,\n          65,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Published\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Department Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 249.13028994204467,\n        \"min\": 0.0,\n        \"max\": 828.0,\n        \"num_unique_values\": 37,\n        \"samples\": [\n          31.0,\n          6.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Department Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"STEM\",\n          \"Social Sciences\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **Analyzing Student Review Sentiment**"
      ],
      "metadata": {
        "id": "rAnJbRsM6lR9"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "iAEAclkjbDz4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d9b74d77-df2c-485a-f8fa-f234c76f149e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[nltk_data] Downloading package vader_lexicon to /root/nltk_data...\n",
            "[nltk_data]   Package vader_lexicon is already up-to-date!\n"
          ]
        }
      ],
      "source": [
        "from nltk.sentiment import SentimentIntensityAnalyzer\n",
        "import nltk\n",
        "\n",
        "nltk.download('vader_lexicon')\n",
        "sia = SentimentIntensityAnalyzer()\n",
        "\n",
        "sentiments = []\n",
        "\n",
        "for i in range(len(df)):\n",
        "  text = df.loc[i, 'Student Reviews']\n",
        "  score = sia.polarity_scores(str(text))\n",
        "  sentiments.append(score['compound'])\n",
        "\n",
        "'''\n",
        "compound score is a normalized, weighted sum that you can use to classify sentiment:\n",
        "\n",
        "  compound >= 0.05 → Positive; +1.0 = most positive\n",
        "  compound <= -0.05 → Negative; –1.0 = most negative\n",
        "  Otherwise → Neutral; 0.0 = neutral\n",
        "\n",
        "'''\n",
        "df['Rating Sentiment'] = sentiments\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Exporting DataFrame CSV**"
      ],
      "metadata": {
        "id": "UU6kpPhK6vFh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import files\n",
        "\n",
        "# Download CSV as final DataFrame\n",
        "final_df = df\n",
        "final_df.to_csv(\"final_df.csv\", index=False)\n",
        "files.download(\"final_df.csv\")"
      ],
      "metadata": {
        "id": "ZLW9tDb9dbUU",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 17
        },
        "outputId": "1167ef2e-56a8-47a5-ccae-2ceb59fdd5a5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "download(\"download_e0693700-5571-4f72-8607-a3f07713ee2c\", \"final_df.csv\", 180709)"
            ]
          },
          "metadata": {}
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}

{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [
        "eY1WpGCU_SFz",
        "vmyDFXZTFguB",
        "ciVAJ8VF_3tV",
        "QxjKn0m-BE6b",
        "PZp7xMAsBffd",
        "c7e8dq_5DDv1",
        "CtM3staIv9Op",
        "1Lcw3_iFzT18",
        "EJrjVuxW1qzK"
      ],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/evyshen/DATASCI_112/blob/main/DATASCI_112_Final_Project_Data_Exploration.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Read in DataFrame**"
      ],
      "metadata": {
        "id": "eY1WpGCU_SFz"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "QabsZgi83Uy7",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c9405a34-739b-41c9-f17f-d43d4cf971e3"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "\n",
        "drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# Alexa's file path\n",
        "file_path = '/content/drive/My Drive/Jr/DATASCI 112/DATASCI 112 Final Project/final_df-2.csv'\n",
        "df = pd.read_csv(file_path)\n",
        "df.head()\n",
        "\n",
        "# Evy's file path\n",
        "# df = pd.read_csv(\"/content/drive/MyDrive/DATASCI112/Copy of final_df-2.csv\")\n",
        "# df"
      ],
      "metadata": {
        "id": "jHn9YZK6Xo_T",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 464
        },
        "outputId": "222c6943-0e36-4057-f10a-abde95ec6e27"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           Professor                                    Student Reviews  \\\n",
              "0      Mehran Sahami  ['I took cs106a with Mehran Sahami. His lectur...   \n",
              "1  Kurt Carrasquilla  [\"Kurt is an amazing teacher! His explanations...   \n",
              "2       Mark Tendall  ['\\\\', 'ok lecturer.', 'Prof. Tendall teaches ...   \n",
              "3    Robert Sapolsky  [\"His class is difficult because his field is ...   \n",
              "4      Keith Schwarz  ['so much energy, he really teaches you the ma...   \n",
              "\n",
              "   Overall Rating  Difficulty Rating  Num Ratings  \\\n",
              "0             4.9                2.1           94   \n",
              "1             4.9                2.6           84   \n",
              "2             3.7                2.8           29   \n",
              "3             4.8                2.9           27   \n",
              "4             4.5                3.6           25   \n",
              "\n",
              "                                            Top Tags  \\\n",
              "0  ['Amazing lectures', 'Inspirational', 'Hilario...   \n",
              "1  ['Amazing lectures', 'Inspirational', 'Caring'...   \n",
              "2  ['Amazing lectures', 'Would take again', 'Hila...   \n",
              "3  ['Amazing lectures', 'Inspirational', 'Hilario...   \n",
              "4  ['Amazing lectures', 'Inspirational', 'Respect...   \n",
              "\n",
              "                                  Stanford Profile          Department  \\\n",
              "0      https://profiles.stanford.edu/mehran-sahami    Computer Science   \n",
              "1  https://profiles.stanford.edu/kurt-carrasquilla  Continuing Studies   \n",
              "2       https://profiles.stanford.edu/mark-tendall           Economics   \n",
              "3    https://profiles.stanford.edu/robert-sapolsky             Biology   \n",
              "4      https://profiles.stanford.edu/keith-schwarz    Computer Science   \n",
              "\n",
              "                Position  Num Publications  Published Sex  Department Size  \\\n",
              "0     Professor-Teaching                13       True   M            828.0   \n",
              "1  Summer CSP Instructor                 0      False   M              NaN   \n",
              "2      Advanced Lecturer                 0      False   M            156.0   \n",
              "3              Professor               268       True   M            120.0   \n",
              "4            Sr Lecturer                 0      False   M            828.0   \n",
              "\n",
              "   Department Type  Rating Sentiment  \n",
              "0             STEM            0.9996  \n",
              "1              NaN            0.9998  \n",
              "2  Social Sciences            0.9993  \n",
              "3             STEM            0.9989  \n",
              "4             STEM            0.9996  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7f05d9f6-4cf8-49ea-8cb3-19512f17f5e7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Professor</th>\n",
              "      <th>Student Reviews</th>\n",
              "      <th>Overall Rating</th>\n",
              "      <th>Difficulty Rating</th>\n",
              "      <th>Num Ratings</th>\n",
              "      <th>Top Tags</th>\n",
              "      <th>Stanford Profile</th>\n",
              "      <th>Department</th>\n",
              "      <th>Position</th>\n",
              "      <th>Num Publications</th>\n",
              "      <th>Published</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Department Size</th>\n",
              "      <th>Department Type</th>\n",
              "      <th>Rating Sentiment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Mehran Sahami</td>\n",
              "      <td>['I took cs106a with Mehran Sahami. His lectur...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.1</td>\n",
              "      <td>94</td>\n",
              "      <td>['Amazing lectures', 'Inspirational', 'Hilario...</td>\n",
              "      <td>https://profiles.stanford.edu/mehran-sahami</td>\n",
              "      <td>Computer Science</td>\n",
              "      <td>Professor-Teaching</td>\n",
              "      <td>13</td>\n",
              "      <td>True</td>\n",
              "      <td>M</td>\n",
              "      <td>828.0</td>\n",
              "      <td>STEM</td>\n",
              "      <td>0.9996</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Kurt Carrasquilla</td>\n",
              "      <td>[\"Kurt is an amazing teacher! His explanations...</td>\n",
              "      <td>4.9</td>\n",
              "      <td>2.6</td>\n",
              "      <td>84</td>\n",
              "      <td>['Amazing lectures', 'Inspirational', 'Caring'...</td>\n",
              "      <td>https://profiles.stanford.edu/kurt-carrasquilla</td>\n",
              "      <td>Continuing Studies</td>\n",
              "      <td>Summer CSP Instructor</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>M</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.9998</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Mark Tendall</td>\n",
              "      <td>['\\\\', 'ok lecturer.', 'Prof. Tendall teaches ...</td>\n",
              "      <td>3.7</td>\n",
              "      <td>2.8</td>\n",
              "      <td>29</td>\n",
              "      <td>['Amazing lectures', 'Would take again', 'Hila...</td>\n",
              "      <td>https://profiles.stanford.edu/mark-tendall</td>\n",
              "      <td>Economics</td>\n",
              "      <td>Advanced Lecturer</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>M</td>\n",
              "      <td>156.0</td>\n",
              "      <td>Social Sciences</td>\n",
              "      <td>0.9993</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Robert Sapolsky</td>\n",
              "      <td>[\"His class is difficult because his field is ...</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.9</td>\n",
              "      <td>27</td>\n",
              "      <td>['Amazing lectures', 'Inspirational', 'Hilario...</td>\n",
              "      <td>https://profiles.stanford.edu/robert-sapolsky</td>\n",
              "      <td>Biology</td>\n",
              "      <td>Professor</td>\n",
              "      <td>268</td>\n",
              "      <td>True</td>\n",
              "      <td>M</td>\n",
              "      <td>120.0</td>\n",
              "      <td>STEM</td>\n",
              "      <td>0.9989</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Keith Schwarz</td>\n",
              "      <td>['so much energy, he really teaches you the ma...</td>\n",
              "      <td>4.5</td>\n",
              "      <td>3.6</td>\n",
              "      <td>25</td>\n",
              "      <td>['Amazing lectures', 'Inspirational', 'Respect...</td>\n",
              "      <td>https://profiles.stanford.edu/keith-schwarz</td>\n",
              "      <td>Computer Science</td>\n",
              "      <td>Sr Lecturer</td>\n",
              "      <td>0</td>\n",
              "      <td>False</td>\n",
              "      <td>M</td>\n",
              "      <td>828.0</td>\n",
              "      <td>STEM</td>\n",
              "      <td>0.9996</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7f05d9f6-4cf8-49ea-8cb3-19512f17f5e7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7f05d9f6-4cf8-49ea-8cb3-19512f17f5e7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7f05d9f6-4cf8-49ea-8cb3-19512f17f5e7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-5b3b9df6-dc8f-4a7d-aedf-c18cbe7829a5\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5b3b9df6-dc8f-4a7d-aedf-c18cbe7829a5')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-5b3b9df6-dc8f-4a7d-aedf-c18cbe7829a5 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"# df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Professor\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Kurt Carrasquilla\",\n          \"Keith Schwarz\",\n          \"Mark Tendall\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Student Reviews\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"[\\\"Kurt is an amazing teacher! His explanations are very clear and he's always open to outside-of-class discussion and support. He catered the topics so no matter what your level of familiarity with the contents is, there will be something interesting and new to learn. Would definitely take a class with him again!\\\", 'Very clear and precise throughout his lectures', 'The profressa manages the class very well. Takes all questions and does not allow the class to run over. Very respectful to all students and uses great examples to relate to the students.', 'Class \\\\\\\\', 'Professor Kurt was well organized professor he always prepared enough and good lecture resources for his student. He always gave good and insightful answers and guideline when students (including me) asked questions during the class. ', 'The professor is well-versed in his field, with thirty years of industry experience, which is highly valuable', 'Taking it because i aspire to a career in wealth management. Kurt provided timely feedback on everything career related. The content itself could be a bit dry, but if you are invested in the topic you will pull through. ', 'Mr Carrasquilla is a patient instructor that cares about his students. BUS 195 content will be greatly helpful to most families and individuals as well so highly recommend everyone to take this course.', 'Professor Carrasquilla is highly informative and very motivating.  He makes otherwise complex topics very easy to understand and is creates a very inspired environment.  I highly recommend this class and this one of a kind professor!', \\\"Prof. Carrasquilla's Wealth Management course is very organized and informational. He covered a lot of ground in just a few weeks, but his lecture is very easy to follow and the suggestions he gave are practical and actionable. I I will definitely take more classes with Prof. Carrasquilla again in the future. \\\", 'Kurt does an amazing job of breaking down various financial concepts and making them relatable through anecdotes and through his extensive industry experience. His ability to answer questions on-demand and tie them back to the flow of the lecture helps cement the understanding of nuanced concepts.', \\\"Kurt is great and I would hands-down take another class with him: (a) He is an expert + explains things easily (b) The course is well designed, material is easy to cover (c) He is patient with students' questions.\\\\\\\\n\\\\\\\\nSuggestions:\\\\\\\\n- Share students' LinkedIns and emails. Allow opt-out.\\\\\\\\n- In-class practical training e.g. build portfolio on Vanguard\\\", 'Highly recommend taking any course with Kurt. Kurt is really knowledgeable in the FA/CFP space and has a deep background in financial advising. His lectures are also extremely interesting and thought provoking, he does a great job answering questions your questions live or over email, and really gets you to engage throughout the class. ', 'What I appreciated most about Kurt is that he was always ready to answer questions, and he never got frustrated by the questions asked.  Online classes can sometimes feel impersonal, but Kurt was available during class as well as after hours for additional questions or clarifications. I would happily take another class taught by Kurt.', 'I enjoyed my class and found the information to be very helpful. Kurt took to the time to explain concepts and answer any questions. He was also available after hours for additional questions or clarifications. I would happily take another class if taught by Kurt. \\\\\\\\n ', 'Great material and informative lectures.  Caring with ensuring questions were answered. Patient with students.', 'Kurt was a great professor, and covered so many timely topics.  I thought the pace was excellent, and enjoyed getting a better understanding of what I need to be focusing on for my finances.  Wish he was teaching more courses!', 'Professor Carrasquilla did an excellent job conveying the components of Wealth Management in an easy to follow format.  I appreciated hearing examples from his decades of experience in the field.  Very engaging, and I would strongly recommend his course.', 'Great teacher and amazing course!', 'Kurt is extremely knowledgable about investment, wealth management, and provided a very origranized approach, and platform, for developing effective wealth management strategies. He clearly enjoys teaching, and wants his students to do well. Hioghly recommend this short session summer class (SCS BUS 195)']\",\n          \"['so much energy, he really teaches you the material', 'avoid.', 'Favorite professor', 'a well meaning teacher, totally unfair class. proofs graded subjectively. TAs and teacher contradict each other and get salty when you ask questions.', \\\"Keith's great and this material is super cool! Just too much of it to learn all at once.\\\", 'Love him!!! 103 has been such an interesting class! Wish I could take a seminar with him and learn more!', 'Keith Schwarz is an extremely talented CS teacher. He is organized, clear, and loves his material.  His lectures inspire you to love computer theory too.  But he and his TAs have an extremely punitive grading  style that makes one dread this course. Learning should not be punishment. Computer Science should not be about gatekeeping.', 'Good professor, but makes nearly any class ultra hard', \\\"Simply one of the best teachers I've ever had! He never gives up trying to help you understand.\\\", 'So great, wonderful lectures, totally caring and helpful. he really helps you understand computer science', \\\"Hands down one of the best professors at Stanford. He's totally organized, clear, and super interesting to listen to.  Keith really inspires you to be great and helps so many people make sense of computer science.\\\", \\\"Caring, clear, and really passionate - I can't recommend Keith more highly. He is extremely available in office hours and takes time out of lectures to answer student questions. He's really adamant about taking questions, and that's part of why he's such a good teacher.\\\", 'Easily the best instructor I have ever had in my 8 years of college and graduate studies. Difficult class but there is no better place to take it or instructor to take it from. Course taken through SCPD.', 'CS 103: Keith is a great speaker/motivator. Class started off with wonderful lectures; very clear theorems, proofs, and explanations. Near the end of the course, some important concepts (PNP, R, RE, etc.) may not have been explained clearly enough, as many of my peers were lost. Midterms/final not graded leniently so be very, very specific.', 'Really well prepared. Does everything he could to make you succeed.', 'Inspirational. Well prepared. To the point.', \\\"I never review any professor. Keith, however, is the best professor I've ever had. I'm short on ways by which I can give him the recognition he deserves.\\\", \\\"Best professor I've ever had!\\\", 'Extremely engaging lecturer. Keith might actually be the best lecturer at Stanford. He moves at a lightning pace, yet somehow manages to be clear. Take his classes.', \\\"Keith is the greatest! He explains everything really clearly, is incredibly helpful, and clearly loves what he's teaching. Definitely take a class with him!\\\"]\",\n          \"['\\\\\\\\', 'ok lecturer.', 'Prof. Tendall teaches you the mathematical steps to solve very specific types of problems.  Of course, no one actually learns what anything means, but at least you can get a good grade without understanding &quot;hard&quot; concepts!', 'Great professor.', \\\"Mark is a nice guy and is clearer than many professors, but his teaching style is terrible.  Rather than helping students understand concepts, he focuses on simple computational rote learning.  If you want a very straightforward class where you *don't really learn anything*, you will like this class.\\\", 'good at explaining things and pretty funny', 'Wonderful Professor. A brilliant academic whose enthusiasm for economics is contagious. He is interesting, funny, and nice.  He genuinely cares about his students and their success.  I am happy to have taken a class from him.', 'Really clear and concise.  Great, funny guy.', 'Solid professor, and a good guy too', 'Really funny and likes teaching.  Exams and problem sets are straightforward.', \\\"very confusing. i understood this stats in 9th grade but can't remember any of it now.. his lectures are sleep-inducing and perplexing.\\\", 'Horrible teacher.', 'Such a nice professor. He really cares about his students and wants them to learn. Psets and exams are generally straightforward. No surprises there.', 'super clear, very easy to do well if you just pay attention.  no tricks on his tests.', 'very funny, lectures were good, exams fair, but problem sets were intense', 'Funny in lecture, very student-oriented.  Always available outside of class for help.  Fair exams.', \\\"Great professor. One of the best I've had so far.\\\", 'Absolutely amazing. Turns some people off because of delivery but has very clear and helpful lectures. Also the nicest guy in the department.', 'Has weird speech delivery.  Should be more direct.', 'No Comments']\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Overall Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5079370039680118,\n        \"min\": 3.7,\n        \"max\": 4.9,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3.7,\n          4.5,\n          4.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Difficulty Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5431390245600107,\n        \"min\": 2.1,\n        \"max\": 3.6,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2.6,\n          3.6,\n          2.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Num Ratings\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34,\n        \"min\": 25,\n        \"max\": 94,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          84,\n          25,\n          29\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Top Tags\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"['Amazing lectures', 'Inspirational', 'Caring', 'Respected', 'Gives good feedback']\",\n          \"['Amazing lectures', 'Inspirational', 'Respected', 'Hilarious', 'Test heavy']\",\n          \"['Amazing lectures', 'Would take again', 'Hilarious']\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stanford Profile\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"https://profiles.stanford.edu/kurt-carrasquilla\",\n          \"https://profiles.stanford.edu/keith-schwarz\",\n          \"https://profiles.stanford.edu/mark-tendall\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Department\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Continuing Studies\",\n          \"Biology\",\n          \"Computer Science\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Position\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Summer CSP Instructor\",\n          \"Sr Lecturer\",\n          \"Advanced Lecturer\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Num Publications\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 118,\n        \"min\": 0,\n        \"max\": 268,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          13,\n          0,\n          268\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Published\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Department Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 398.64269716125494,\n        \"min\": 120.0,\n        \"max\": 828.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          828.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Department Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Social Sciences\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating Sentiment\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0003507135583350188,\n        \"min\": 0.9989,\n        \"max\": 0.9998,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.9998\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Exploring Overall Ratings**"
      ],
      "metadata": {
        "id": "vmyDFXZTFguB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import plotly.express as px\n",
        "\n",
        "# Histogram for distribution of overall ratings\n",
        "fig = px.histogram(\n",
        "    df,\n",
        "    x='Overall Rating',\n",
        "    barmode='overlay',\n",
        "    opacity=0.6\n",
        "    )\n",
        "\n",
        "fig.update_layout(\n",
        "    yaxis_title='Numner of Observations'\n",
        ")\n",
        "\n",
        "fig.show()"
      ],
      "metadata": {
        "id": "cZp_qbLYFm2M",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 562
        },
        "outputId": "22d254ce-8b3e-4720-85f9-b4b1bc698dbe"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"5542a0b1-c111-4468-a048-6c3942ffcd9b\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"5542a0b1-c111-4468-a048-6c3942ffcd9b\")) {                    Plotly.newPlot(                        \"5542a0b1-c111-4468-a048-6c3942ffcd9b\",                        [{\"alignmentgroup\":\"True\",\"bingroup\":\"x\",\"hovertemplate\":\"Overall Rating=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\",\"opacity\":0.6,\"pattern\":{\"shape\":\"\"}},\"name\":\"\",\"offsetgroup\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"x\":[4.9,4.9,3.7,4.8,4.5,4.4,4.4,4.2,4.2,4.2,4.0,2.9,3.1,4.8,4.7,3.1,4.0,4.0,5.0,1.6,4.5,3.0,1.0,4.3,3.3,4.0,3.9,1.0,4.0,5.0,3.8,4.3,4.1,4.1,5.0,1.3,4.8,3.5,3.7,1.0,3.0,4.8,2.5,4.7,4.0,4.7,2.5,4.8,4.3,3.7,3.8,3.8,3.6,3.7,4.8,2.8,3.5,4.8,3.0,3.4,4.5,1.3,3.0,4.3,3.3,2.9,4.1,1.8,4.5,5.0,2.2,3.5,5.0,3.4,3.0,4.6,1.0,3.0,4.5,2.5,2.5,4.3,4.8,4.4,4.9,2.6,2.8,3.1,4.0,5.0,4.7,5.0,1.0,4.5,3.7,1.8,5.0,2.0,4.7,5.0,5.0,1.7,1.3,4.2,4.3,4.8,5.0,1.8,4.0,3.7,4.0,3.3,5.0,4.5,4.0,3.5,3.0,3.5,5.0,5.0,5.0,2.8,5.0,2.0,4.8,4.5,5.0,5.0,2.3,5.0,4.5,3.0,4.5,5.0,5.0,3.3,3.0,4.5,3.0,5.0,2.5,3.0,4.8,4.0,4.5,1.0,5.0,5.0,1.0,5.0,5.0,1.0,4.5,5.0,1.5,5.0,4.5,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,4.0,5.0,5.0,2.0,4.0,5.0,1.0,4.0,5.0,5.0,5.0,4.0,5.0,5.0,2.0,2.0,1.0,2.0,1.0,4.0,1.0,1.0,1.0,5.0,1.5,5.0,5.0,1.0,0.0],\"xaxis\":\"x\",\"yaxis\":\"y\",\"type\":\"histogram\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Overall Rating\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Numner of Observations\"}},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60},\"barmode\":\"overlay\"},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('5542a0b1-c111-4468-a048-6c3942ffcd9b');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Exploring Gender**"
      ],
      "metadata": {
        "id": "ciVAJ8VF_3tV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Histogram for distribution of rating by gender\n",
        "fig = px.histogram(\n",
        "    df,\n",
        "    x=\"Overall Rating\",\n",
        "    color=\"Sex\",\n",
        "    nbins=40,\n",
        "    title=\"Histogram of Overall Rating by Sex\",\n",
        "    barmode=\"overlay\",\n",
        "    histnorm='percent'\n",
        "    )\n",
        "\n",
        "fig.update_layout(\n",
        "    xaxis_title='Overall Rating',\n",
        "    yaxis_title='Number of Observations'\n",
        ")\n",
        "\n",
        "fig.show()"
      ],
      "metadata": {
        "id": "EG8DGoi8AdCo",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 562
        },
        "outputId": "40a3304c-64b4-476a-f3f0-297ae356decd"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"4f9f8825-4469-45c4-837b-1d01c2bcc317\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"4f9f8825-4469-45c4-837b-1d01c2bcc317\")) {                    Plotly.newPlot(                        \"4f9f8825-4469-45c4-837b-1d01c2bcc317\",                        [{\"alignmentgroup\":\"True\",\"bingroup\":\"x\",\"histnorm\":\"percent\",\"hovertemplate\":\"Sex=M\\u003cbr\\u003eOverall Rating=%{x}\\u003cbr\\u003epercent=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"M\",\"marker\":{\"color\":\"#636efa\",\"opacity\":0.5,\"pattern\":{\"shape\":\"\"}},\"name\":\"M\",\"nbinsx\":40,\"offsetgroup\":\"M\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[4.9,4.9,3.7,4.8,4.5,4.4,4.4,4.2,4.2,4.0,3.1,4.8,4.7,3.1,4.0,4.0,5.0,1.6,4.5,3.0,1.0,4.3,3.3,4.0,3.9,1.0,5.0,3.8,4.3,4.1,4.1,5.0,1.3,3.5,3.7,3.0,4.8,2.5,4.7,4.0,4.7,2.5,4.3,3.7,3.8,3.8,3.7,4.8,2.8,3.5,4.8,3.4,4.5,1.3,4.3,3.3,4.1,1.8,4.5,5.0,2.2,3.5,5.0,3.4,3.0,4.6,3.0,4.5,2.5,4.3,4.8,4.4,4.9,2.6,2.8,3.1,4.0,4.7,4.5,1.8,5.0,2.0,4.7,5.0,1.7,1.3,4.3,4.8,5.0,1.8,4.0,5.0,3.5,3.0,3.5,5.0,5.0,5.0,2.8,5.0,4.8,5.0,3.0,4.5,5.0,3.3,4.5,3.0,5.0,2.5,4.8,4.0,4.5,5.0,1.0,1.0,4.5,5.0,1.5,5.0,5.0,5.0,5.0,5.0,5.0,4.0,5.0,5.0,2.0,4.0,1.0,5.0,5.0,4.0,5.0,5.0,2.0,2.0,1.0,1.0,1.0,1.0,1.5,5.0,1.0],\"xaxis\":\"x\",\"yaxis\":\"y\",\"type\":\"histogram\"},{\"alignmentgroup\":\"True\",\"bingroup\":\"x\",\"histnorm\":\"percent\",\"hovertemplate\":\"Sex=F\\u003cbr\\u003eOverall Rating=%{x}\\u003cbr\\u003epercent=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"F\",\"marker\":{\"color\":\"#EF553B\",\"opacity\":0.5,\"pattern\":{\"shape\":\"\"}},\"name\":\"F\",\"nbinsx\":40,\"offsetgroup\":\"F\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[4.2,2.9,4.0,4.8,1.0,4.8,3.6,3.0,3.0,2.9,1.0,2.5,5.0,5.0,1.0,3.7,5.0,4.2,3.7,4.0,3.3,4.5,4.0,2.0,4.5,5.0,2.3,5.0,4.5,5.0,3.0,3.0,1.0,5.0,5.0,5.0,4.5,5.0,5.0,5.0,5.0,4.0,5.0,2.0,1.0,4.0,5.0,5.0,0.0],\"xaxis\":\"x\",\"yaxis\":\"y\",\"type\":\"histogram\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Overall Rating\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Number of Observations\"}},\"legend\":{\"title\":{\"text\":\"Sex\"},\"tracegroupgap\":0},\"title\":{\"text\":\"Histogram of Overall Rating by Sex\"},\"barmode\":\"overlay\"},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('4f9f8825-4469-45c4-837b-1d01c2bcc317');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Exploring Department Size**"
      ],
      "metadata": {
        "id": "QxjKn0m-BE6b"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Histogram for distribution of department size\n",
        "fig = px.histogram(\n",
        "    df,\n",
        "    x='Department Size',\n",
        "    barmode='overlay',\n",
        "    opacity=0.6, histnorm='percent'\n",
        "    )\n",
        "\n",
        "fig.update_layout(\n",
        "    xaxis_range=[0, 900],\n",
        "    yaxis_title='Percent of Observations'\n",
        ")\n",
        "\n",
        "fig.show()"
      ],
      "metadata": {
        "id": "agafVUQ3BIkB",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "outputId": "0ce55167-0056-401a-ca11-83c54f8297e4"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"64504e10-757d-4bf0-ab5a-ca0ba073f994\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"64504e10-757d-4bf0-ab5a-ca0ba073f994\")) {                    Plotly.newPlot(                        \"64504e10-757d-4bf0-ab5a-ca0ba073f994\",                        [{\"alignmentgroup\":\"True\",\"bingroup\":\"x\",\"histnorm\":\"percent\",\"hovertemplate\":\"Department Size=%{x}\\u003cbr\\u003epercent=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\",\"opacity\":0.6,\"pattern\":{\"shape\":\"\"}},\"name\":\"\",\"offsetgroup\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"x\":[828.0,null,156.0,120.0,828.0,261.0,828.0,37.0,828.0,156.0,828.0,171.0,64.0,0.0,100.0,38.0,null,230.0,null,64.0,100.0,34.0,86.0,6.0,null,3.0,230.0,79.0,828.0,206.0,31.0,230.0,15.0,3.0,31.0,230.0,54.0,230.0,156.0,null,828.0,34.0,828.0,null,null,null,156.0,null,108.0,828.0,287.0,38.0,287.0,38.0,73.0,108.0,828.0,47.0,null,62.0,74.0,64.0,171.0,31.0,16.0,null,54.0,171.0,206.0,156.0,54.0,null,null,828.0,22.0,287.0,79.0,230.0,13.0,null,73.0,261.0,73.0,230.0,null,null,73.0,68.0,null,261.0,null,171.0,null,108.0,47.0,34.0,79.0,0.0,828.0,null,47.0,156.0,73.0,13.0,54.0,38.0,16.0,828.0,47.0,38.0,null,2.0,79.0,null,null,156.0,3.0,38.0,37.0,828.0,54.0,120.0,206.0,74.0,34.0,null,null,null,100.0,16.0,64.0,455.0,108.0,18.0,0.0,54.0,33.0,73.0,108.0,828.0,68.0,156.0,38.0,47.0,828.0,null,47.0,79.0,7.0,null,31.0,287.0,100.0,68.0,64.0,206.0,120.0,455.0,null,171.0,37.0,null,13.0,261.0,13.0,73.0,null,828.0,68.0,null,null,206.0,828.0,19.0,3.0,73.0,156.0,null,null,230.0,230.0,206.0,null,null,64.0,74.0,261.0,46.0,null,null,22.0,null,54.0,34.0],\"xaxis\":\"x\",\"yaxis\":\"y\",\"type\":\"histogram\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Department Size\"},\"range\":[0,900]},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Percent of Observations\"}},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60},\"barmode\":\"overlay\"},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('64504e10-757d-4bf0-ab5a-ca0ba073f994');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Exploring Major (\"Department\")**"
      ],
      "metadata": {
        "id": "PZp7xMAsBffd"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Drop departments with missing data\n",
        "clean_df = df[['Department', 'Overall Rating']].dropna()\n",
        "df_with_departments = clean_df[clean_df['Department'] != 'Not found']\n",
        "\n",
        "# Get twenty departments most common in the dataset\n",
        "top_departments = (\n",
        "    df_with_departments['Department']\n",
        "    .value_counts()\n",
        "    .nlargest(20)\n",
        "    .index\n",
        "    )\n",
        "\n",
        "# Filter to create DataFrame with no missing department information\n",
        "filtered_df = df_with_departments[df_with_departments['Department'].isin(top_departments)]\n",
        "\n",
        "# Calculate median sentiment and sort departments by median\n",
        "department_medians = (\n",
        "    filtered_df.groupby('Department')['Overall Rating']\n",
        "    .median()\n",
        "    .sort_values(ascending=False)\n",
        "    )\n",
        "\n",
        "# Set categorical ordering based on median sentiment\n",
        "ordered_departments = department_medians.index.tolist()\n",
        "filtered_df['Department'] = pd.Categorical(\n",
        "    filtered_df['Department'],\n",
        "    categories=ordered_departments,\n",
        "    ordered=True\n",
        "    )\n",
        "\n",
        "# Visualize boxplots of rating by major (department)\n",
        "fig = px.box(\n",
        "    filtered_df,\n",
        "    x='Department',\n",
        "    y='Overall Rating',\n",
        "    title='Overall Rating Distribution for the Most Reviewed Departments (Ordered by Median Rating)',\n",
        "    labels={'Department': 'Department', 'Overall Rating': 'Rating'},\n",
        "    category_orders={'Department': ordered_departments}\n",
        "    )\n",
        "\n",
        "fig.update_layout(xaxis_tickangle=-45)\n",
        "fig.show()"
      ],
      "metadata": {
        "id": "UeQrmV6WBjtA",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 694
        },
        "outputId": "7c2b4bf5-644d-4dbf-d755-7feb28e6b2ca"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-7-f7d24641b003>:25: SettingWithCopyWarning:\n",
            "\n",
            "\n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"3a5de390-478b-435b-b1af-73dbfc43469b\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"3a5de390-478b-435b-b1af-73dbfc43469b\")) {                    Plotly.newPlot(                        \"3a5de390-478b-435b-b1af-73dbfc43469b\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Department=%{x}\\u003cbr\\u003eRating=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\"},\"name\":\"\",\"notched\":false,\"offsetgroup\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"x\":[\"Computer Science\",\"Economics\",\"Biology\",\"Computer Science\",\"Computer Science\",\"Computer Science\",\"Economics\",\"Computer Science\",\"Graduate School of Education\",\"Physics\",\"Psychology\",\"History Department\",\"Electrical Engineering\",\"Language Ctr\",\"Physics\",\"Psychology\",\"Music\",\"Electrical Engineering\",\"Computer Science\",\"Art & Art History\",\"Electrical Engineering\",\"Art & Art History\",\"Electrical Engineering\",\"Chemistry\",\"Economics\",\"Computer Science\",\"Music\",\"Computer Science\",\"Economics\",\"Political Science\",\"Computer Science\",\"Law School\",\"History Department\",\"Law School\",\"History Department\",\"Mathematics\",\"Political Science\",\"Computer Science\",\"English\",\"Physics\",\"Graduate School of Education\",\"Art & Art History\",\"Program in Writing and Rhetoric\",\"Chemistry\",\"Graduate School of Education\",\"Economics\",\"Chemistry\",\"Computer Science\",\"Law School\",\"Electrical Engineering\",\"Theater and Performance Studies\",\"Mathematics\",\"Mechanical Engineering\",\"Mathematics\",\"Electrical Engineering\",\"Mathematics\",\"Statistics\",\"Mechanical Engineering\",\"Graduate School of Education\",\"Program in Writing and Rhetoric\",\"Political Science\",\"English\",\"Music\",\"Computer Science\",\"English\",\"Economics\",\"Mathematics\",\"Theater and Performance Studies\",\"Chemistry\",\"History Department\",\"Computer Science\",\"English\",\"History Department\",\"Language Ctr\",\"Program in Writing and Rhetoric\",\"Economics\",\"History Department\",\"Computer Science\",\"Chemistry\",\"Biology\",\"Music\",\"Language Ctr\",\"Language Ctr\",\"Language Ctr\",\"Psychology\",\"Physics\",\"Political Science\",\"Chemistry\",\"Mathematics\",\"Political Science\",\"Computer Science\",\"Statistics\",\"Economics\",\"History Department\",\"English\",\"Computer Science\",\"English\",\"Art & Art History\",\"Law School\",\"Psychology\",\"Statistics\",\"Physics\",\"Biology\",\"Graduate School of Education\",\"Program in Writing and Rhetoric\",\"Theater and Performance Studies\",\"Mechanical Engineering\",\"Theater and Performance Studies\",\"Mathematics\",\"Computer Science\",\"Statistics\",\"Computer Science\",\"Mathematics\",\"Economics\",\"Program in Writing and Rhetoric\",\"Electrical Engineering\",\"Electrical Engineering\",\"Physics\",\"Mechanical Engineering\",\"Language Ctr\",\"Chemistry\",\"Music\"],\"x0\":\" \",\"xaxis\":\"x\",\"y\":[4.9,3.7,4.8,4.5,4.4,4.2,4.2,4.0,2.9,3.1,4.7,3.1,4.0,5.0,1.6,4.5,3.0,3.9,4.0,3.8,4.3,5.0,1.3,4.8,3.7,3.0,4.8,2.5,2.5,4.3,3.7,3.8,3.8,3.6,3.7,4.8,2.8,3.5,4.8,1.3,3.0,4.3,2.9,4.1,1.8,5.0,2.2,3.4,4.6,3.0,4.5,2.5,4.3,4.8,4.4,2.8,3.1,5.0,5.0,1.0,4.5,3.7,1.8,4.7,5.0,1.7,1.3,4.2,4.3,4.8,1.8,4.0,3.7,4.5,4.0,3.5,3.5,5.0,5.0,2.8,4.8,4.5,5.0,5.0,2.3,4.5,4.5,3.3,4.5,3.0,5.0,2.5,3.0,4.8,4.0,4.5,5.0,5.0,1.0,4.5,5.0,1.5,4.5,5.0,5.0,5.0,5.0,5.0,4.0,5.0,2.0,4.0,5.0,4.0,5.0,2.0,2.0,4.0,1.0,5.0,1.0,0.0],\"y0\":\" \",\"yaxis\":\"y\",\"type\":\"box\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Department\"},\"categoryorder\":\"array\",\"categoryarray\":[\"Language Ctr\",\"Theater and Performance Studies\",\"Art & Art History\",\"Mechanical Engineering\",\"Biology\",\"Psychology\",\"English\",\"Political Science\",\"Mathematics\",\"Chemistry\",\"Computer Science\",\"Program in Writing and Rhetoric\",\"Economics\",\"History Department\",\"Law School\",\"Electrical Engineering\",\"Graduate School of Education\",\"Music\",\"Statistics\",\"Physics\"],\"tickangle\":-45},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Rating\"}},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Overall Rating Distribution for the Most Reviewed Departments (Ordered by Median Rating)\"},\"boxmode\":\"group\"},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('3a5de390-478b-435b-b1af-73dbfc43469b');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Department Type'].value_counts().plot.bar()"
      ],
      "metadata": {
        "id": "6xOhzGFfyYM8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 102
        },
        "outputId": "65ea85a6-2b88-460f-a214-af7113c979ac"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Department Type'>"
            ]
          },
          "metadata": {},
          "execution_count": 8
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Exploring Department Type (STEM, Humanities, & Social Sciences)**"
      ],
      "metadata": {
        "id": "c7e8dq_5DDv1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Create DataFrame with no missing department and rating information\n",
        "clean_df = df[['Department Type', 'Overall Rating']].dropna()\n",
        "\n",
        "# Calculate median rating and sort department_type by median\n",
        "department_type_medians = (\n",
        "    clean_df.groupby('Department Type')['Overall Rating']\n",
        "    .median()\n",
        "    .sort_values(ascending=False)\n",
        "    )\n",
        "\n",
        "# Set categorical ordering based on median rating\n",
        "ordered_department_type = department_type_medians.index.tolist()\n",
        "clean_df['Department Type'] = pd.Categorical(\n",
        "    clean_df['Department Type'],\n",
        "    categories=ordered_department_type,\n",
        "    ordered=True\n",
        "    )\n",
        "\n",
        "# Display box plots of ratings by department type\n",
        "fig = px.box(\n",
        "    clean_df,\n",
        "    x='Department Type',\n",
        "    y='Overall Rating',\n",
        "    title='Overall Rating by Department Type',\n",
        "    labels={'Department Type': 'Department Type', 'Overall Rating': 'Rating'},\n",
        "    category_orders={'Department Type': ordered_department_type}\n",
        "    )\n",
        "\n",
        "fig.update_layout(xaxis_tickangle=-45)\n",
        "fig.show()"
      ],
      "metadata": {
        "id": "vuqb9XlABxhG",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "outputId": "7f4f03ec-ff48-4217-dfc8-846857b8e361"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"2b0fbb6b-27a4-43c6-8958-e9c6b79eaab0\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"2b0fbb6b-27a4-43c6-8958-e9c6b79eaab0\")) {                    Plotly.newPlot(                        \"2b0fbb6b-27a4-43c6-8958-e9c6b79eaab0\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Department Type=%{x}\\u003cbr\\u003eRating=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\"},\"name\":\"\",\"notched\":false,\"offsetgroup\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"x\":[\"STEM\",\"Social Sciences\",\"STEM\",\"STEM\",\"STEM\",\"STEM\",\"Humanities\",\"STEM\",\"Social Sciences\",\"STEM\",\"Social Sciences\",\"STEM\",\"Humanities\",\"Social Sciences\",\"Humanities\",\"STEM\",\"STEM\",\"Social Sciences\",\"Humanities\",\"STEM\",\"Humanities\",\"Humanities\",\"Humanities\",\"STEM\",\"STEM\",\"STEM\",\"STEM\",\"Humanities\",\"STEM\",\"Humanities\",\"Humanities\",\"Humanities\",\"STEM\",\"STEM\",\"STEM\",\"Social Sciences\",\"STEM\",\"Humanities\",\"STEM\",\"Social Sciences\",\"Social Sciences\",\"STEM\",\"Social Sciences\",\"Humanities\",\"Social Sciences\",\"Humanities\",\"STEM\",\"Social Sciences\",\"STEM\",\"Humanities\",\"STEM\",\"STEM\",\"STEM\",\"Social Sciences\",\"Humanities\",\"STEM\",\"Humanities\",\"STEM\",\"Social Sciences\",\"STEM\",\"Social Sciences\",\"STEM\",\"Humanities\",\"STEM\",\"Humanities\",\"Social Sciences\",\"STEM\",\"STEM\",\"Humanities\",\"STEM\",\"STEM\",\"STEM\",\"STEM\",\"STEM\",\"STEM\",\"STEM\",\"Social Sciences\",\"Humanities\",\"Social Sciences\",\"Humanities\",\"Humanities\",\"STEM\",\"Humanities\",\"STEM\",\"Humanities\",\"Social Sciences\",\"STEM\",\"Humanities\",\"STEM\",\"Humanities\",\"STEM\",\"STEM\",\"Humanities\",\"Humanities\",\"Humanities\",\"STEM\",\"Humanities\",\"Social Sciences\",\"STEM\",\"Humanities\",\"Humanities\",\"STEM\",\"STEM\",\"STEM\",\"Social Sciences\",\"STEM\",\"Humanities\",\"Social Sciences\",\"STEM\",\"STEM\",\"Social Sciences\",\"Social Sciences\",\"Social Sciences\",\"Humanities\",\"STEM\",\"Humanities\",\"STEM\",\"Social Sciences\",\"STEM\",\"STEM\",\"Social Sciences\",\"Humanities\",\"Humanities\",\"STEM\",\"Humanities\",\"STEM\",\"STEM\",\"Humanities\",\"Social Sciences\",\"Social Sciences\",\"STEM\",\"STEM\",\"STEM\",\"STEM\",\"Social Sciences\",\"Social Sciences\",\"Humanities\",\"Humanities\",\"Humanities\",\"STEM\",\"Humanities\",\"STEM\",\"STEM\",\"STEM\",\"STEM\",\"Social Sciences\",\"STEM\",\"Social Sciences\",\"STEM\",\"STEM\",\"Social Sciences\",\"Humanities\",\"STEM\",\"STEM\",\"Social Sciences\",\"STEM\",\"STEM\",\"STEM\",\"Social Sciences\",\"STEM\",\"Humanities\",\"STEM\",\"Humanities\"],\"x0\":\" \",\"xaxis\":\"x\",\"y\":[4.9,3.7,4.8,4.5,4.4,4.4,4.2,4.2,4.2,4.0,2.9,3.1,4.8,4.7,3.1,4.0,1.6,4.5,3.0,1.0,4.3,3.3,4.0,3.9,1.0,4.0,5.0,3.8,4.3,4.1,4.1,5.0,1.3,4.8,3.5,3.7,3.0,4.8,2.5,2.5,4.3,3.7,3.8,3.8,3.6,3.7,4.8,2.8,3.5,4.8,3.4,4.5,1.3,3.0,4.3,3.3,2.9,4.1,1.8,4.5,5.0,2.2,3.5,3.4,3.0,4.6,1.0,3.0,4.5,2.5,4.3,4.8,4.4,2.8,3.1,5.0,5.0,1.0,4.5,3.7,1.8,5.0,2.0,4.7,5.0,1.7,1.3,4.2,4.3,4.8,5.0,1.8,4.0,3.7,3.3,5.0,4.0,3.5,3.0,3.5,5.0,5.0,5.0,2.8,5.0,2.0,4.8,2.3,5.0,4.5,3.0,4.5,5.0,5.0,3.3,3.0,4.5,3.0,5.0,2.5,3.0,4.8,4.0,4.5,5.0,5.0,1.0,5.0,1.0,4.5,5.0,1.5,5.0,4.5,5.0,5.0,5.0,5.0,5.0,5.0,5.0,4.0,5.0,5.0,2.0,1.0,4.0,5.0,5.0,5.0,4.0,5.0,2.0,2.0,1.0,4.0,1.0,1.0,1.0,1.5,5.0,1.0,0.0],\"y0\":\" \",\"yaxis\":\"y\",\"type\":\"box\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Department Type\"},\"categoryorder\":\"array\",\"categoryarray\":[\"Humanities\",\"STEM\",\"Social Sciences\"],\"tickangle\":-45},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Rating\"}},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Overall Rating by Department Type\"},\"boxmode\":\"group\"},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('2b0fbb6b-27a4-43c6-8958-e9c6b79eaab0');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dep_counts = df['Department Type'].value_counts().reset_index()"
      ],
      "metadata": {
        "id": "a_QT3zhbGpFe"
      },
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "dep_counts"
      ],
      "metadata": {
        "id": "fCUJU4ZfG2jX",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 140
        },
        "outputId": "e6a2cfbf-6008-4b93-8065-796c89489a81"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Department Type  count\n",
              "0             STEM     81\n",
              "1       Humanities     47\n",
              "2  Social Sciences     35"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2e181b06-9790-4449-800b-a50bb3ce7ec8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Department Type</th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>STEM</td>\n",
              "      <td>81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Humanities</td>\n",
              "      <td>47</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Social Sciences</td>\n",
              "      <td>35</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2e181b06-9790-4449-800b-a50bb3ce7ec8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2e181b06-9790-4449-800b-a50bb3ce7ec8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2e181b06-9790-4449-800b-a50bb3ce7ec8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-9131018d-05ca-47e2-b529-c971b94b6567\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9131018d-05ca-47e2-b529-c971b94b6567')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-9131018d-05ca-47e2-b529-c971b94b6567 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_b89000b2-abc4-4520-8443-f823a4c9d0e0\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dep_counts')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_b89000b2-abc4-4520-8443-f823a4c9d0e0 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('dep_counts');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "dep_counts",
              "summary": "{\n  \"name\": \"dep_counts\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Department Type\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"STEM\",\n          \"Humanities\",\n          \"Social Sciences\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23,\n        \"min\": 35,\n        \"max\": 81,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          81,\n          47,\n          35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "px.bar(\n",
        "    dep_counts,\n",
        "    x='Department Type',\n",
        "    y='count',\n",
        "    title='Counts by Department Type',\n",
        "    labels={'Department Type': 'Department Type', 'count': 'Count'}\n",
        "    )"
      ],
      "metadata": {
        "id": "SFYB9SA_GfY5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "outputId": "9bb087d7-eefd-4959-84ae-8c3e697da60f"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"0916b16b-ad57-4ccb-9251-2d35daeb862b\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"0916b16b-ad57-4ccb-9251-2d35daeb862b\")) {                    Plotly.newPlot(                        \"0916b16b-ad57-4ccb-9251-2d35daeb862b\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Department Type=%{x}\\u003cbr\\u003eCount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"\",\"offsetgroup\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"textposition\":\"auto\",\"x\":[\"STEM\",\"Humanities\",\"Social Sciences\"],\"xaxis\":\"x\",\"y\":[81,47,35],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Department Type\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Count\"}},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Counts by Department Type\"},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('0916b16b-ad57-4ccb-9251-2d35daeb862b');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Exploring Number of Publications**"
      ],
      "metadata": {
        "id": "CtM3staIv9Op"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "sns.scatterplot(data=df, x='Num Publications', y='Overall Rating')\n",
        "plt.title('Publications vs. Overall Rating')\n",
        "plt.xlabel('Number of Publications')\n",
        "plt.ylabel('Overall Rating')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "T8B176l2wFu7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        },
        "outputId": "8135ec32-b559-4f07-c816-ba689fd33969"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# Create the same publication bins\n",
        "df['Pub Bin'] = pd.cut(\n",
        "    df['Num Publications'],\n",
        "    bins=[-1, 10, 50, 100, 200, np.inf],\n",
        "    labels=['0–10', '11–50', '51–100', '101–200', '200+']\n",
        ")\n",
        "\n",
        "# Group by bin and count\n",
        "bin_counts = df['Pub Bin'].value_counts().sort_index()\n",
        "\n",
        "# Plot\n",
        "plt.figure(figsize=(8, 5))\n",
        "sns.barplot(x=bin_counts.index.astype(str), y=bin_counts.values)\n",
        "plt.title('Number of Professors by Publication Bin')\n",
        "plt.xlabel('Number of Publications')\n",
        "plt.ylabel('Count')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "K3V2GKa_x7Fp",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        },
        "outputId": "127ea6f6-f038-4ab4-faba-c4e375fc0561"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Plot the histogram and save the result\n",
        "counts, bins, patches = plt.hist(df['Num Publications'], bins=5, edgecolor='black')\n",
        "\n",
        "# Annotate each bar with its count\n",
        "for count, x in zip(counts, bins):\n",
        "    plt.text(x + (bins[1] - bins[0])/2, count + 0.5, str(int(count)), ha='center')\n",
        "\n",
        "plt.title('Distribution of Number of Publications')\n",
        "plt.xlabel('Number of Publications')\n",
        "plt.ylabel('Count')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "LuWIx5g1yDPi",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        },
        "outputId": "f532fb51-ec80-4961-bbd8-67a5abf7367a"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Plot the histogram and save the result\n",
        "counts, bins, patches = plt.hist(df['Overall Rating'], bins=5, edgecolor='black')\n",
        "\n",
        "# Annotate each bar with its count\n",
        "for count, x in zip(counts, bins):\n",
        "    plt.text(x + (bins[1] - bins[0])/2, count + 0.5, str(int(count)), ha='center')\n",
        "\n",
        "plt.title('Distribution of Overall Rating')\n",
        "plt.xlabel('Overall Rating')\n",
        "plt.ylabel('Count')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "8O_SlJdezCe9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        },
        "outputId": "e7aebc53-4b99-45d7-c459-d8662bd428df"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#**Exploring Position Type**"
      ],
      "metadata": {
        "id": "1Lcw3_iFzT18"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "\n",
        "def categorize_position(pos):\n",
        "    if pd.isna(pos): return 'Other'\n",
        "    pos = pos.strip().lower()\n",
        "\n",
        "    # Match exact beginnings using regex\n",
        "    if re.match(r'^(assistant|asst)\\s+professor', pos):\n",
        "        return 'Assistant Professor'\n",
        "    elif re.match(r'^(associate|assoc\\.?)\\s+professor', pos):\n",
        "        return 'Associate Professor'\n",
        "    elif 'emeritus' in pos or 'emerita' in pos:\n",
        "        return 'Emeritus'\n",
        "    elif 'adjunct' in pos or 'visiting' in pos:\n",
        "        return 'Adjunct/Visiting'\n",
        "    elif 'lecturer' in pos:\n",
        "        return 'Lecturer'\n",
        "    elif re.match(r'^professor(?!.*(assistant|associate))', pos):\n",
        "        return 'Full Professor'\n",
        "    else:\n",
        "        return 'Other'\n",
        "\n",
        "df['Position Group'] = df['Position'].apply(categorize_position)"
      ],
      "metadata": {
        "id": "xe4GxWLizZKN"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = df[df['Position Group'] != 'Other']"
      ],
      "metadata": {
        "id": "kmHbdWvOMScd"
      },
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import plotly.express as px\n",
        "\n",
        "# Count the number of people in each position group\n",
        "position_counts = df['Position Group'].value_counts().reset_index()\n",
        "position_counts.columns = ['Position Group', 'Count']\n",
        "\n",
        "# Plot\n",
        "fig = px.bar(\n",
        "    position_counts,\n",
        "    x='Position Group',\n",
        "    y='Count',\n",
        "    text='Count',\n",
        "    opacity=0.6  # matching histogram opacity for consistency\n",
        ")\n",
        "\n",
        "fig.update_layout(\n",
        "    title='Distribution of Faculty Position Groups',\n",
        "    yaxis_title='Number of Observations',\n",
        "    xaxis_title='Position Group',\n",
        "    xaxis_tickangle=45\n",
        ")\n",
        "\n",
        "fig.show()\n"
      ],
      "metadata": {
        "id": "nzVJCYzDDKkx",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 562
        },
        "outputId": "9ffc0b39-7beb-46c4-f3a9-30aec4edad78"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"0d6f9cb1-311f-4ea6-a05b-967ae236649e\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"0d6f9cb1-311f-4ea6-a05b-967ae236649e\")) {                    Plotly.newPlot(                        \"0d6f9cb1-311f-4ea6-a05b-967ae236649e\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Position Group=%{x}\\u003cbr\\u003eCount=%{text}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":\"#636efa\",\"opacity\":0.6,\"pattern\":{\"shape\":\"\"}},\"name\":\"\",\"offsetgroup\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"text\":[71.0,42.0,27.0,15.0,5.0,4.0],\"textposition\":\"auto\",\"x\":[\"Full Professor\",\"Emeritus\",\"Lecturer\",\"Associate Professor\",\"Adjunct\\u002fVisiting\",\"Assistant Professor\"],\"xaxis\":\"x\",\"y\":[71,42,27,15,5,4],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Position Group\"},\"tickangle\":45},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Number of Observations\"}},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60},\"barmode\":\"relative\",\"title\":{\"text\":\"Distribution of Faculty Position Groups\"}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('0d6f9cb1-311f-4ea6-a05b-967ae236649e');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.figure(figsize=(10, 5))\n",
        "sns.boxplot(data=df, x='Position Group', y='Difficulty Rating')\n",
        "plt.title('Difficulty Rating by Position Group')\n",
        "plt.xticks(rotation=45)\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "IFNTzfEDCKhO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        },
        "outputId": "2a675f2e-ab6a-4e1a-b5d9-82f3bca0b4ec"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.figure(figsize=(10, 5))\n",
        "sns.boxplot(data=df, x='Position Group', y='Difficulty Rating')\n",
        "plt.title('Difficulty Rating by Position Group')\n",
        "plt.xticks(rotation=45)\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "4oWTSx-yzkJ_",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        },
        "outputId": "158d6167-ce85-41d8-9f3b-2bc21b16f8c9"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "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e86cOZg6dSoqV66MBw8eYO/evZg0aRKWLFmCUaNGwcPDAwUKFNBmrZnO3Nwc+gaGwLOzcpdCWUTfwBDm5uZZvl8ea3mPXMcakRyMQwLlLoGIiCjbSnfoXrt2LVauXAk3NzecO3cOjRo1wsWLF/HkyROYmJhos0atsbKywsYN6xETk7fuSoWFhcHLywuTJk2Cvb293OVkKXNzc1hZWWX5fnms8Vgjys0SHBpCZWwhdxmkZToJ0bzAQkT0FdIdusPDw9G0aVMAQIMGDaCvr48ZM2bk2MCtZmVllWe/GNvb28PJyUnuMvIMHms81ohyK5WxBVQmheUug4iIKFtK90BqSUlJMDIykh4bGBigYMGCWimKiIiIiIiIKDfI0EBqU6ZMQb58+QAAycnJmDVrVpo+i5yrm4iIiIiIiOijdIfuhg0b4uHDh9Lj77//Hs+ePdPYRqFQZF5lRERERERERDlcukP3mTNntFgGERERERERUe6T7j7dRERERERERJQxDN1EREREREREWsLQTURERERERKQlDN1EREREREREWsLQTURERERERKQlGQ7dJUqUwK+//orw8HBt1ENERERERESUa2Q4dI8ePRq7du2Co6Mjmjdvji1btiApKUkbtRERERERERHlaF8Vum/evImrV6+iXLlyGDFiBGxsbDB8+HAEBQVpo0YiIiIiIiKiHOmr+3RXr14dixcvRkREBKZNm4ZVq1ahVq1aqFq1KtasWQMhRGbWSURERERERJTj6H3tE1NSUrB7926sXbsWx48fR506ddC/f3+8ePECv/zyC06cOIFNmzZlZq1EREREREREOUqGQ3dQUBDWrl2LzZs3Q0dHB66urvjtt99QtmxZaRsXFxfUqlUrUwslIiIiIiIiymkyHLpr1aqF5s2bY9myZejYsSP09fXTbOPg4IAePXpkSoFEREREREREOVWGQ/ezZ89gb2//r9uYmJhg7dq1X10UERERERERUW6Q4YHUmjRpgr///jvN8ujoaDg6OmZKUURERERERES5QYZDd2hoKJRKZZrlSUlJePnyZaYURURERERERJQbpLt5+b59+6R/Hz16FObm5tJjpVKJkydPokSJEplaHBERERGRmk5ijNwlUBbg75lym3SH7o4dOwIAFAoF3NzcNNbp6+ujRIkSWLhwYaYWR0RERERkbm4OfQND4NlZuUuhLKJvYKhxk48oJ0t36FapVAA+jkx+7do1FC5cWGtFERERERGpWVlZYeOG9YiJyVt3QMPCwuDl5YVJkyb950DGuY25uTmsrKzkLoMoU2R49PKQkBBt1EFERERE9EVWVlZ5NoTZ29vDyclJ7jKI6CulK3QvXrw43S84cuTIry6GiIiIiIiIKDdJV+j+7bff0vViCoWCoZuIiIiIiIjo/6UrdLNJOREREREREVHGZXiebiIiIiIiIiJKnwwPpNavX79/Xb9mzZqvLoaIiIiIiIgoN8lw6H737p3G45SUFNy5cwfR0dFo2rRpphVGRERERERElNNlOHTv3r07zTKVSoUhQ4agZMmSmVIUERERERERUW6QKX26dXR0MHbs2HSPck5ERERERESUF2TaQGpPnz5FampqZr0cERERERERUY6X4eblY8eO1XgshEBkZCQOHjwINze3TCuMiIiIiIiIKKfLcOi+ceOGxmMdHR1YWlpi4cKF/zmyOREREREREVFekuHQffr0aW3UQURERERERJTrZLhPd0hICB4/fpxm+ePHjxEaGpoZNRERERERERHlChkO3X379sXFixfTLL9y5Qr69u2bGTURERERERER5QoZDt03btxAvXr10iyvU6cObt68mRk1EREREREREeUKGQ7dCoUC79+/T7M8JiYGSqUyQ6/l7e2NWrVqwczMDEWKFEHHjh3x8OHDjJZERERERERElC1lOHQ3bNgQ3t7eGgFbqVTC29sb9evXz9BrnT17FsOGDcPly5dx/PhxpKSkoEWLFoiPj89oWURERERERETZToZHL587dy4aNmyIMmXKoEGDBgCAc+fOITY2FqdOncrQax05ckTjsb+/P4oUKYLr16+jYcOGGS2NiIiIiIiIKFvJcOguX748goOD4ePjg1u3bsHY2Biurq4YPnw4ChYs+E3FxMTEAMAXXycpKQlJSUnS49jY2G/aHxERZZ7ExESEh4fLsu+wsDCNv+VgZ2cHIyMj2fYvJ53EGLlLoCzA3zMR0dfJcOgGgKJFi2L27NmZWohKpcLo0aNRr149VKxY8bPbeHt7Y8aMGZm6XyIiyhzh4eEYNGiQrDV4eXnJtm8/Pz84OTnJtn85mJubQ9/AEHh2Vu5SKIvoGxjC3Nxc7jKIiHKUdIXu4OBgVKxYETo6OggODv7XbStXrvxVhQwbNgx37tzB+fPnv7iNp6cnxo4dKz2OjY2Fra3tV+2PiIgyl52dHfz8/OQuQzZ2dnZyl5DlrKyssHHDeqmlWl4RFhYGLy8vTJo0Cfb29nKXk6XMzc1hZWUldxlERDlKukJ31apVERUVhSJFiqBq1apQKBQQQqTZTqFQZHgEcwAYPnw4Dhw4gMDAQBQvXvyL2xkaGsLQ0DDDr09ERNpnZGSU5+700sfgnVdDmL29PY95IiL6T+kK3SEhIbC0tJT+nVmEEBgxYgR2796NM2fOwMHBIdNem4iIiIiIiEhu6QrdLi4uOHnyJAoUKIB169Zh/PjxyJcv3zfvfNiwYdi0aRP27t0LMzMzREVFAfjYdMnY2PibX5+IiIiIiIhITukK3ffv30d8fDwKFCiAGTNmYPDgwZkSupctWwYAaNy4scbytWvXom/fvt/8+kTEEaXz8ojSRERERCS/dPfpdnd3R/369SGEwIIFC2BqavrZbadOnZrunX+uXzgRZS6OKJ33RpQmIiIiouwjXaHb398f06ZNw4EDB6BQKHD48GHo6aV9qkKhyFDoJiLt44jSeW9EaSIiIiLKPtIVusuUKYMtW7YAAHR0dHDy5EkUKVJEq4URUebgiNJERERERPLRSc9G1atXx7t37wAA06ZN+2LTciIiIiIiIiL6n3SFbvVAagDw66+/Ii4uTqtFEREREREREeUGsg6kRkRERERERJSbcSA1IiIiIiIiIi3hQGpEREREREREWpKu0P0plUqljTqIiIiIiIiIcp10he59+/bB2dkZ+vr62Ldv379u2759+0wpjIiIiIiIiCinS1fo7tixI6KiolCkSBF07Njxi9spFAoolcrMqo2IiIiIiIgoR0tX6P60STmblxMRERERERGlT7rm6SYiIiIiIiKijMvQQGoqlQr+/v7YtWsXQkNDoVAo4ODggC5duqBPnz5QKBTaqpOIiIiIiIgox0n3nW4hBNq3b48BAwbg5cuXqFSpEipUqICwsDD07dsXLi4u2qyTiIiIiIiIKMdJ951uf39/BAYG4uTJk2jSpInGulOnTqFjx45Yv349XF1dM71IIiIiIiIiopwo3aF78+bN+OWXX9IEbgBo2rQpJk6ciICAAIbudEpMTER4eLgs+w4LC9P4Ww52dnYwMjKSbf9ERJSz8XOUn6NERDlFukN3cHAw5s2b98X1zs7OWLx4caYUlReEh4dj0KBBstbg5eUl2779/Pzg5OQk2/6JiChn4+coP0eJiHKKdIfut2/fwsrK6ovrrays8O7du0wpKi+ws7ODn5+f3GXIxs7OTu4SiIgoB+PnKD9HiYhyinSHbqVSCT29L2+uq6uL1NTUTCkqLzAyMuIVaiIioq/Ez1EiIsop0h26hRDo27cvDA0NP7s+KSkp04oiIiIiIiIiyg3SHbrd3Nz+cxsOokZERERERET0P+kO3WvXrtVmHURERERERES5jo7cBRARERERERHlVgzdRERERERERFrC0E1ERERERESkJQzdRERERERERFrC0E1ERERERESkJQzdRERERERERFrC0E1ERERERESkJQzdRERERERERFrC0E1ERERERESkJQzdRERERERERFrC0E1ERERERESkJQzdRERERERERFrC0E1ERERERESkJQzdRERERERERFrC0E1ERERERESkJQzdRERERERERFrC0E1ERERERESkJQzdRERERERERFrC0E1ERERERESkJQzdRERERERERFrC0E1ERERERESkJQzdRERERERERFrC0E1ERERERESkJXpyF0BZKyEhAStWrMCLFy9QvHhxeHh4wNjYWO6yiIiIiIiIciVZ73QHBgaiXbt2KFq0KBQKBfbs2SNnObnepEmT4OzsjD179uDPP//Enj174OzsjEmTJsldGhERERERUa4ka+iOj49HlSpVsHTpUjnLyBMmTZqECxcuQF9fH7169cLGjRvRq1cv6Ovr48KFCwzeREREREREWiBr83JnZ2c4OzvLWUKekJCQIAXugwcPwsDAAAAwaNAg9O3bF23atMGFCxeQkJDApuZERERERESZKEf16U5KSkJSUpL0ODY2VsZqco4VK1YAALp27SoFbjUDAwN06dIFmzdvxooVKzB69GgZKiQiIiLKnhITExEeHi7LvsPCwjT+loOdnR2MjIxk2z9RbpCjQre3tzdmzJghdxk5zosXLwAArVu3/uz61q1bY/PmzdJ2RERERPRReHg4Bg0aJGsNXl5esu3bz88PTk5Osu2fKDfIUaHb09MTY8eOlR7HxsbC1tZWxopyhuLFi+PPP//EoUOHPvuhcejQIWk7IiIiIvofOzs7+Pn5yV2GbOzs7OQugSjHUwghhNxFAIBCocDu3bvRsWPHdD8nNjYW5ubmiImJQf78+bVXXA6XkJAAZ2fnNH26ASA5ORlt2rRBSkoKDh8+zD7dRERERERE6ZDePCrr6OWUNYyNjVGvXj2kpKSgTZs2WLFiBZ4/f44VK1ZIgbtevXoM3ERERERERJlM1jvdcXFxePLkCQCgWrVqWLRoEZo0aYKCBQumqykL73RnjHrasH+qV6+erH2FiIiIiIiIcpr05lFZQ/eZM2fQpEmTNMvd3Nzg7+//n89n6M64hIQErFixAi9evEDx4sXh4eHBO9xEREREREQZlCNC97di6CYiIiIiIiI5sE83ERERERERkcwYuomIiIiIiIi0hKGbiIiIiIiISEsYuomIiIiIiIi0hKGbiIiIiIiISEsYuomIiIiIiIi0hKGbiIiIiIiISEsYuomIiIiIiIi0hKGbiIiIiIiISEsYuomIiIiIiIi0hKGbiIiIiIiISEsYuomIiIiIiIi0hKGbiIiIiIiISEsYuomIiIiIiIi0hKGbiIiIiIiISEsYuomIiIiIiIi0hKGbiIiIiIiISEsYuomIiIiIiIi0hKGbiIiIiIiISEsYuomIiIiIiIi0hKGbiIiIiIiISEsYuomIiIiIiIi0hKGbiIiIiIiISEsYuomIiIiIiIi0hKGbiIiIiIiISEsYuomIiIiIiIi0hKGbiIiIiIiISEsYuomIiIiIiIi0hKGbiIiIiIiISEsYuomIiIiIiIi0hKGbiIiIiIiISEsYuomIiIiIiIi0hKGbiIiIiIiISEsYuomIiIiIiIi0hKGbiIiIiIiISEsYuomIiIiIiIi0hKGbiIiIiIiISEsYuomIiIiIiIi0hKGbiIiIiIiISEsYuomIiIiIiIi0hKGbiIiIiIiISEsYuomIiIiIiIi0hKGbiIiIiIiISEsYuomIiIiIiIi0hKGbiIiIiIiISEv05C6AiIjoWyiVSgQHB+Pt27coWLAgKleuDF1dXbnLIiIiIgKQTUL30qVLMX/+fERFRaFKlSpYsmQJateuLXdZRESUzQUGBsLX1xdRUVHSMmtrawwdOhQNGzaUsTIiIiKij2RvXr5161aMHTsW06ZNQ1BQEKpUqYKWLVvi9evXcpdGRETZWGBgIKZNmwZHR0csXboUhw4dwtKlS+Ho6Ihp06YhMDBQ7hKJiIiIoBBCCDkL+O6771CrVi34+PgAAFQqFWxtbTFixAhMnDjxX58bGxsLc3NzxMTEIH/+/FlRLhERZQNKpRK9e/eGo6MjZs2aBR2d/11DVqlUmDx5MkJCQrBx40Y2NSciIiKtSG8elfVOd3JyMq5fv45mzZpJy3R0dNCsWTNcunQpzfZJSUmIjY3V+ENERHlPcHAwoqKi0Lt3b43ADXz8HOnduzciIyMRHBwsU4VEREREH8kauv/66y8olUpYWVlpLLeystLon6fm7e0Nc3Nz6Y+trW1WlUpERNnI27dvAQAODg6fXa9ert6OiIiISC6y9+nOCE9PT8TExEh/nj9/LndJREQkg4IFCwIAQkJCPrtevVy9HREREZFcZA3dhQsXhq6uLl69eqWx/NWrV7C2tk6zvaGhIfLnz6/xh4iI8p7KlSvD2toaAQEBUKlUGutUKhUCAgJgY2ODypUry1QhERER0Ueyhm4DAwPUqFEDJ0+elJapVCqcPHkSdevWlbEyIiLKznR1dTF06FBcunQJkydPxt27d/HhwwfcvXsXkydPxqVLlzBkyBAOokZERESyk3308q1bt8LNzQ0rVqxA7dq18fvvv2Pbtm148OBBmr7e/8TRy4mI8rbPzdNtY2ODIUOGcJ5uIiIi0qr05lG9LKzps7p37443b95g6tSpiIqKQtWqVXHkyJH/DNxEREQNGzZEvXr1EBwcjLdv36JgwYKoXLky73ATERFRtiH7ne5vwTvdREREREREJIccMU83ERERERERUW7G0E1ERERERESkJQzdRERERERERFrC0E1ERERERESkJQzdRERERERERFrC0E1ERERERESkJbLP0/0t1LOdxcbGylwJERERERER5SXqHPpfs3Dn6ND9/v17AICtra3MlRAREREREVFe9P79e5ibm39xvUL8VyzPxlQqFSIiImBmZgaFQiF3OTlGbGwsbG1t8fz583+dxJ3oW/FYo6zCY42yEo83yio81iir8Fj7OkIIvH//HkWLFoWOzpd7bufoO906OjooXry43GXkWPnz5+d/KsoSPNYoq/BYo6zE442yCo81yio81jLu3+5wq3EgNSIiIiIiIiItYegmIiIiIiIi0hKG7jzI0NAQ06ZNg6GhodylUC7HY42yCo81yko83iir8FijrMJjTbty9EBqRERERERERNkZ73QTERERERERaQlDNxEREREREZGWMHQTERERERERaQlDNxEREREREZGWMHSTVnGcPiIiIqLcj9/5iL6MoZuyRGBgIO7evcsTMhEREVEupFAosH37dgQEBMhdCuVi6ixx5coVhIeHy1xN+jF0k1YpFAqcPn0ajRs3xrNnz6BUKuUuiYiIKMdSqVRyl0D0WcHBwejXrx+io6N5k4W0RqFQ4OjRo2jbti3u3LmTY441ztNNWhUWFobr16/j8ePHmDBhgtzlUA505MgRvH79Gq6urnKXQnmMEAIKhULuMog+68CBA2jcuDFMTU3lLoUId+/exa5du5CQkIDZs2fLXQ7lQurP5FevXmHatGkoW7YsRo8eLXdZ6cY73aQ1z58/h4ODA8MSfbXLly+jR48e0NPTQ2pqqtzlUC6mvv58+fJlbNiwAcnJyQzclK18eoc7LCwM7du3x9SpUxEXFydjVUTAy5cvMXr0aPzxxx+Ij48HwP7dlPkUCgWuXr0KFxcXXL58GWXLlgWQc1r/MHST1lhaWsLX1xeGhoZ4+PCh3OVQDhMaGoqTJ09i5MiR6NWrF3R1deUuiXIp9dXznTt3om3btnj69CmePHkireOXR5KbEAI6Oh+/sv3666/w8fGBpaUlfv/9d4wbNw4fPnyQuULKi9TnxmLFiqFnz56ws7PDgQMH8ODBAygUCp47KdOVL18eBgYGCA4OxtWrV6FSqaCjo5MjjjU9uQug3OOfTTGNjIzg7u4OIQRGjBgBBwcHTJkyRcYKKScQQiAiIgL16tVDfHw8Bg0aBADSBzjvPlJmUygUOHPmDNzd3TF//nx4eHikWc9jj+SkPva8vb2xePFibN26Fa1atcLjx48xduxYKJVKLF68GPny5ZO5UsoL1OfDT8+J/fr1g7GxMRYvXozJkyfDy8sLZcqU4bmTMpWpqSkOHjwIFxcXbN++HZUqVUK7du2gp6eX7Y81hm7KFOoD/dKlSwgODsaLFy/QtWtXlChRAkOGDIFSqcSoUaOgo6ODSZMmyV0uZVPq46hYsWKYPXs2xo8fj6tXr+L+/fsoV65ctj6ZUs6kPub27duHtm3bwsPDA7Gxsbh58yY2b96MN2/eYPbs2XBycsr2H+iUu6WkpODChQvw8PDADz/8AAD44YcfYGtriy5dusDIyAje3t4wMzOTuVLKzdTnwTNnzmD37t1ISUmBg4MDfvrpJ/Ts2RMqlQp+fn6YNGkSz530TdTHzZ07d/Do0SPkz58fNjY2qFChAnbu3In27dtjzpw50NHRQZs2bbJ98GbzcsoU6qaZLVq0wLZt2+Dv748OHTpgypQpiIiIwPDhw7F48WLMmjWLoZvSUDcLSklJkZa5ublh4cKFePjwIVasWIGnT5/KVR7lQv9simZhYYHbt29j165dGDhwIObMmYP79+/j3bt3aNKkCRISErLtBznlDUqlEmFhYXj37p3GsjZt2qBfv37w9fXF5MmTpXU5obkl5TwKhQK7d++Gs7MzIiIi8Pz5c8ycORNNmjRBWFgYevfuLY1gPnz4cDx+/JjnTvoq6mzRtGlTTJkyBf369YOzszPWr18PMzMz7Nu3D/ny5cO8efOwa9cuKJXKbH2sMXRTpnj06BHGjRuH33//HUeOHMHz588xZMgQ3Lx5EwsWLEBcXBwGDRoELy8vrFixAn///bfcJVM2ob4qeeLECQwYMAAuLi5wc3NDXFwcXF1dMWfOHOzYsQNLly7Fs2fP5C6XcgmFQoHz58/j4MGDEEKgcePGKFOmDPr37w8DAwOMGjUKp06dgqenJ4oXL84+s5SlPjcwkJGREfr164eDBw/ixIkTACCNdWFvb49OnTrBz88PXl5eAJCtv3xSzhUVFYVffvkFs2fPxvbt27F//34EBwcjPDwc/fr1A/DxonnXrl1haGgIY2NjmSumnOrmzZsYMGAAZs6ciYsXL2Lfvn3o2bMn3N3dsXHjRpiZmWH//v1ITEyEn58fEhIS5C753wmiTHDp0iVRvHhxcefOHY3ls2fPFg4ODuLZs2dCCCGSkpLEu3fvZKiQsrPdu3cLExMTMX78eLF06VLh5OQkSpUqJaKiooQQQqxdu1bY29uLgQMHSscS0bdq3LixKFq0qDh27JgQQoiEhATx5MkTjW3GjRsnvv/+exETEyNHiZQHKZVK6d/nz58X+/fvF3/99ZcQQohHjx6Jzp07iyZNmkjHbUxMjGjXrp1Yv3698Pb2FiVLlhTPnz8XKpVKlvopdwsLCxMODg7i/PnzQgghUlJShBBCPHnyRJiZmQkfHx9pW5436Vts27ZN1KpVSyQkJEjL3r17J8aNGyecnJzEo0ePhBBCxMXFidDQULnKTDfe6aZMkZqaCiGEdJUpOTkZAODp6YnY2Fjs2bMHAGBgYAALCwuZqqTs6K+//oK3tzdmzJiB+fPno0OHDkhMTMQPP/wAKysrAEDfvn3x008/4cKFCxwoiDLN6dOnUalSJQwfPhyHDx+Grq4uSpYsCQAICgrCyJEjsXr1avj6+iJ//vwyV0t5hXqU8p9++gmdOnVCnz598N1332H16tVwdHTEhAkTUKRIEbi4uKB69eqoUaMGQkJC0KdPH1hZWcHAwADm5ua8002ZSqlUAgDMzMzw7t07XLt2DQCgp6cHpVIJe3t7VK1aFVFRUdJzeN6kb3Xv3j1EREQA+Ngy0sLCAi4uLoiJicHbt28BACYmJrC3t5ezzHRh6KYME//fT+zKlSs4ffo0AKB+/fqwtLTEuHHjkJycDAMDAwDA+/fvUbJkSRQrVky2ein7UR9DQgjo6enhr7/+Qr9+/RAVFYXvvvsOzs7OWL58OQBg+/btAIBhw4bh4sWLUhAnygj1Mff+/XuNvq5HjhyBra0txowZg+PHjyMlJQWPHj3C6tWrcevWLZw9exZVqlSRq2zKQ9ShBgBOnTqFM2fOYNu2bbh37x4aNWqE3377DUuWLEHVqlXh5+eH3bt3o127dhg7diyCgoIAfLxYZGdnJ9dboFxGfa68ePEiNmzYgMjISBQoUABDhgzBunXrsGPHDgAfuzno6enB0NAQenoco5kyTn2sPXjwACEhIVCpVKhSpQrKlSsHf39/REZGShcSS5YsiQIFCiAuLk7OkjOMoZsyRPx//9tdu3ahU6dO2LZtG8LDwwEAW7ZsQVhYGJo0aYLTp0/j6tWrmDdvHkJCQlCrVi2ZK6fsRKFQYP/+/Zg/fz4MDQ1RvHhxbNy4EXXq1EHbtm2xZMkSAMCLFy+wceNGHDx4EACvmlPGqT/IFQoFLl68iLp16+LPP//U2ObEiROwtLTEiBEjcOrUKTg5OWH8+PHYuXMnKleuLEfZlIeo54RX98/etGkTDhw4gB9++AGNGjWCjY0NVq9ejUaNGmHlypVYunQplEolmjdvjhkzZmDIkCF4+fIlRo8ejQ0bNmD+/PkcwZy+mfr73s6dO9G6dWu8ePEC0dHRAIBu3bqhYsWKmDZtGmbPno39+/djzJgxuHbtGnr27Clv4ZTjqI+1PXv2oGXLljh8+DCio6Ph5OSEtm3bYufOnViyZAnu3r2Lv//+G7///js+fPiAcuXKyV16xsjSqJ1ytKNHjwpjY2OxevVq8eHDB411T548Ed9//72wtbUVdnZ2oly5cuL69esyVUrZ1fXr10XhwoWFv7+/eP/+vXB3dxempqaiXbt2GttNmDBBVKtWTbx8+VKmSikn+rRPrNrff/8tkpKShK2trahVq5a4fv26UKlUUr/XkJAQkS9fPlGyZElx/PjxrC6Z8ih3d3cxZcoUIcT/jttGjRoJhUIhnJ2dRWpqqsb2w4YNE1WqVBEzZswQ79+/F0J87M+4aNEi4ezsLG7evJm1b4BytbNnzwoLCwuxcuXKNOtevHghpkyZIiwtLUXFihVF7dq1xY0bN7K+SMoVDhw4IExMTISPj4+IjIzUWDdv3jxRs2ZNoaurK6pWrSpsbGxEUFCQTJV+PYUQnFOC0i85ORmjRo2Cqakp5s+fj9jYWDx+/BgBAQEwNzeHh4cHrK2tcfv2bejo6MDS0hJFihSRu2zKRh49eoS9e/fizZs3mDdvHgAgJCQE3bp1Q758+dCqVSs4Ojri1KlT2Lp1K5v30ld5/Pgxdu/ejZ9//hnbt2/H8uXLcfToUaSkpKB69eowMjLC6tWrUb16dQDArVu3MGfOHERHR8PHx0fq202kTYcOHULz5s2hr6+PqKgoWFtbAwB+/PFHnDt3DrNmzUKXLl00RoD+8ccfoaOjg3Xr1knNLd+/fw+lUskxUyhTTZkyBbdu3cK+ffsQHx+PK1euYN26dYiNjcW4ceNQv359xMXFITk5GXp6emyNRl/lw4cP6NSpE6pWrYo5c+YgISEBf//9N3bu3IlSpUqhZcuWiIuLw+XLl6Gnp4eyZcuiePHicpedYex4QRliYGAgDaARHh6OKVOm4MWLF/jw4QMeP36MW7duYdeuXahUqZLcpVI2o1QqERsbixYtWiAiIgLdunWT1jk4OGDDhg1YsGABNmzYAENDQ9ja2uLcuXM8lijDkpOTcfToUUycOBG3bt3C5s2bsXbtWujp6UFPTw9BQUGoVq0aBg4ciJkzZ6J69erYs2cPTE1NsX79eujr68v9FiiPaN26NQBg5cqVOHLkCDw9PVGzZk1s3LgRHTp0wIIFC6CnpwcXFxcYGRkBADZu3AiVSgWFQiE1y2RzcspMSqUSurq6MDExQVRUFNasWYODBw8iKSkJcXFxsLGxQefOnXHlyhWUKFFC7nIphxNCIDExEWZmZnj48CH8/Pxw8+ZN3LhxA3Z2djh//jxmzpyJVq1ayV3qN2GfbvpX6oYQQUFB0qBpw4cPR2pqKpycnJCQkIBhw4bh0qVLWL58OUJCQqQ+P0SA5qBpBQoUQEBAAEqWLImbN2/i3Llz0nZly5bFsmXLcP36dZw/fx7btm1j4KYM8fb2xrt372BgYAAPDw/07t0bmzdvRqdOneDm5gYASExMhLGxMW7cuAETExN4eHigTp068PX1xZAhQxi4KculpKTAwsICT548wfLly3H9+nUAwJ49e1CiRAnMnTsXe/bs0ZiDVkdHRwreRJlB/Vl96dIl7N27Fx8+fEDz5s1RvHhx/PrrrzAzM8Po0aNx5swZDBgwAI6OjjAxMZG5asqJ1Mfao0eP8PbtW5iYmKBWrVr4448/ULNmTYSFhaFPnz6IiIhA1apVERYWlisG6GPopi8Snwya5uLigkOHDiEyMhJ16tTB+fPnERgYiG3btqFTp04AgHPnzqFo0aIwNDSUuXLKThQKBS5fvgxPT0/8/fffqFevHtasWYOEhAT4+PhoDGqlq6sLY2NjmJiYSHd1iNLj9evXOHz4MCIjIwEA+vr6KFiwIDp37oxTp05hxowZAAAjIyMkJCTA2NgYJ0+exKpVq7BgwQJcuXJFampOpE0HDx6UplXy9PTE5MmT0bVrV0yYMAE3b97E0qVLcf36dWlgIQcHB4wePRoXLlzQeB311GJE3+rT73utW7fG3bt3ERERgRo1amD16tU4f/48/P390axZMwDAyZMnoVKpckUQoqylPtb27t2LFi1aYNOmTUhKSsL8+fOxefNm7Ny5Ezt27ECfPn1gZGQEIyMj6OvrIyUlBTm+R7QsPckpxzhy5IgwNjYWK1as0Jic/lN//vmnGDdunLCwsBC3bt3K4gopJ/D09BQVKlQQnp6e4u+//xZCCBEYGCgcHR1Ft27dxJ9//ilzhZQbJCYmCiGEOHPmjHScRUdHi/nz5wtzc3Mxffp0je3DwsKyvEbK22JjY0Xt2rWFtbW1GDhwoMiXL5/G4FMbN24UNWrUEH379pXOiyqVSvz8889pBlUjykynT58W5ubmYvXq1SIlJUVanpSUJP37/PnzYvTo0cLCwoKD9tFX279/v8iXL5/w8fH54udweHi4+OWXX4S5ubm4c+dOFleoHRxIjb4oMTERAwcORPHixeHt7Y3Y2Fg8e/YMO3bsgLGxMYYOHYrnz59j5cqVOH/+PNatW8fpdeizVCoVpk+fjmPHjqFRo0aYMGECChYsiHPnzmHgwIFwdHTE7NmzUbVqVblLpRxIpVJJd/1iY2PRqlUrhIWF4fbt2yhYsCBev36NDRs2YNasWRg1ahSmT5+O6dOn488//8SmTZs4+A9p3fr16+Hq6goAiI6ORqlSpRAfH4/9+/ejWbNmSEpKklqJBQQE4Pfff0eVKlXQv39/1K1bV3oddV9boszm6emJx48fY8eOHfjw4QOCgoLg7+8PPT09dOzYEY0aNcKIESMQGhqK3377jd2/6KvExcXBxcUFdevWxa+//oqkpCRER0djz549cHJyQtWqVfHs2TOMHTsWr1+/xubNm3PNd0O2C6EvMjIyQmpqKi5fvoyQkBDMmjULoaGhiImJQWhoKB49eoR169Zh0KBBmDRpkjTqKhEAhIeHw8rKCoaGhtDR0cH06dOhVCpx6tQpKBQKTJw4EQ0aNICvry/Gjx8PS0tLuUumHEoduI8ePYrQ0FD4+vpi6NCh+P7773HhwgUUKVIEffr0gb6+PsaPH4/du3cjNDQUJ0+eZOAmrdu7dy8WLVqEXr16QU9PD3FxcbC2toaOjg4GDRqEs2fPwtbWFikpKdDX10fv3r2hUCgwYcIEODg4oG7dulKTTAZu0haVSoXXr19j27Zt2LVrF96/f4+///4btra2mDBhAi5evIgpU6bA1NQUhQoVkrtcyqFSUlLw6tUrWFpa4sWLF1iyZAmuXr2K69evo0SJEujXrx9Gjx6NMWPGoFq1arC3t5e75Mwj8512ykbU89V+avfu3aJGjRpCV1dXdO3aVezYsUMIIcTq1atF7dq1RXx8fFaXSTnAvXv3RLVq1cS8efM0mqYlJyeL0aNHCysrKzFlyhTx119/CSFEmvneiTLq8uXLwsTERGzbtk2kpKSIBw8eiJo1a4oyZcpIx1l8fLy4fv26WLp0qXj69KnMFVNeop6D+9y5c0IIIRISEkRUVJSoV6+eKFGihHj+/Hma51y4cIFNykkrPv2+pz7GgoKCxPfffy+KFSsmfvzxR3Ho0CEhhBC7du0S3333nXj37p0cpVIuNGbMGGFsbCzMzc1Fp06dpHngO3ToIHr27ClzddrD5uUE4H8DG1y4cAEnT55EUlISKlSogF69eiE2NhZ37tzB999/L20/dOhQREREYOvWrRw4jaRRdBUKBZ4+fQoHBwf06dMH4eHh6NKlC4YMGQIDAwMAH5tHli5dGikpKXB3d8f06dOl5xJ9jQcPHuDcuXMIDQ2Fl5eXtPzhw4f48ccf8f79e1y8eBEFCxaUsUrK64KCglCzZk3MmDEDU6ZMAQA8e/YMbm5uiIyMxLFjx2BnZwdXV1eUK1dO2oZNyikzqb/vHTt2DIcPH0ZQUBB69uwJZ2dnFC9eHOHh4XBwcJC29/T0xLlz53DgwAHOA08Zoj7W/vzzT4SGhiIsLAxubm4oXLgwTp8+jdjYWLRp0wYAoKenBw8PDygUCixZsgR6enq573uhrJGfspWdO3cKCwsL0aNHD9G3b19hbm4uXF1dNba5c+eONGhacHCwTJVSdvLo0SPh4eEhhBBi69atwtLSUrx48ULEx8cLd3d38d1334nff/9dGpglIiJCdO/eXYwbN06Eh4fLWTrlcCqVSsTGxgojIyOhUCjEwIED02zz4MEDUadOHWFlZSXevn0rQ5WUV6nvbn/676VLlwoDAwMxa9Ysad3Tp09F48aNhZGRkahZs6YoWbKkSE5OzvJ6KXf79O727t27hYmJiRgzZoyYMGGCqF69uqhbt64IDQ2Vtjl37pwYP368yJ8/PwdNowz5tIXOjh07hLW1tWjUqJGoUqWKsLGxEStXrtQ4P7548UJMmjRJmJubi7t378pRcpZg6M6j/P39xdWrV6XHT58+FQ4ODsLHx0cI8TFIWVhYSGFKiI/NNwcPHiwqV67MEzBJLly4IBQKhWjatKlQKBTC399fWqcO3nXr1hUTJ04Ut27dEpMnTxYtW7ZkUzX6Jp9+gbx586YoUqSIqFy58mc/sO/cuSOaNGkinjx5kpUlUh726RfKLVu2iJ07d0qj669YsULo6OhoBO/k5GTh4+MjFi9eLF2g/HQEaaKvNXHiRHHlyhXp8fPnz0X16tXFsmXLhBAfu3flz59f/Pzzz9I2r1+/Ft26dRP169fnrDSUblu2bNEI3NevXxdWVlbS98KYmBihUCjE/PnzpW3Onz8vWrVqJZycnDRmcsiNGLrzIE9PT2FiYiJevHghLbt06ZKoWrWqEOLjNDrFixcXgwcPltarpy65evWqiIiIyNqCKdubPHmyUCgUon79+tIy9Yk3Pj5eTJgwQVSsWFFYWVkJBwcHcf36dblKpRxOHbbV40m8f/9eCPHxw93ExER07txZ426NGu8cUlb59ILQzz//LIoVKybWrFmj8dm5bNkyoaOjI7y8vDQCuhr7clNmmDt3rlAoFBrBOTQ0VFSsWFG8efNGPH78WBQrVkyjldCZM2dEamqqePnypXj16pUcZVMONGHCBFGkSBGNKcB27dolWrZsKYQQ4v79+8Le3l4MGDBAWv/27Vvx4cMHsWvXLhESEpLVJWc5hu485tWrV6JBgwZizZo1QgghHj58KIQQIjg4WHz//ffi5MmTws7OTnh4eEhX2W/duiX69OkjHj16JFvdlP18+sVy/fr1YsyYMcLc3Fz07t1bCkLqYyg5OVmEh4eLc+fO8aINfTX1MXf48GHRvXt30aRJE9GrVy+p1Y46eHfp0uWzwZsoKy1cuFBYW1uLS5cuaSxXXwDy8fER+vr6wtPT87PBm+hbfPjwQTRs2FBMnz5dCPExTIeFhYmnT5+K8uXLi/PnzwtHR0fRv39/6fgLDg4Wbm5uGnfGif7LgwcPRLFixaTB99QB+vfffxcNGjQQ79+/F3Z2dmLQoEHSsbZz504xceJEkZCQIFfZWU5H7j7llLVMTEzw+vVrnDlzBlu3bkXZsmXx4MED5M+fH0lJSWjbti2aNGmC5cuXQ0/v44xy69atw8uXL1GgQAGZq6fsQvz/4BhnzpyBt7c3nJ2dsWjRIuzbtw/79+/H4MGD8eHDB+kYun79OmxtbVG/fn3Y2NjIXD3lVAqFAnv37oWLiwsqVKiA7t27IzY2Ft999x1CQkJQvXp1nD9/HsePH8egQYPw/PlzuUumPKJfv36IjIyUHicnJ+Ps2bMYPHgw6tSpg2fPnmHPnj3o2LEjevfujZcvX2LYsGHw9vbGuXPnct+AQSQ7Y2NjVK1aFfv27YOXlxdatWqFp0+fwtHRERUrVkSDBg3QsGFDrFq1Spp2cdOmTbh79y5sbW1lrp5yEiMjIxQtWhShoaFYu3YtevfujVevXqFjx46Ijo5GoUKF4OzsjBUrVkjnugsXLuDu3btISkqSufosJHfqp6yjvrr0+PFjYWRkJIyNjYWfn5+0ft++fUJXV1cMGTJEHD9+XFy/fl2MHj2ag6bRZ+3cuVOYmpqKKVOmSN0PhPg4+IqFhYXo2bOnuHv3rpg6daqws7MTUVFRMlZLuUFMTIxo2rSpWLhwoRDi4+ArdnZ2UtNI9Tnu8uXLomjRohpdaIi05a+//hLdunXTuGOjVCpFjx49hIuLi1i8eLFo2bKlaNmypejUqZOoU6eOaNSokdTHW92C43PTdhJ9i/v374tatWoJHR0d8csvv0jL7927J5o1ayZsbW3FoUOHREBAgBg9erQwMzNjH27KMKVSKX766SdRpkwZoVAoxNKlS4UQQrx7905Mnz5dODk5icmTJwshPmaQX375RRQsWFDcuXNHzrKzHEN3HnT58mWhUCiEgYGBGDp0qEbfsYCAAFGtWjVRsGBBUalSJVGzZk0OmkZpBAcHCxsbG7F8+XKN5eovjVeuXBHm5uaibNmyokiRIhqhnOhrRUVFCTs7O3H//n0RFRUlihUrJgYNGiStDwgIkOY7VgcaIm0LCQmRzn0rV64Uz549E0IIsWHDBtG2bVtRuHBhMXPmTKkbhLe3t+jSpYvGazBwkzbcuHFDmJqaimrVqonGjRtL88SnpqaK4OBg0b17d2FnZycqVqwoWrVqxcBNGaY+d23ZskUoFArh6Ogo1qxZI2JiYoQQH8eJ+vnnn4WdnZ0oUKCAqFy5sihTpowICgqSs2xZcJ7uPESlUkFHRwdXr15FfHw8dHV10bp1a/Ts2RMrVqyQmhdFRkYiOjoahoaGKFiwIOdlpDS2bNmC+fPn4+TJk9LxoT6+1P766y/cvn0bZcqUQdGiRWWqlHKT5ORk9OzZE40aNcLChQvh7OwMHx8f6OnpISIiAhMmTICLiwtcXFwAgE12SevOnTsHDw8PHDp0CJaWlihZsiQsLS1x5MgRFCtWDNHR0UhISNDoVtOqVSsULVoUa9askbFyygvevn2Lp0+fIiEhAQsWLMC7d+8we/ZsNGjQQNomNDQUhQsXBgCYmprKVSrlcMeOHcPLly9x6dIlXLt2DQMGDICrqyvMzMwQGxuL9+/f48yZMyhVqhTs7OzyZFdDhu48QPx//9v4+HiYmJhorDt48CC6d++Onj17ws/Pj19S6V+pjyU/Pz8sWLAAV65cQYECBaTlAHD27FnY2trC0dFR5mopJ1MfU0qlErq6utLyAQMGYM2aNejQoQN27NghrZs4cSIOHjyIw4cPo3jx4nKVTXnMixcvUKpUKcycORM//fQTIiIi0Lp1a2n8ATs7OwBAbGwsbty4AW9vb0RERCAoKAh6enoa506ib6U+nv766y8kJyfD3Nxc+t536NAhrFixAm/fvsWcOXNQr149AEhzjiVKD/WxplKpoFQqoa+vD+DjDRg3NzfcuXMHAwcOhKurKy/m/D8OpJbLqf9THDx4EC4uLqhTpw6aNWuGCxcuICEhAW3atMHWrVuxefNmDB06VO5yKZtTfzksXbo0njx5ggMHDmgsB4Bdu3Zh//79UCqVstRIOZ/6vHXo0CF0794d7u7uCAgIAACsWrUKjRs3xu3btzF9+nT4+Phg0KBBWL58OTZu3MjATVlGqVSiePHiGDt2LHbu3InQ0FAULVoUhw4dQmpqKlxcXBAWFgYACA4OxtKlS2FmZobr169DT08PqampDNyUadTnzT179qBdu3aoVasW2rRpg/HjxwMAWrduDQ8PDxQsWBCTJ0/G2bNnAYCBmzJMfawdO3YMI0eOROvWrbFs2TJcuHABOjo6WL9+PSpVqoSVK1di48aNiIuLk7vkbIGhO5f7NHDXqFEDnTp1gp6eHrp06YJNmzYhMTERbdq0wY4dO7BixQqMHj1a7pIpG1E3hAkKCsL27duxdOlSvHr1Ck2aNIGnpycGDhyItWvX4sWLF4iMjMTEiRMREBCA1q1b84OcvppCocDZs2fRo0cPGBkZ4c2bN3B3d8eMGTMAAKdOnZIuHq5atQpxcXE4f/48qlSpInPllJeoz3GNGjXCvXv3cP/+fQBA0aJFcfToUSQnJ6NLly548eIF6tevDy8vL2zduhX6+vpITU2VZncgygzqENSjRw906dIFc+bMQfPmzbFu3Tp0794dwMfgPXToUAghMHfuXCQkJIANXimj1Bd32rdvj8TERJiYmMDPzw8///wz9uzZA4VCgfXr16NatWqYO3cutm7dyuMM4OjluVlqaqqIi4sTLVq0EOPHj9dYN2TIEGFlZSWuXbsmLTt27Ji4f/9+VpdJ2dyOHTtEsWLFRN26dUXdunWFmZmZ2L59u3j79q2YMWOGMDAwkAZisbe3z5ODY1Dm2759uzRK+bt374Svr6/Q1dUVU6dOlbZJSEgQ8fHx0rzHRFkpJSVF+nfPnj1FzZo1RXR0tLQsIiJCVKlSRRQrVky8evVKWs45uUlbBg4cKDw8PKTHSUlJ4tChQ8LS0lJj9PJTp06J8PBwOUqkXODVq1eiZs2aYtGiRdKy8+fPC3d3d1G/fn1p0EghPuaNp0+fylFmtsM73bmQ+P+rSUIImJiY4K+//oK1tTUASPPh+fr6onz58pg1a5b0vObNm6Ns2bJZXzBlW9evX8fgwYMxc+ZMXLx4EXv37kVcXBxCQkJQoEABTJ06FRcuXICPjw/mzJmDCxcuoFq1anKXTTmQ+rx18+ZNnDp1Ctu3b5fWWVhYoF+/fvDx8YGXl5d03jIyMkK+fPmkvmRE2rRnzx507twZZ8+eRXJyssad6o4dOyI+Ph7BwcEAgNTUVNjY2ODAgQNo0qQJChUqJG376YCTRN9Cfd4MCQkBAISHhyMqKkpab2BggGbNmqF///4ICgqSmvk2adKEc3FThqiPtZSUFBgYGODVq1ewtLSU1terVw/9+vXD27dv8fDhQ2m5r68vx/j5fzzz50IKhQL+/v6oXbs2AKBIkSJS31tDQ0MpeNesWTNvTUpPGRYeHo4GDRrA3d0djx8/Rs2aNTFw4ED89NNPAIDExETUrFkT7dq1Q5s2bVCsWDGZK6acSt1crXbt2hg5ciT27NmDoKAgfPjwAcDHc5e7uzt8fX0xdepULFiwQOaKKS8JDAxEQkICHj58CHd3d9SvXx9HjhxBaGgoAKBLly4wMjLCwoULAUAaJK148eLYsGEDdHV1Oc4FZTr1ebNDhw64e/cunJ2d8ebNG1y5ckXaRl9fH8WLF0dISAhUKpWM1VJOpj7WZs+ejaioKBQtWhRRUVEQQkjHVf369WFlZYVDhw7JXG32xNCdi6ivQv31119Yt24dunXrBgCYMGECIiIiMGjQIAAfv7wCwOvXr5E/f36kpKSwrwV91tOnTxEVFYWoqCg0b94crVq1wrJlywAA27Ztw7hx45CamipzlZTTfPrFT33uef36Nf744w/4+flh69atWL58ObZu3Ypff/0VycnJAD6eu9zc3LB69Wq0adNGltopb1q4cCG2bt2KO3fuYMmSJbC1tYWrqyu6deuGBQsWIC4uDrNmzUJYWBhOnDgBIO2UdRzngjKL+rz54sULLFu2DMOHD0eFChVQt25dxMfHY9WqVbh8+bK0/ePHj2FnZ8djkDJMfaw9fPgQffv2hb29PcqWLYtGjRph5syZOHXqlMa5zszMDKVKlZKr3GyNo3jkYOKTqUbU/75w4QJ8fX1RqFAheHh4AABq1aqFsWPHYsGCBahXrx4aNmyIFy9eYPfu3bh8+TKbZhISExNhZGSUZnm7du2wd+9elC5dGt26dcOKFSukwHT16lW8fPkS8fHxMDc3z+qSKYdSz+f++PFjPH/+HE2bNsXRo0exbds2WFpaok2bNrC0tESFChWQL18+/PjjjwCAmTNnQl9fX7rjTZSVVq1ahXbt2mHTpk3o1asX2rRpg8OHD+PMmTOYOnUqdu/eDWNjY8TGxuLmzZto1qyZ3CVTLiL+MbWcerDJbdu2QU9PD61btwYA1K5dG7Nnz8bkyZNx48YN5M+fHxYWFjh58iQCAwPTTBtL9F8UCgXOnz+P58+fo1+/fnBzcwMAzJ07FxEREXBxccHYsWNhaWmJp0+f4syZM5gzZ47MVWdPvNOdQ6lUKigUCsTFxSE2NhaRkZEAgNOnT+P06dO4efMmChQoAAAwMTFBnz59sH79etjY2ODGjRtISUnB5cuXUbFiRTnfBmUDL1++hKurK06fPp1mXdGiRVGzZk3Y2NhIVy6fP3+OSZMmwd/fH15eXgzclG7qwH3z5k1Ur15d6velUqmwdu1a7N+/H8+fP5e27969OzZu3IjFixdjzJgxSElJkat0yuPMzMzwww8/IDAwULrz4+zsjLlz5+L27dto3rw5hBAICQlh00rKVOrve9HR0Xj48CFevHgBAHjz5g38/Pxw+vRpqZsD8HGE8lWrVmHYsGEoUqQIypUrh8uXL3N2B/pP6psqqampUgszAJg1axZ69+6NoKAgjW6pGzZswKhRoxAYGAgfHx8EBwcjMDAQ5cqVy/Lac4QsH7qNvpl65NO7d+8KZ2dn4eTkJCpXriw2bdokhBDC29tbGBkZiVGjRn3xNT4ddZXytqdPn4q6deuKNm3aiPPnz0vLU1NThRBCvH79WvTr10+ULVtWmJiYiJo1a4qSJUtylHLKEPV56+bNmyJfvnxi4sSJQgghVCqVEEKIixcvCl1dXeHu7i4iIiI0nrtu3TphaWmpMQI0UVZRf17euXNHFChQQGzYsEFapz5PpqamitTUVBEQEMDPV8o06vPm7du3Re3atUWJEiWEubm5mDBhgkhOThZHjhwRhQsXFn379hUPHz787Guoz7FE/0Z9rD148ED8+OOPon79+qJ3797i/v374t27d+LHH38UZmZm4uzZs0IIzeMqNjZWxMTEiPfv38tSe07B0J3DqP9T3LhxQ5iamorBgweLqVOnirZt2wp9fX2xa9cukZSUJGbNmiXKli0rPD09pecmJSXJVTZlc48ePRKtWrUSLVu21Aje6qmY3r9/L16/fi3mzp0r7t69K16+fClXqZQDqc9bt27dEvny5dOYukYIIQ4dOiQSEhLE8ePHhY6OjvDw8BCRkZEa28TGxmZZvZS3XblyRfr3woULxeHDh6VwvWLFCtG0aVPx+PFjjef8M9gweNO3+vRCpampqRg2bJjYvXu3GDRokDAwMBBz5swRQny8KFmsWDExatQojeOSU9NRen16rBUsWFB06tRJ9OrVS9jY2Ihq1aqJiIgIkZiYKJo3by5sbW3FjRs3hBD/O+/xwk76MHTnQA8ePBD6+vpi7ty50rJHjx6JypUri44dOwohhIiMjBSzZs0S5cqVE5MnT5arVMpBvhS8U1NTRVJSkpgwYYLo0qULL97QVwkPDxeFCxcW3bp101g+c+ZMUaxYMXHnzh0hhBBHjhwROjo6YtiwYby4Q1nu4cOHomzZsmLAgAFi9OjRQldXVzx48EBaf/v2bdGhQwexa9cuIcT/7nQTacP9+/dF/vz5xZgxYzSWt2rVSlSsWFH6PF6/fr0oVqyYGDt2rMbxSpRewcHBwszMTEyaNEla9vDhQ6GnpyddKI+Pj5eC982bN+UqNcdin+4cJjk5GT4+PlAoFNJ8yKmpqShdujSqVq0KpVKJ1NRUWFtbY+DAgejTpw9WrVqFmTNnylw5ZXelS5fG4sWLoVAoMHPmTFy4cAEAoFQqMW7cOMyfPx+//PILDAwMZK6UciKlUgkHBwckJiZKx9acOXPwxx9/YNWqVahQoQKUSiVatmyJQ4cOwdfXF/PmzeM0S5SlihUrhp9++gm7du3CqlWrEBQUhDJlykjjCVSsWBGVK1fG2LFjkZCQAF1dXc7+QVqzadMmvH//HlWrVkVMTIzU57Z27dowNTVFdHQ0AKBPnz6YO3cufH19sW7dOo5/QRmSnJyMAQMGAACmT58O4ONndsmSJVGrVi0olUoIIZAvXz7s3r0bFStWRL169XD79m0Zq86B5E79lHFXrlwR/fv3F+XLlxc7duwQQggREhIi8uXLJ5YsWaKxbWRkpFiwYIF48uSJHKVSDvTpHe/Tp0+Ln3/+WRgbG7MPN30z9bHVvn17MXDgQGFpaSmOHj0qrVc3UYuPjxe3bt0S9+7dk6tUymM+bYp74MABUaRIEVGqVCnh4eEhHZeftvJp06aN8PT0ZBNe0rrBgweLUqVKCR8fHyGEEG/fvhVmZmbC29tbCKHZtHfLli3i0aNHstRJOdvVq1eFtbW1cHFxkcZPefHihTAwMBDr16/X2Pb9+/fCxcWFx1oGKYTgJdqcKCgoCIsXL0ZQUBCGDRuGuXPnolWrVvD19QWgOb2EesRgovR6/Pgxxo4diwsXLiA+Ph6XLl1C9erV5S6LcoFHjx5h+PDhOH/+PGbOnIlx48ZJdwoVCgUmT56MNWvW4PHjx5zehrLEp5+RDx8+RHJyMiwsLHDs2DEsWbIE1atXx5o1azSe4+vrizNnzsDHxwdFihSRo2zK5ZRKpTSvtoeHB86ePQtXV1f4+vrCxcUFS5YsAQCN8yfRt7h+/TpatWqFli1b4ueff0bbtm3Rvn17+Pj4APj8VMWUfkxiOcDnrotUr14dI0eORPXq1TFu3Dg4OjpKgVupVGr8R2DgpowqXbo0FixYgAYNGiAoKIiBmzKNk5MTli1bhgYNGuDkyZM4d+4cFAoFFAoFpk6dioULF2Lfvn0M3JQlhBDSZ+SkSZPg7u6O0NBQ2Nraolu3bhg4cCCCgoIwcOBA6TlTpkxBkSJFcOvWLezdu1eu0imX09XVlbrXrFixAo0bN8bUqVNRsmRJzJgxA8D/phNj+KHMUKNGDRw5cgTHjx9H1apV0bJlSylwq481NR5zGcc73dnYvXv34OjoCCMjoy9eXbpx4wYWL16Mq1evwtvbG+3bt0+zDdHXSklJgb6+vtxlUC70+PFjjBw5EkIIeHt74/jx45g2bRrOnz+PGjVqyF0e5TEzZsyAr68v1q5di++++w6FChUCAMTFxWHdunVYsWIFTExMYGFhgaCgILx69QphYWEIDQ1Fo0aNZK6ecrNP73iPHDkShw8fxvjx49GzZ0/kz59f5uooN7p58yY6dOiA6tWrw9/fH+bm5nKXlCswdGdT27dvx9ixYzFnzhx07tz5X4O3uqn5jRs3MHnyZHTt2lXO0omI0kXdjeHq1at49+4dLl26xMBNWe758+do164dfvnlF3Tr1k1arg47Hz58wKlTp7Br1y7o6enB19cXenp6SE1NhZ6enoyVU17xafAeNGgQzp07Bw8PD/Tv3x9mZmYyV0c5gTo3pLc7grqpeePGjbFixQoULFgwK8rM1Ri6sykhBNq2bYvIyEj89NNPcHFx+c873rNmzUJERASOHz8OExMT3ukmomzv4cOH+PnnnzF79mxUqFBB7nIoD3r06BHq16+Pw4cPo0aNGhp9vJOSkpCQkAALCwuN5zBwU1b49Fj8NHj36tULDx8+xMmTJ9Mcm0Rf8vr1a5iZmcHY2BgHDhxAREQEBg0a9MXtg4KCULNmTfTu3Rvr169nrvhGDN3ZzIEDB1C4cGHUqVMHQgh07NgRISEh8PT0/M/gfevWLVhaWqJo0aJyvgUiogxhNwbKKp/revXmzRs4OTlh2rRpGD16NID/BZzAwECEhISgS5cu0jgD7L5FmUl9PP35558ICQnB69ev0bx5c5QuXTrNcfZp8I6MjISNjY0cJVMOFBcXhzJlyqBz586oXbs23NzcsHXrVnTp0uVfn3fr1i0YGxvDyckpiyrNvRi6s5G7d++iffv2qFevHkaNGiU1s+zYsSOePXuGiRMnolOnTv8avImIiCitT+8aRkdHw9TUVLpbPWbMGJw5cwY//fQTevXqBeBjwHF2dkbRokXh7+8vV9mUB+zcuRODBg1CvXr18ODBA1haWqJFixaYNm1amm0/Dd5EGXHhwgU0b94cKpUKS5Ys0RggkrSPw1pnIxUqVMCMGTPw8OFD+Pj44M8//wQA7NmzBw4ODpgzZw527dqFxMTEDPXLICIiyss+HaV81qxZ6Nq1K+rWrYudO3ciPj4eQ4cORaVKlTBp0iQMHDgQEyZMQNOmTREZGYmVK1fKXD3lZjdv3sSIESMwd+5c7Nu3D7t378bly5dhYGDw2e0ZuOlrKJVKWFtbIzExEampqXj48CESExPlLitPYejOJtTTQvz4448YOXIkbt++jaVLl0rBe+/evXB0dEwTvImIiOjLPp3qxsfHB7/99htatGgBKysrjB07FvPnz4eNjQ3mzZuHiRMn4ubNm7h//z4qVKiAGzduQF9fH6mpqTK/C8qtHj16BEdHRwwYMABPnjxB27Zt0b9/f3h6ekrrib6Vrq4uSpYsiXv37uH48ePw8fHB+PHjkZCQIHdpeQZDdzbx6VzavXv3/mzwVt/xXrBgATZv3oykpCS5yiUiIsoR1J+vd+7cwYMHD7Bx40b89NNPOHDgAAYMGIAtW7Zg3rx50NXVhYeHB65cuYJ9+/ZxlHLKNCqVSvq3+ibL27dvAQCJiYmwsbFBfHw8mjRpgubNm2P58uUAgOPHj2Pbtm3StkQZoW4R++zZM1y4cAFxcXEoXbo0mjRpgm3btmHVqlWYOHGiFLyXLFmCVatWyVlyrsbQnU0oFApcunQJv/zyCwDA1dX1i3e8zc3NsXr1aoZuIiKidDhw4ADq16+PXbt2abQSmzJlCnr37o3t27dj6dKlCA0N1bgILoRg4KZvpqOjg8ePH2Pv3r3Q1dXF9u3bMXr0aCQkJKBGjRrYs2cPLCws0KNHD/j5+UnH4L59+3Dt2jUeg/RVFAoFdu7cifr166NLly6oWrUq1q9fj3fv3qF9+/bYtm0b/Pz80LlzZ/z444+YMGECvvvuO7nLzrUYurOJlJQU7Nu3Dzt27MDUqVMBpA3e169fBwCcPn0aW7ZsQf78+eUsmYiIKFv65xixbdu2Rd++ffH27VucO3cO7969k9ZNmTIFP/74IxYvXowTJ05oPI/duCgzpKSkYPXq1XBxccHPP/+M7t2744cffoCxsTEqVKiAJUuWwMjICNbW1nj//j2ePn2KiRMnYtOmTZg9eza/71GGqM9/jx49wsyZM+Hp6YkTJ06gXr16WLBgAVavXo23b9+iffv2OHXqFFQqFVJTU3H58mVUqlRJ5upzL45eno1ERUXB19cXBw4cgLOzM7y8vAAA69evh6+vL4oXL45JkyahWrVqMldKRESU/W3duhU6Ojro2rUrAGDo0KE4cuQIfvrpJ/Ts2VNjjmN/f3/06dOHA1WRVkRHR6N79+44fvw4hg8fjsWLF0sj6kdGRsLf3x/Tp0+HjY0NzMzMoFQqERAQwO989FX+/PNPnDlzBs+ePYOPj4/UemLkyJE4deoU+vbti759+6Jw4cJISEiAjo4ODA0NZa46d2PozkKfTlei9vz5c9ja2kqPX716hT/++ANHjx5F69atMXPmTACAn58fNm/ejICAAM7DTURE9B9evHiBrl27wtTUFCNHjkS7du0AAB4eHjh58iTGjRuHXr16wdzcXON5nJKJtCEhIQF9+vTBmzdvcOvWLaxcuVK6GKT26NEj3Lt3D4UKFULp0qVhbW0tU7WU03Xo0AH79+9HrVq1cObMGRgbG0vrRo4ciXPnzqFTp04YPnw4ChQoIGOleQdDdxZRB+6goCAcPHgQU6ZMwd27d9GvXz/06tULo0aNkraNjIyEt7c3du/ejeHDh2PChAkAgJiYmDRfDoiIiOhjk8p/Ngc/d+4c5syZA5VKhcGDB6NDhw4AgMGDB+P06dMYOHAgBg8eDFNTUzlKpjxECIGkpCS8ffsWc+bMwbp167Bq1Sp07dpVOnbfvXvHAESZpl+/fjh8+DC8vLzQo0cP5MuXT2Pdw4cPsX//fhQsWFDGKvMO9unOAurAHRwcjFq1aiEmJgYAYGhoiJIlS2LHjh1YtmyZtL2NjQ3GjBmD1NRUzJs3DzNmzAAA9ukhIiL6DKVSKQXuyMhIaXmDBg3g6ekJIQSWL1+OAwcOAACWL1+OqlWr4urVqzAxMZGlZsrd1Pe0nj59ilu3buHGjRswMjJC0aJFMWrUKLi5uWHgwIHYvn07FAoFZs2ahXHjxiE+Pl7myimn+fT+6acj5a9ZswZ169bFb7/9ht27d2vMy71mzRrs2rWLgTsL8U63lqkD961bt1C3bl2MGTNG6qsNAC9fvsTUqVNx7949uLq6YsiQIdLy0aNHo2LFinB3d4ednZ1cb4GIiChbmjNnDiZOnCg99vf3x86dOzFp0iTUqVNHWn7u3DmMGjUKZmZm8PT0RKtWrQD87zP6c3fJib6W+njas2cPJk2ahPj4eJiYmKBWrVrw9/cHAKmv7e+//44GDRrgypUruHjxIqpXry5v8ZSjqI+1EydOYP/+/bh//z769++PatWqwcnJCQDg4uKCJ0+e4JdffkHHjh01mppT1uGdbi3T0dHBkydPUKdOHYwbNw5eXl7SFal169bh7du3mDp1KsqXL49169Zh1qxZePnyJZYuXYqkpCSMGDGCgZuIiOgftm/fjqCgIGneYwDQ19eXPkOvXLkiLW/QoAGGDRuGGzduYOrUqTh79iyAj5/RKpWKgZsylUKhwJEjR9CnTx+MGDEC58+fx88//4z169ejR48eAABHR0dMmTIFu3btQtOmTXH79m0Gbsow9cUdFxcXfPjwAfb29pg6dSoWLFggzXq0e/dulC1bFj/99JPU2odkIEirlEql8PT0FJaWluK3336Tls+cOVMULlxYXL58WQghxNOnT8XEiRNFkSJFhJ2dnShatKgICgqSqWoiIqLsLSYmRqSmpgohhNi3b5+0fNeuXaJ27dqiZ8+e4tKlS9LyrVu3itatW4tJkyYJpVKZ5fVS7nXs2DERFRUlPX7z5o3o0aOHmD9/vhBCiIiICFGiRAnRrl07UahQIdGpUye5SqVcJigoSDg4OIiVK1cKIYRITk4WpqamwtbWVvTp00fcuHFD2vbHH38UT58+lalSYvPyLBAREYF58+bh8uXL6Nu3L2JjY7FgwQKsW7cOzs7OUtOQ+Ph4REZGIiQkBBUqVOAo5URERP8wceJEdO/eXZpK6dq1a+jcuTOaNGmCdevWAQB27tyJefPmwcHBAd27d0fjxo3h7u6ORo0aYfTo0VAoFJ+dUYQoI4QQOHHiBEaMGIGzZ8/CysoKwMduC35+fmjcuDEKFSqEH374Ad9//z2WLFmCRYsWwdPTE61bt+ZdR/oq4pPuMKdOncKhQ4ewYMEChIaGokmTJmjbti1q1qyJwYMHo3v37vDw8EDdunVlrpoYurNIVFQUvLy8cPz4cTx9+hRHjx5F06ZNOTUJERFROt28eRMeHh7Q1dXFqlWrUL58ebx79w7r1q3Dhg0bUKVKFaxZswYAsHfvXqxevRpnz56FpaUlTExMcP36dejp6bEPN2WqV69ewcrKCk+fPoWRkRGKFSsmXdRZvXo1Nm7ciE2bNsHGxgbr1q3DypUrER0djUOHDrELIf0n9fnq/fv30NfXh5GREY4fP47SpUvDxsYGL1++hJ2dHbp37w5zc3MsX74cBgYGqFmzJsLCwtC9e3csWLAAhoaGPO/JiJd4s4i1tTUmT56Mli1bonz58rhx4wYAQFdXV6M/GhEREX1e1apVMXPmTFhYWMDd3R23b99GgQIF0LdvX7i5uSEoKAj9+vUD8HGe2kWLFuHAgQOYN28egoKCoKenh9TUVH7xpEyh/v5WuHBhPHnyBA0aNMDy5csRGRkptaK4d+8eXr9+DRsbGwDA/fv38cMPP+DPP/9k4KZ0USgUiIyMROXKlXH+/Hls2rQJLVu2xJ07d2BoaAhHR0fExcXh2bNnqF+/PgwMDBAXF4fy5ctj3Lhx+Pnnn2FkZMTznsz05C4gL7GysoKnpydUKhW2b9+O1NRUTJgwAbq6umzmRkRE9C9SUlKgr6+PFi1aIDo6GqtWrcLgwYOxZs0alClTBq6urgA+ToXTr18/rFmzBqVKlUKpUqWk11AqldDT41cfyhzq7226urooVaoU+vbti4CAABgZGcHd3R1FixZF586dsXLlSjRp0gQFCxbEiRMncOnSJRgZGclcPeUkNjY2qFevHrp06YL3799j5cqVaNu2rTQ4c2xsLHR0dPDo0SNcunQJR44cQVBQEP744w/O/Z5NMOVlMWtra0yaNAm1atXC/v37MW3aNABg4CYiIvoCIQT09fUBAN7e3ti6dStevXqFS5cuwd3dHXfu3IGFhQVcXV3Rr18/BAUFoX///tLz1Xck2Z2LMou6yW9gYCB8fX0BALNnz0b//v2xfPlyrF27FlFRUfj++++xefNm5M+fH2ZmZjh//jzKly8vc/WUk6jPX6NGjUJsbKzUhSExMREKhQIKhQJ2dnbo3bs3duzYgR49emDNmjVYv349A3c2wj7dMomKioKnpydevHiBLVu2oFChQnKXRERElK0tXrwYkyZNwu7du+Hg4IBjx45hy5YtSEpKwurVq1GhQgVER0dj/fr18Pf3R/369bF48WK5y6ZcaufOnfDw8EC7du0wZswYVK5cGQAwa9YsrFixAh4eHvDw8IClpSUAIDk5GQYGBnKWTDnMp4MtJycn4/79+1i9ejV27NiBNWvWoG3btjA0NJS2f/ToEaKjo1GsWDEUK1ZMxsrpnxi6ZfTq1SsAkEa7JCIiorSEEFAqlXB1dUXBggXh4+Mjrdu7dy+mTJmC/PnzY/Xq1ShTpgxiYmKwatUqrFu3DkuWLEGjRo1krJ5yoz///BMtWrTA/PnzNVpVqM2aNQurV69Gz549MWLECKlPN1F6qQP3kSNHsHXrVnh4eKBOnToAAFdXV+zdu1eaCcnQ0BCrVq1Cs2bNUKJECXkLp89im2YZWVlZMXATERF9hkqlkv5WKBTQ09NDvnz58OjRI6SmpkrbdejQAS1atMDFixfRpk0bPHnyBObm5nB1dUVcXBxiY2PleguUiwUHB6N27dro06eP1Pz304FxJ0+ejG7dumHfvn28u00Zor4fqlAosHPnTnTq1AllypSBiYmJtM369evRtm1b9OvXD4sWLcKIESPg4eGBhIQEucqm/8DQTURERNnKli1bMGDAADx69AiJiYnS8urVqyM8PBzHjh1DUlKStLx8+fJo1aoV3Nzc4ODgAAB4+vQpQkND2X+WtCIsLAwPHz6Ejo4OdHV1IYSQxgy4fPkyAGDu3Lk4c+YMuxBSuqgvEKpHGb99+zZGjx4NHx8fTJw4EZUqVQLwcUR8AAgICED37t1x8OBBXLp0CdevX0e5cuXkKZ7+E5uXExERUbYRGxuL6tWrIzY2FtbW1qhduzbq1asHd3d3AECnTp1w584dzJw5E/Xq1YOZmRnc3NxQtWpVTJs2DQqFQpoRJDIyks16SSu2bt2KSZMmYfHixfjhhx9gaGgIlUoFlUqF7t27o23btnB3d+ec8JQu48aNw4cPH7BkyRJphoUjR45g7NixuHXrFoCPd7cDAgJw//59fP/999i5cyeAj91V8+XLBzMzM9nqp//G0E1ERETZhlKpxJQpU2Bvb49atWrh1KlT8PLyQosWLdC4cWMMGjQIXbt2RVRUFO7fvw8bGxuoVCrcuXMHenp6Gk0zib6VOjSHhYVBpVIhISEB5cuXh1KpROPGjRETE4OZM2fihx9+QGpqKhYuXAh/f3+cPn1aY7o6on9z/vx5mJqaomrVqkhMTISRkRGuXbuGvn37okKFCnjy5AlsbW1ha2uL5s2bw8XFBRs3bkSvXr3kLp3SiaGbiIiIspXDhw+je/fuOH/+PCpXrozExETMnj0bs2bNQuPGjeHs7AxTU1NYWloiMTERPXv2hK6uLpRKJacFo0yjDty7du3ChAkToFQq8ddff6Fz586YO3cuChUqhDZt2iA8PByvXr1CuXLl8OTJExw+fBjVqlWTu3zKIdQtc4CPd7e3bNkiHV9r1qxBYGAgihcvDldXV5QvXx4fPnxAy5YtMW3aNDRr1uz/2rv3oKjq/4/jz1VEBELASMxARlEDUnNSEagIxVHwglOi4JXIvIylljVZaZCXJjTFMbUmdMTbKFmNIq4SrYJCecs0TETKK4U2eUvJG7K/Pxr2F6F+U1wX8PX475z9nHPeZ9nZ4bXvzznHxtXLf6XQLSIiIjXOuHHjAFi4cCEAAQEBtGnTBh8fH4qKijAajaxZs4aBAwcCKHCLVWzbto2IiAiSk5Px9/fn4sWLxMfH07FjR5YvX467uzvbtm3jwIEDNG3alC5dutCiRQtbly211JYtWwgPDycuLo65c+fi6upa5RKFhIQEli1bxrZt2/D29rZhtXInFLpFRESkxlmyZAlLly5lw4YNdO/eHUdHR4xGIy4uLhQXF7N9+3aio6Mt1z+KWENCQgI7d+5k8+bNlnUFBQWEhoby/PPP8+mnn9qwOqntKgJ1cXExDz30EI0bNyYnJ4cePXowePBgZs6caXne9oYNG9iwYQPr1q0jMzNTsylqGd29XERERGqcl156iWvXrtGkSRNcXFxIT0/HxcUFgMcee4zY2Fjs7OwqPT5M5F4ym82UlJRw/fp1y/LVq1fx8/Nj0aJFfPnllxw7dgz1r+RuVATu9PR0hg8fztq1a7l8+TKhoaFkZWWxatUqpk6dym+//UZ5eTmnT5/Gzs6OnJwcBe5aSKFbREREapSKEDN+/HgCAgKYM2cO7u7uNw036nTLvVLx+SouLqa0tBSDwUCvXr3Izc3FaDRiMBgsz9x2cHCgSZMmODk56aZ9clcMBgPr1q1j0KBB9O3bl/DwcBo1agRAaGgoX3/9NStXrmTKlCmcO3eOkSNHMmfOHD0WrJZS6BYREZEapSLEhIWFcebMGbKysiqtF7nX/t11XL16NVevXuXZZ59lxIgRvPbaa2zcuBGDwYDZbOa7777D0dFRP/rIXTt58iQJCQkkJyfz2muv0bx5cy5duoTRaOTo0aOEhYWRmZlJamoqU6ZMoby83BLKpfbRN4WIiIjUSM2bN+ftt9/m/fffp1+/fvj7+9u6JKmjKrqOsbGxfPDBB4SHh9OwYUMaNmzI66+/jtlspn///jz55JM0aNCAQ4cOYTKZcHNzs3XpUkvVr1+fa9eu0axZM8rKykhKSmLTpk0cPnyYa9eukZOTQ1hYGLm5ubi5uVnucC61k26kJiIiIjXWL7/8wrRp01i6dKn+6RSrOXnyJH369GHs2LGMGTOG69evc/nyZXbs2EH79u3x9PTEaDTy7bff4uHhQe/evfUcbrkjFbMpTp06haOjI2azmbi4OIqLizl69CghISE8/fTTREdHM2DAAIKDg0lOTtZTGeoIdbpFRESkxmrVqhWpqakYDAY9Fkys5lZdx0OHDlFeXk5OTg6RkZFERkbaulSphf55+cInn3zCiBEjiImJYfLkyRQUFFBaWkpsbCzu7u4ANGvWjBYtWuj7rg7RT8YiIiJSo1Vcy61/QOVeqZjoeerUKf7880+cnJx4/PHHmTFjBp6enuzevZv+/fvz/fff06pVK5YsWWLjiqU2q7h8ISYmhrCwMLp06QJAYGAgcXFxjBs3Dnd3dy5cuMDUqVPZtWsXffv2tXHVci+p0y0iIiIiD4y76Tp6e3vbuGqpzY4dO8Y777xDcnIyo0ePpqysjNLSUvbu3Yu3tzctWrTg888/Z9OmTXzzzTds3ryZNm3a2LpsuYcUukVERETkgVHRdRw8eDCJiYmVuo6BgYGWcRcuXOCjjz5i165dzJkzx1blSh1Qv3597O3t8fHx4cqVKyQnJ7Nx40Z+/vlnzGYz2dnZ+Pv78+uvvzJlyhRatWpl65LlHtON1ERERETkgXHs2DEiIyOZMGGCpet49erVW3Yd09PT6dixo63LlhquvLy80s0eK5bNZjPHjx9n+PDhODg48MMPPxASEkJQUBDh4eGMHj2aqKgopk6dSllZmR5DV0fpryoiIiIiDwx1HcUa6tWrx6FDh1ixYgWjRo2yXJJgMBjw8fFh+vTp5OfnExkZydChQ3n44YcBcHd3x9nZGUCBuw5Tp1tERERE6hR1HeV+u379OiEhIezZswdfX1+ioqLo0qUL0dHRljH//ExdvnyZmTNnsmTJErZv365H0NVx+iYRERERkTpFXUe53xo0aEB0dDSxsbE88cQT5OXlMXr0aNLT0wkKCmLs2LGWz9SKFSswmUxkZWVhNBoVuB8A6nSLiIiISJ2irqPYQnZ2NlFRUZhMJjp16kRJSQmfffYZs2bNon379sTHxxMREcHFixdZu3YtgwcP1mftAaHQLSIiIiJ1zuzZs7Gzs7N0HefPn0/v3r0tXceK57//s+uYkZGhm6ZJtbz55puUlJSwePFiHBwciImJYf/+/QQGBnLkyBF27NjB/PnziY+Px97e3tblyn1S738PERERERGpXTp37kxiYiJubm4kJiby008/4evry5tvvklwcDApKSkUFxfTqVMnWrZsSU5OjgK3VFtFuLa3t2fkyJFkZ2fzxRdfkJqaSkpKCrNnz+aZZ55R4H7AqNMtIiIiInWSuo5iC6GhoeTm5uLp6YnRaKRDhw62LklsTHeIEBEREZE6KTAwkLlz51bqOppMJgICAigsLGTz5s3qOso9YzabMRgMvPXWW5w6dYqkpCQ6dOhgWS8PLnW6RURERKTOUtdR7rfTp0/z9NNPExMTw/Tp021djtQAuqZbREREROqcir7SW2+9ha+vLwsXLrR0HUWsqWnTpiQkJJCcnMyuXbtsXY7UAArdIiIiIlLnVEznfeqppygvL+f777+vtF7EmsLCwujcuTOPPvqorUuRGkDTy0VERESkTlu5ciVjxoxhy5YtdOnSxdblyAPiypUrODg42LoMqQHU6RYRERGROk1dR7EFBW6poE63iIiIiNR56jqKiK0odIuIiIiIiIhYiaaXi4iIiIiIiFiJQreIiIiIiIiIlSh0i4iIiIiIiFiJQreIiIiIiIiIlSh0i4iIiIiIiFiJQreIiIiIiIiIlSh0i4iI1EDZ2dkYDAbOnz9/23E+Pj7MmzfvvtQkIiIid06hW0RE5C7FxcVhMBgwGAzY29vj6+vLtGnTKCsrq/a+g4ODKSkpoXHjxgCkpqbi6upaZdzu3bsZNWpUtY/3v5jNZlJSUggKCsLFxQVnZ2cCAgKYMGECP//8s9WPLyIiUlspdIuIiFRDr169KCkpoaioiEmTJpGYmMjs2bOrvV97e3s8PT0xGAy3Hefh4YGjo2O1j3c7ZrOZwYMHM378eCIjI/n66685ePAgS5YswcHBgRkzZtxy22vXrlm1NhERkZpOoVtERKQaGjZsiKenJy1atGDs2LGEh4eTnp4OwLlz5xg+fDhubm44OjoSERFBUVGRZdvjx4/Tt29f3NzccHJyIiAgAKPRCFSeXp6dnc2LL77IhQsXLJ31xMREoOr08hMnThAVFYWzszMuLi4MHDiQ06dPW15PTEzkySefZMWKFfj4+NC4cWNiYmK4ePHiLc8xLS2NNWvWkJaWxtSpU+natSve3t507dqVpKQkli5dahkbFxdH//79mTlzJo8++iht27YFID8/n27dutGoUSOaNGnCqFGjuHTpkmW75557jokTJ1Y6bv/+/YmLi7Ms+/j4MH36dGJjY3FycqJ58+YsXLjwv/2hREREbEShW0RE5B5q1KiRpbsbFxfHnj17SE9P57vvvsNsNhMZGcn169cBGDduHFevXmXbtm3k5+eTlJSEs7NzlX0GBwczb948XFxcKCkpoaSkhDfeeKPKuPLycqKiojh79iw5OTlkZWVx5MgRBg0aVGncL7/8wrp168jIyCAjI4OcnBw+/PDDW57T6tWradu2Lf369bvp6//uxptMJgoLC8nKyiIjI4PS0lJ69uyJm5sbu3fvZu3atXzzzTe88sort38zb2L27Nl06NCBH374gcmTJzNhwgSysrLueD8iIiL3i52tCxAREakLzGYzJpOJzMxMXn31VYqKikhPTycvL4/g4GAAVq1ahZeXF+vWrSM6OpoTJ07wwgsv0K5dOwBatmx5033b29vTuHFjDAYDnp6et6zBZDKRn5/P0aNH8fLyAmD58uUEBASwe/duOnfuDPwdzlNTU3nooYcAGDZsGCaTiZkzZ950v4cPH7Z0rCtMnDiRxYsXA+Dq6kpxcbHlNScnJxYvXoy9vT0AKSkpXLlyheXLl+Pk5ATAggUL6Nu3L0lJSTRt2vQ272xlISEhTJ48GYA2bdqQl5dHcnIyPXr0+M/7EBERuZ/U6RYREamGjIwMnJ2dcXBwICIigkGDBpGYmEhBQQF2dnYEBgZaxjZp0oS2bdtSUFAAwPjx45kxYwYhISEkJCTw448/VquWgoICvLy8LIEbwN/fH1dXV8sx4e9p2hWBG6BZs2b8/vvvd3Ssd999l3379vHee+9VmiYO0K5dO0vgrqirQ4cOlsANf4fn8vJyCgsL7+i4QUFBVZb/eW4iIiI1jUK3iIhINYSFhbFv3z6Kioq4fPkyy5YtqxQub2fkyJEcOXKEYcOGkZ+fT6dOnfj444+tXDE0aNCg0rLBYKC8vPyW41u3bl0lHHt4eODr68sjjzxSZfx/Pf9/qlevHmazudK6imn4IiIitZlCt4iISDU4OTnh6+uLt7c3dnb/f9WWn58fZWVl7Ny507LuzJkzFBYW4u/vb1nn5eXFmDFj+Oqrr5g0aRIpKSk3PY69vT03bty4bS1+fn6cPHmSkydPWtYdPHiQ8+fPVzrmnYqNjaWwsJD169ff1fZ+fn7s37+f0tJSy7q8vDzq1atnmbbu4eFBSUmJ5fUbN25w4MCBKvvasWNHlWU/P7+7qktEROR+UOgWERGxgtatWxMVFcXLL79Mbm4u+/fvZ+jQoTRv3pyoqCjg7+uiMzMzOXr0KHv37mXr1q23DJA+Pj5cunQJk8nEH3/8wV9//VVlTHh4OO3atWPIkCHs3buXXbt2MXz4cEJDQ+nUqdNdn0tMTAwDBgwgJiaGadOmsXPnTo4dO0ZOTg5paWnUr1//ttsPGTIEBwcHRowYwYEDB9i6dSuvvvoqw4YNs1zP3a1bNzZu3MjGjRs5dOgQY8eO5fz581X2lZeXx6xZszh8+DALFy5k7dq1TJgw4a7PTURExNoUukVERKxk6dKlPPXUU/Tp04egoCDMZjNGo9EyvfvGjRuMGzcOPz8/evXqRZs2bVi0aNFN9xUcHMyYMWMYNGgQHh4ezJo1q8oYg8HA+vXrcXNz49lnnyU8PJyWLVuSlpZWrfMwGAykpaUxb948jEYj3bt3p23btsTHx+Pl5UVubu5tt3d0dCQzM5OzZ8/SuXNnBgwYQPfu3VmwYIFlTHx8PCNGjLD8SNCyZUvCwsKq7GvSpEns2bOHjh07MmPGDObOnUvPnj2rdX4iIiLWZDD/+wIqERERkRrIx8eHiRMnVnmet4iISE2mTreIiIiIiIiIlSh0i4iIiIiIiFiJppeLiIiIiIiIWIk63SIiIiIiIiJWotAtIiIiIiIiYiUK3SIiIiIiIiJWotAtIiIiIiIiYiUK3SIiIiIiIiJWotAtIiIiIiIiYiUK3SIiIiIiIiJWotAtIiIiIiIiYiUK3SIiIiIiIiJW8n/XQ3dmpy6HpQAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#**Exploring Difficult Ratings**\n"
      ],
      "metadata": {
        "id": "EJrjVuxW1qzK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Drop NaNs\n",
        "avg_difficulty = (\n",
        "    df[['Position Group', 'Difficulty Rating']]\n",
        "    .dropna()\n",
        "    .groupby('Position Group')\n",
        "    .mean()\n",
        "    .reset_index()\n",
        "    .sort_values(by='Difficulty Rating', ascending=False)\n",
        ")\n",
        "\n",
        "# Plot\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.barplot(data=avg_difficulty, x='Position Group', y='Difficulty Rating')\n",
        "plt.title('Average Difficulty Rating by Position Group')\n",
        "plt.xlabel('Position Group')\n",
        "plt.ylabel('Average Difficulty Rating')\n",
        "plt.xticks(rotation=45)\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "EVfINpH00HT_",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        },
        "outputId": "f2ea869f-05cf-43c9-c639-151ff6a03b7e"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Drop NaNs in both 'Overall Rating' and 'Difficulty Rating' to avoid plot issues\n",
        "scatter_df = df[['Overall Rating', 'Difficulty Rating']].dropna()\n",
        "\n",
        "# Plot\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.scatterplot(data=scatter_df, x='Overall Rating', y='Difficulty Rating', alpha=0.6)\n",
        "plt.title('Overall Rating vs. Difficulty Rating')\n",
        "plt.xlabel('Overall Rating')\n",
        "plt.ylabel('Difficulty Rating')\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "8HIvy5jE2GWc",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        },
        "outputId": "02240d8f-945c-4fc4-db8c-5af19b20e971"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Drop NaNs in both 'Overall Rating' and 'Difficulty Rating' to avoid plot issues\n",
        "scatter_df = df[['Overall Rating', 'Difficulty Rating']].dropna()\n",
        "\n",
        "# Plot\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.scatterplot(data=scatter_df, x='Difficulty Rating', y= 'Overall Rating', alpha=0.6)\n",
        "plt.title('Overall Rating vs. Difficulty Rating')\n",
        "plt.ylabel('Overall Rating')\n",
        "plt.xlabel('Difficulty Rating')\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "iLB_LDr32bIZ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        },
        "outputId": "63ac417c-f025-4224-8a16-e66dc84ad1b9"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}
